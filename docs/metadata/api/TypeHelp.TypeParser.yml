### YamlMime:ManagedReference
items:
- uid: TypeHelp.TypeParser
  commentId: T:TypeHelp.TypeParser
  id: TypeParser
  parent: TypeHelp
  children:
  - TypeHelp.TypeParser.#ctor(System.String)
  - TypeHelp.TypeParser.Base64RePat
  - TypeHelp.TypeParser.Base64RePatExact
  - TypeHelp.TypeParser.CanParse(System.Type)
  - TypeHelp.TypeParser.CanParse(System.TypeCode)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.Decimal,System.Decimal,System.Decimal)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.Double,System.Double,System.Double)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.Guid,System.Guid,System.Guid)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.Int16,System.Int16,System.Int16)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.Int32,System.Int32,System.Int32)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.Int64,System.Int64,System.Int64)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.SByte,System.SByte,System.SByte)
  - TypeHelp.TypeParser.Clamp(System.Boolean,System.Single,System.Single,System.Single)
  - TypeHelp.TypeParser.Clamp(System.Byte,System.Byte)
  - TypeHelp.TypeParser.Clamp(System.Byte,System.Byte,System.Byte)
  - TypeHelp.TypeParser.Clamp(System.Char,System.Char)
  - TypeHelp.TypeParser.Clamp(System.Char,System.Char,System.Char)
  - TypeHelp.TypeParser.Clamp(System.DateTime,System.DateTime)
  - TypeHelp.TypeParser.Clamp(System.DateTime,System.DateTime,System.DateTime)
  - TypeHelp.TypeParser.Clamp(System.Decimal,System.Decimal)
  - TypeHelp.TypeParser.Clamp(System.Decimal,System.Decimal,System.Decimal)
  - TypeHelp.TypeParser.Clamp(System.Double,System.Double)
  - TypeHelp.TypeParser.Clamp(System.Double,System.Double,System.Double)
  - TypeHelp.TypeParser.Clamp(System.Int16,System.Int16)
  - TypeHelp.TypeParser.Clamp(System.Int16,System.Int16,System.Int16)
  - TypeHelp.TypeParser.Clamp(System.Int32,System.Int32)
  - TypeHelp.TypeParser.Clamp(System.Int32,System.Int32,System.Int32)
  - TypeHelp.TypeParser.Clamp(System.Int64,System.Int64)
  - TypeHelp.TypeParser.Clamp(System.Int64,System.Int64,System.Int64)
  - TypeHelp.TypeParser.Clamp(System.Numerics.BigInteger,System.Numerics.BigInteger)
  - TypeHelp.TypeParser.Clamp(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  - TypeHelp.TypeParser.Clamp(System.Numerics.Complex,System.Numerics.Complex)
  - TypeHelp.TypeParser.Clamp(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)
  - TypeHelp.TypeParser.Clamp(System.SByte,System.SByte)
  - TypeHelp.TypeParser.Clamp(System.SByte,System.SByte,System.SByte)
  - TypeHelp.TypeParser.Clamp(System.Single,System.Single)
  - TypeHelp.TypeParser.Clamp(System.Single,System.Single,System.Single)
  - TypeHelp.TypeParser.Clamp(System.UInt16,System.UInt16)
  - TypeHelp.TypeParser.Clamp(System.UInt16,System.UInt16,System.UInt16)
  - TypeHelp.TypeParser.Clamp(System.UInt32,System.UInt32)
  - TypeHelp.TypeParser.Clamp(System.UInt32,System.UInt32,System.UInt32)
  - TypeHelp.TypeParser.Clamp(System.UInt64,System.UInt64)
  - TypeHelp.TypeParser.Clamp(System.UInt64,System.UInt64,System.UInt64)
  - TypeHelp.TypeParser.Comp(TypeHelp.Cmp)
  - TypeHelp.TypeParser.CompFromInt(System.Int32)
  - TypeHelp.TypeParser.Compare(System.Boolean,System.Byte[],System.Byte[])
  - TypeHelp.TypeParser.Compare(System.Boolean,System.Object,System.Object)
  - TypeHelp.TypeParser.Compare(System.Int32,System.Int32)
  - TypeHelp.TypeParser.Compare(System.Int64,System.Int64)
  - TypeHelp.TypeParser.Compare(System.String,System.String)
  - TypeHelp.TypeParser.Compare(System.UInt32,System.UInt32)
  - TypeHelp.TypeParser.Compare(System.UInt64,System.UInt64)
  - TypeHelp.TypeParser.CompareEnumTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  - TypeHelp.TypeParser.CompareEnumValues(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  - TypeHelp.TypeParser.CompareEnums(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  - TypeHelp.TypeParser.CompareGuids(System.Boolean,System.Guid,System.Guid)
  - TypeHelp.TypeParser.CompareGuids(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  - TypeHelp.TypeParser.CompareNulls(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  - TypeHelp.TypeParser.CompareNumericStrings(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  - TypeHelp.TypeParser.CompareNumericTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  - TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  - TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo,TypeHelp.TypeInfo,System.Boolean)
  - TypeHelp.TypeParser.CompareTuples(System.Object,System.Object)
  - TypeHelp.TypeParser.CompareTypeCoexes(TypeHelp.TypeCoex,TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.CompareTypes(System.Object,System.Object)
  - TypeHelp.TypeParser.CompareValues(System.Object,System.Object)
  - TypeHelp.TypeParser.DateIsoRePat
  - TypeHelp.TypeParser.DateUtcRePat
  - TypeHelp.TypeParser.GetBigInteger(System.Nullable{System.Numerics.BigInteger}@)
  - TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger)
  - TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger,System.Numerics.BigInteger@)
  - TypeHelp.TypeParser.GetBool(System.Boolean)
  - TypeHelp.TypeParser.GetBool(System.Boolean,System.Boolean@)
  - TypeHelp.TypeParser.GetBool(System.Nullable{System.Boolean}@)
  - TypeHelp.TypeParser.GetByte(System.Byte)
  - TypeHelp.TypeParser.GetByte(System.Byte,System.Nullable{System.Byte}@)
  - TypeHelp.TypeParser.GetByte(System.Nullable{System.Byte}@)
  - TypeHelp.TypeParser.GetCodeFlag(System.TypeCode)
  - TypeHelp.TypeParser.GetCoexFlag(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.GetComplex(System.Nullable{System.Numerics.Complex}@)
  - TypeHelp.TypeParser.GetComplex(System.Numerics.Complex)
  - TypeHelp.TypeParser.GetComplex(System.Numerics.Complex,System.Numerics.Complex@)
  - TypeHelp.TypeParser.GetDateTime(System.DateTime)
  - TypeHelp.TypeParser.GetDateTime(System.DateTime,System.DateTime@)
  - TypeHelp.TypeParser.GetDateTime(System.Nullable{System.DateTime}@)
  - TypeHelp.TypeParser.GetDecimal(System.Decimal)
  - TypeHelp.TypeParser.GetDecimal(System.Decimal,System.Nullable{System.Decimal}@)
  - TypeHelp.TypeParser.GetDecimal(System.Nullable{System.Decimal}@)
  - TypeHelp.TypeParser.GetDouble(System.Double)
  - TypeHelp.TypeParser.GetDouble(System.Double,System.Double@)
  - TypeHelp.TypeParser.GetDouble(System.Nullable{System.Double}@)
  - TypeHelp.TypeParser.GetFloat(System.Nullable{System.Single}@)
  - TypeHelp.TypeParser.GetFloat(System.Single)
  - TypeHelp.TypeParser.GetFloat(System.Single,System.Single@)
  - TypeHelp.TypeParser.GetInt(System.Int32)
  - TypeHelp.TypeParser.GetInt(System.Int32,System.Nullable{System.Int32}@)
  - TypeHelp.TypeParser.GetInt(System.Nullable{System.Int32}@)
  - TypeHelp.TypeParser.GetLong(System.Int64)
  - TypeHelp.TypeParser.GetLong(System.Int64,System.Nullable{System.Int64}@)
  - TypeHelp.TypeParser.GetLong(System.Nullable{System.Int64}@)
  - TypeHelp.TypeParser.GetSByte(System.Nullable{System.SByte}@)
  - TypeHelp.TypeParser.GetSByte(System.SByte)
  - TypeHelp.TypeParser.GetSByte(System.SByte,System.Nullable{System.SByte}@)
  - TypeHelp.TypeParser.GetShort(System.Int16)
  - TypeHelp.TypeParser.GetShort(System.Int16,System.Nullable{System.Int16}@)
  - TypeHelp.TypeParser.GetShort(System.Nullable{System.Int16}@)
  - TypeHelp.TypeParser.GetType(System.Object)
  - TypeHelp.TypeParser.GetType(System.TypeCode)
  - TypeHelp.TypeParser.GetType(System.TypeCode,System.Type@)
  - TypeHelp.TypeParser.GetType(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.GetType(TypeHelp.TypeCoex,System.Type@)
  - TypeHelp.TypeParser.GetTypeCode(System.Object)
  - TypeHelp.TypeParser.GetTypeCode(TypeHelp.TCF)
  - TypeHelp.TypeParser.GetTypeCode(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.GetTypeCoex(System.Object)
  - TypeHelp.TypeParser.GetTypeCoex(System.Type)
  - TypeHelp.TypeParser.GetTypeCoex(System.TypeCode)
  - TypeHelp.TypeParser.GetTypeCoex(TypeHelp.TCF)
  - TypeHelp.TypeParser.GetTypeInfo(System.Boolean,System.Boolean,TypeHelp.TCF)
  - TypeHelp.TypeParser.GetTypeInfo(System.Object)
  - TypeHelp.TypeParser.GetTypeInfo(System.TypeCode)
  - TypeHelp.TypeParser.GetTypeInfo(TypeHelp.TCF)
  - TypeHelp.TypeParser.GetTypeInfo(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.GetUInt(System.Nullable{System.UInt32}@)
  - TypeHelp.TypeParser.GetUInt(System.UInt32)
  - TypeHelp.TypeParser.GetUInt(System.UInt32,System.Nullable{System.UInt32}@)
  - TypeHelp.TypeParser.GetULong(System.Nullable{System.UInt64}@)
  - TypeHelp.TypeParser.GetULong(System.UInt64)
  - TypeHelp.TypeParser.GetULong(System.UInt64,System.Nullable{System.UInt64}@)
  - TypeHelp.TypeParser.GetUShort(System.Int16)
  - TypeHelp.TypeParser.GetUShort(System.Nullable{System.Int16}@)
  - TypeHelp.TypeParser.GetUShort(System.UInt16,System.Nullable{System.UInt16}@)
  - TypeHelp.TypeParser.GetWellKnownTypes(TypeHelp.TCF)
  - TypeHelp.TypeParser.IsBigInteger
  - TypeHelp.TypeParser.IsComplex
  - TypeHelp.TypeParser.IsDateTime
  - TypeHelp.TypeParser.IsDecimal
  - TypeHelp.TypeParser.IsDouble
  - TypeHelp.TypeParser.IsEmpty
  - TypeHelp.TypeParser.IsEmptyOrWhiteSpace
  - TypeHelp.TypeParser.IsEnumType(System.Object)
  - TypeHelp.TypeParser.IsInt
  - TypeHelp.TypeParser.IsInteger(System.TypeCode)
  - TypeHelp.TypeParser.IsInteger(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.IsIntegerOrExt(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.IsLong
  - TypeHelp.TypeParser.IsNatural(System.TypeCode)
  - TypeHelp.TypeParser.IsNatural(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.IsNumber
  - TypeHelp.TypeParser.IsNumeric(System.Boolean,System.String)
  - TypeHelp.TypeParser.IsNumeric(System.Boolean,System.TypeCode)
  - TypeHelp.TypeParser.IsNumeric(System.Boolean,TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.IsNumeric(System.String)
  - TypeHelp.TypeParser.IsNumeric(System.TypeCode)
  - TypeHelp.TypeParser.IsNumeric(System.TypeCode,System.String)
  - TypeHelp.TypeParser.IsNumeric(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.IsPrecision(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.IsType(System.Object)
  - TypeHelp.TypeParser.IsValid(System.Boolean,System.Boolean,System.String)
  - TypeHelp.TypeParser.IsValid(System.Boolean,System.String)
  - TypeHelp.TypeParser.IsValid(System.Boolean,System.TypeCode)
  - TypeHelp.TypeParser.IsValid(System.Boolean,TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.IsValid(System.Object)
  - TypeHelp.TypeParser.IsValid(System.String)
  - TypeHelp.TypeParser.IsValid(System.Type)
  - TypeHelp.TypeParser.IsValid(System.Type,System.Int32)
  - TypeHelp.TypeParser.IsValid(System.TypeCode)
  - TypeHelp.TypeParser.IsValid(System.TypeCode,System.Object)
  - TypeHelp.TypeParser.IsValid(TypeHelp.RTProp)
  - TypeHelp.TypeParser.IsValid(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.IsValid(TypeHelp.TypeCoex,System.Object)
  - TypeHelp.TypeParser.IsWhiteSpace
  - TypeHelp.TypeParser.KnownTypeList
  - TypeHelp.TypeParser.Length
  - TypeHelp.TypeParser.PadMod(System.Int32,System.Int32)
  - TypeHelp.TypeParser.PadMod(System.Int64,System.Int32)
  - TypeHelp.TypeParser.Parse(System.Type)
  - TypeHelp.TypeParser.Parse(System.Type,System.Object@)
  - TypeHelp.TypeParser.Parse(System.TypeCode)
  - TypeHelp.TypeParser.Parse(System.TypeCode,System.Object@)
  - TypeHelp.TypeParser.ParseToComplex(System.Boolean,System.String)
  - TypeHelp.TypeParser.ParseToType(System.String)
  - TypeHelp.TypeParser.ParseToTypeCode(System.String)
  - TypeHelp.TypeParser.ParseToValue(System.String)
  - TypeHelp.TypeParser.ParseToValue(TypeHelp.TCF,System.String)
  - TypeHelp.TypeParser.ParseUsing(System.Type,System.String)
  - TypeHelp.TypeParser.ParseUsing(System.TypeCode,System.String)
  - TypeHelp.TypeParser.PointerBaseSize(System.Nullable{System.Boolean})
  - TypeHelp.TypeParser.PointerBaseType(System.Nullable{System.Boolean})
  - TypeHelp.TypeParser.PointerBaseType(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - TypeHelp.TypeParser.PointerSize
  - TypeHelp.TypeParser.REComplexPattern
  - TypeHelp.TypeParser.REComplexSuffix
  - TypeHelp.TypeParser.REETX
  - TypeHelp.TypeParser.REEngCompSuffix
  - TypeHelp.TypeParser.REFloatPattern
  - TypeHelp.TypeParser.REFloats
  - TypeHelp.TypeParser.REOpts
  - TypeHelp.TypeParser.REOptsBase64
  - TypeHelp.TypeParser.RESTX
  - TypeHelp.TypeParser.RunProps
  - TypeHelp.TypeParser.Set(System.Boolean,System.Byte,System.Byte)
  - TypeHelp.TypeParser.Set(System.Boolean,System.Int16,System.Int16)
  - TypeHelp.TypeParser.Set(System.Boolean,System.Int32,System.Int32)
  - TypeHelp.TypeParser.Set(System.Boolean,System.Int64,System.Int64)
  - TypeHelp.TypeParser.Set(System.Boolean,System.IntPtr,System.IntPtr)
  - TypeHelp.TypeParser.Set(System.Boolean,System.IntPtr,TypeHelp.TypeCoex,System.Nullable{System.Boolean})
  - TypeHelp.TypeParser.Set(System.Boolean,System.Numerics.BigInteger,System.Numerics.BigInteger)
  - TypeHelp.TypeParser.Set(System.Boolean,System.SByte,System.SByte)
  - TypeHelp.TypeParser.Set(System.Boolean,System.UInt16,System.UInt16)
  - TypeHelp.TypeParser.Set(System.Boolean,System.UInt32,System.UInt32)
  - TypeHelp.TypeParser.Set(System.Boolean,System.UInt64,System.UInt64)
  - TypeHelp.TypeParser.Set(System.Boolean,System.UIntPtr,System.UIntPtr)
  - TypeHelp.TypeParser.Set(System.Boolean,System.UIntPtr,TypeHelp.TypeCoex,System.Nullable{System.Boolean})
  - TypeHelp.TypeParser.Set(System.Boolean,TypeHelp.TCF,TypeHelp.TCF)
  - TypeHelp.TypeParser.SizeOf(System.Boolean,System.Type,System.Nullable{System.Int32})
  - TypeHelp.TypeParser.SizeOf(System.Object)
  - TypeHelp.TypeParser.SizeOf(System.Object,System.Nullable{System.Int32})
  - TypeHelp.TypeParser.SizeOf(System.Type)
  - TypeHelp.TypeParser.SizeOf(System.Type,System.Nullable{System.Int32})
  - TypeHelp.TypeParser.SizeOf(System.TypeCode)
  - TypeHelp.TypeParser.SizeOf(System.TypeCode,System.Nullable{System.Int32})
  - TypeHelp.TypeParser.SizeOf(TypeHelp.TypeCoex)
  - TypeHelp.TypeParser.SizeOf(TypeHelp.TypeCoex,System.Nullable{System.Int32})
  - TypeHelp.TypeParser.SizeOfTuple(System.Object)
  - TypeHelp.TypeParser.SplitOptContentfulOnly
  - TypeHelp.TypeParser.Splits
  - TypeHelp.TypeParser.Text
  - TypeHelp.TypeParser.TupleElementCount(System.Object)
  - TypeHelp.TypeParser.TypeCoexNumericPriority
  - TypeHelp.TypeParser.TypeCoexSizePriority
  - TypeHelp.TypeParser.TypeCoexSizes
  - TypeHelp.TypeParser.TypeCoexUsagePriority
  - TypeHelp.TypeParser.text
  langs:
  - csharp
  - vb
  name: TypeParser
  nameWithType: TypeParser
  fullName: TypeHelp.TypeParser
  type: Class
  source:
    id: TypeParser
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 370
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public class TypeParser
    content.vb: Public Class TypeParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.Byte,System.Byte)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.Byte,System.Byte)
  id: Set(System.Boolean,System.Byte,System.Byte)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, byte, byte)
  nameWithType: TypeParser.Set(bool, byte, byte)
  fullName: TypeHelp.TypeParser.Set(bool, byte, byte)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 14
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static byte Set(bool set, byte value, byte bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.Byte
    - id: bits
      type: System.Byte
    return:
      type: System.Byte
    content.vb: Public Shared Function [Set]([set] As Boolean, value As Byte, bits As Byte) As Byte
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, Byte, Byte)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, Byte, Byte)
  name.vb: Set(Boolean, Byte, Byte)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.Int32,System.Int32)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.Int32,System.Int32)
  id: Set(System.Boolean,System.Int32,System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, int, int)
  nameWithType: TypeParser.Set(bool, int, int)
  fullName: TypeHelp.TypeParser.Set(bool, int, int)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 19
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int Set(bool set, int value, int bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.Int32
    - id: bits
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function [Set]([set] As Boolean, value As Integer, bits As Integer) As Integer
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, Integer, Integer)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, Integer, Integer)
  name.vb: Set(Boolean, Integer, Integer)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.IntPtr,System.IntPtr)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.IntPtr,System.IntPtr)
  id: Set(System.Boolean,System.IntPtr,System.IntPtr)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, IntPtr, IntPtr)
  nameWithType: TypeParser.Set(bool, IntPtr, IntPtr)
  fullName: TypeHelp.TypeParser.Set(bool, System.IntPtr, System.IntPtr)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 24
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static IntPtr Set(bool set, IntPtr value, IntPtr bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.IntPtr
    - id: bits
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function [Set]([set] As Boolean, value As IntPtr, bits As IntPtr) As IntPtr
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, IntPtr, IntPtr)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, System.IntPtr, System.IntPtr)
  name.vb: Set(Boolean, IntPtr, IntPtr)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.IntPtr,TypeHelp.TypeCoex,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.IntPtr,TypeHelp.TypeCoex,System.Nullable{System.Boolean})
  id: Set(System.Boolean,System.IntPtr,TypeHelp.TypeCoex,System.Nullable{System.Boolean})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, IntPtr, TypeCoex, bool?)
  nameWithType: TypeParser.Set(bool, IntPtr, TypeCoex, bool?)
  fullName: TypeHelp.TypeParser.Set(bool, System.IntPtr, TypeHelp.TypeCoex, bool?)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 35
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static IntPtr Set(bool set, IntPtr value, TypeCoex typeCoex, bool? forceAltSize)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.IntPtr
    - id: typeCoex
      type: TypeHelp.TypeCoex
    - id: forceAltSize
      type: System.Nullable{System.Boolean}
    return:
      type: System.IntPtr
    content.vb: Public Shared Function [Set]([set] As Boolean, value As IntPtr, typeCoex As TypeCoex, forceAltSize As Boolean?) As IntPtr
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, IntPtr, TypeCoex, Boolean?)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, System.IntPtr, TypeHelp.TypeCoex, Boolean?)
  name.vb: Set(Boolean, IntPtr, TypeCoex, Boolean?)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.UIntPtr,TypeHelp.TypeCoex,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.UIntPtr,TypeHelp.TypeCoex,System.Nullable{System.Boolean})
  id: Set(System.Boolean,System.UIntPtr,TypeHelp.TypeCoex,System.Nullable{System.Boolean})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, UIntPtr, TypeCoex, bool?)
  nameWithType: TypeParser.Set(bool, UIntPtr, TypeCoex, bool?)
  fullName: TypeHelp.TypeParser.Set(bool, System.UIntPtr, TypeHelp.TypeCoex, bool?)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 52
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static UIntPtr Set(bool set, UIntPtr value, TypeCoex typeCoex, bool? forceAltSize)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.UIntPtr
    - id: typeCoex
      type: TypeHelp.TypeCoex
    - id: forceAltSize
      type: System.Nullable{System.Boolean}
    return:
      type: System.UIntPtr
    content.vb: Public Shared Function [Set]([set] As Boolean, value As UIntPtr, typeCoex As TypeCoex, forceAltSize As Boolean?) As UIntPtr
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, UIntPtr, TypeCoex, Boolean?)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, System.UIntPtr, TypeHelp.TypeCoex, Boolean?)
  name.vb: Set(Boolean, UIntPtr, TypeCoex, Boolean?)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.Int64,System.Int64)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.Int64,System.Int64)
  id: Set(System.Boolean,System.Int64,System.Int64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, long, long)
  nameWithType: TypeParser.Set(bool, long, long)
  fullName: TypeHelp.TypeParser.Set(bool, long, long)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 69
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static long Set(bool set, long value, long bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.Int64
    - id: bits
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Shared Function [Set]([set] As Boolean, value As Long, bits As Long) As Long
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, Long, Long)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, Long, Long)
  name.vb: Set(Boolean, Long, Long)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.SByte,System.SByte)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.SByte,System.SByte)
  id: Set(System.Boolean,System.SByte,System.SByte)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, sbyte, sbyte)
  nameWithType: TypeParser.Set(bool, sbyte, sbyte)
  fullName: TypeHelp.TypeParser.Set(bool, sbyte, sbyte)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 74
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static sbyte Set(bool set, sbyte value, sbyte bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.SByte
    - id: bits
      type: System.SByte
    return:
      type: System.SByte
    content.vb: Public Shared Function [Set]([set] As Boolean, value As SByte, bits As SByte) As SByte
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, SByte, SByte)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, SByte, SByte)
  name.vb: Set(Boolean, SByte, SByte)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.Int16,System.Int16)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.Int16,System.Int16)
  id: Set(System.Boolean,System.Int16,System.Int16)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, short, short)
  nameWithType: TypeParser.Set(bool, short, short)
  fullName: TypeHelp.TypeParser.Set(bool, short, short)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 79
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static short Set(bool set, short value, short bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.Int16
    - id: bits
      type: System.Int16
    return:
      type: System.Int16
    content.vb: Public Shared Function [Set]([set] As Boolean, value As Short, bits As Short) As Short
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, Short, Short)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, Short, Short)
  name.vb: Set(Boolean, Short, Short)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.UInt32,System.UInt32)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.UInt32,System.UInt32)
  id: Set(System.Boolean,System.UInt32,System.UInt32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, uint, uint)
  nameWithType: TypeParser.Set(bool, uint, uint)
  fullName: TypeHelp.TypeParser.Set(bool, uint, uint)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 84
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static uint Set(bool set, uint value, uint bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.UInt32
    - id: bits
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Shared Function [Set]([set] As Boolean, value As UInteger, bits As UInteger) As UInteger
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, UInteger, UInteger)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, UInteger, UInteger)
  name.vb: Set(Boolean, UInteger, UInteger)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.UInt64,System.UInt64)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.UInt64,System.UInt64)
  id: Set(System.Boolean,System.UInt64,System.UInt64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, ulong, ulong)
  nameWithType: TypeParser.Set(bool, ulong, ulong)
  fullName: TypeHelp.TypeParser.Set(bool, ulong, ulong)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 89
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static ulong Set(bool set, ulong value, ulong bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.UInt64
    - id: bits
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Shared Function [Set]([set] As Boolean, value As ULong, bits As ULong) As ULong
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, ULong, ULong)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, ULong, ULong)
  name.vb: Set(Boolean, ULong, ULong)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.UInt16,System.UInt16)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.UInt16,System.UInt16)
  id: Set(System.Boolean,System.UInt16,System.UInt16)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, ushort, ushort)
  nameWithType: TypeParser.Set(bool, ushort, ushort)
  fullName: TypeHelp.TypeParser.Set(bool, ushort, ushort)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 94
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static ushort Set(bool set, ushort value, ushort bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.UInt16
    - id: bits
      type: System.UInt16
    return:
      type: System.UInt16
    content.vb: Public Shared Function [Set]([set] As Boolean, value As UShort, bits As UShort) As UShort
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, UShort, UShort)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, UShort, UShort)
  name.vb: Set(Boolean, UShort, UShort)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Set(System.Boolean,System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, BigInteger, BigInteger)
  nameWithType: TypeParser.Set(bool, BigInteger, BigInteger)
  fullName: TypeHelp.TypeParser.Set(bool, System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 99
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static BigInteger Set(bool set, BigInteger value, BigInteger bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.Numerics.BigInteger
    - id: bits
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
    content.vb: Public Shared Function [Set]([set] As Boolean, value As BigInteger, bits As BigInteger) As BigInteger
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, BigInteger, BigInteger)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, System.Numerics.BigInteger, System.Numerics.BigInteger)
  name.vb: Set(Boolean, BigInteger, BigInteger)
- uid: TypeHelp.TypeParser.Set(System.Boolean,System.UIntPtr,System.UIntPtr)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,System.UIntPtr,System.UIntPtr)
  id: Set(System.Boolean,System.UIntPtr,System.UIntPtr)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, UIntPtr, UIntPtr)
  nameWithType: TypeParser.Set(bool, UIntPtr, UIntPtr)
  fullName: TypeHelp.TypeParser.Set(bool, System.UIntPtr, System.UIntPtr)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 104
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static UIntPtr Set(bool set, UIntPtr value, UIntPtr bits)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: System.UIntPtr
    - id: bits
      type: System.UIntPtr
    return:
      type: System.UIntPtr
    content.vb: Public Shared Function [Set]([set] As Boolean, value As UIntPtr, bits As UIntPtr) As UIntPtr
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, UIntPtr, UIntPtr)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, System.UIntPtr, System.UIntPtr)
  name.vb: Set(Boolean, UIntPtr, UIntPtr)
- uid: TypeHelp.TypeParser.Set(System.Boolean,TypeHelp.TCF,TypeHelp.TCF)
  commentId: M:TypeHelp.TypeParser.Set(System.Boolean,TypeHelp.TCF,TypeHelp.TCF)
  id: Set(System.Boolean,TypeHelp.TCF,TypeHelp.TCF)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Set(bool, TCF, TCF)
  nameWithType: TypeParser.Set(bool, TCF, TCF)
  fullName: TypeHelp.TypeParser.Set(bool, TypeHelp.TCF, TypeHelp.TCF)
  type: Method
  source:
    id: Set
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 114
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TCF Set(bool set, TCF value, TCF flags)
    parameters:
    - id: set
      type: System.Boolean
    - id: value
      type: TypeHelp.TCF
    - id: flags
      type: TypeHelp.TCF
    return:
      type: TypeHelp.TCF
    content.vb: Public Shared Function [Set]([set] As Boolean, value As TCF, flags As TCF) As TCF
  overload: TypeHelp.TypeParser.Set*
  nameWithType.vb: TypeParser.Set(Boolean, TCF, TCF)
  fullName.vb: TypeHelp.TypeParser.Set(Boolean, TypeHelp.TCF, TypeHelp.TCF)
  name.vb: Set(Boolean, TCF, TCF)
- uid: TypeHelp.TypeParser.GetTypeInfo(System.Object)
  commentId: M:TypeHelp.TypeParser.GetTypeInfo(System.Object)
  id: GetTypeInfo(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeInfo(object?)
  nameWithType: TypeParser.GetTypeInfo(object?)
  fullName: TypeHelp.TypeParser.GetTypeInfo(object?)
  type: Method
  source:
    id: GetTypeInfo
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 124
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeInfo GetTypeInfo(object? obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: TypeHelp.TypeInfo
    content.vb: Public Shared Function GetTypeInfo(obj As Object) As TypeInfo
  overload: TypeHelp.TypeParser.GetTypeInfo*
  nameWithType.vb: TypeParser.GetTypeInfo(Object)
  fullName.vb: TypeHelp.TypeParser.GetTypeInfo(Object)
  name.vb: GetTypeInfo(Object)
- uid: TypeHelp.TypeParser.GetTypeInfo(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.GetTypeInfo(System.TypeCode)
  id: GetTypeInfo(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeInfo(TypeCode)
  nameWithType: TypeParser.GetTypeInfo(TypeCode)
  fullName: TypeHelp.TypeParser.GetTypeInfo(System.TypeCode)
  type: Method
  source:
    id: GetTypeInfo
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 131
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeInfo GetTypeInfo(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: TypeHelp.TypeInfo
    content.vb: Public Shared Function GetTypeInfo(typeCode As TypeCode) As TypeInfo
  overload: TypeHelp.TypeParser.GetTypeInfo*
- uid: TypeHelp.TypeParser.GetTypeInfo(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.GetTypeInfo(TypeHelp.TypeCoex)
  id: GetTypeInfo(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeInfo(TypeCoex)
  nameWithType: TypeParser.GetTypeInfo(TypeCoex)
  fullName: TypeHelp.TypeParser.GetTypeInfo(TypeHelp.TypeCoex)
  type: Method
  source:
    id: GetTypeInfo
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 137
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeInfo GetTypeInfo(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: TypeHelp.TypeInfo
    content.vb: Public Shared Function GetTypeInfo(typeCoex As TypeCoex) As TypeInfo
  overload: TypeHelp.TypeParser.GetTypeInfo*
- uid: TypeHelp.TypeParser.GetTypeInfo(System.Boolean,System.Boolean,TypeHelp.TCF)
  commentId: M:TypeHelp.TypeParser.GetTypeInfo(System.Boolean,System.Boolean,TypeHelp.TCF)
  id: GetTypeInfo(System.Boolean,System.Boolean,TypeHelp.TCF)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeInfo(bool, bool, TCF)
  nameWithType: TypeParser.GetTypeInfo(bool, bool, TCF)
  fullName: TypeHelp.TypeParser.GetTypeInfo(bool, bool, TypeHelp.TCF)
  type: Method
  source:
    id: GetTypeInfo
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 143
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeInfo GetTypeInfo(bool valid, bool parsed, TCF typeFlag)
    parameters:
    - id: valid
      type: System.Boolean
    - id: parsed
      type: System.Boolean
    - id: typeFlag
      type: TypeHelp.TCF
    return:
      type: TypeHelp.TypeInfo
    content.vb: Public Shared Function GetTypeInfo(valid As Boolean, parsed As Boolean, typeFlag As TCF) As TypeInfo
  overload: TypeHelp.TypeParser.GetTypeInfo*
  nameWithType.vb: TypeParser.GetTypeInfo(Boolean, Boolean, TCF)
  fullName.vb: TypeHelp.TypeParser.GetTypeInfo(Boolean, Boolean, TypeHelp.TCF)
  name.vb: GetTypeInfo(Boolean, Boolean, TCF)
- uid: TypeHelp.TypeParser.GetTypeInfo(TypeHelp.TCF)
  commentId: M:TypeHelp.TypeParser.GetTypeInfo(TypeHelp.TCF)
  id: GetTypeInfo(TypeHelp.TCF)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeInfo(TCF)
  nameWithType: TypeParser.GetTypeInfo(TCF)
  fullName: TypeHelp.TypeParser.GetTypeInfo(TypeHelp.TCF)
  type: Method
  source:
    id: GetTypeInfo
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 161
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeInfo GetTypeInfo(TCF typeFlag)
    parameters:
    - id: typeFlag
      type: TypeHelp.TCF
    return:
      type: TypeHelp.TypeInfo
    content.vb: Public Shared Function GetTypeInfo(typeFlag As TCF) As TypeInfo
  overload: TypeHelp.TypeParser.GetTypeInfo*
- uid: TypeHelp.TypeParser.GetWellKnownTypes(TypeHelp.TCF)
  commentId: M:TypeHelp.TypeParser.GetWellKnownTypes(TypeHelp.TCF)
  id: GetWellKnownTypes(TypeHelp.TCF)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetWellKnownTypes(TCF)
  nameWithType: TypeParser.GetWellKnownTypes(TCF)
  fullName: TypeHelp.TypeParser.GetWellKnownTypes(TypeHelp.TCF)
  type: Method
  source:
    id: GetWellKnownTypes
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Delegates.cs
    startLine: 170
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TCF GetWellKnownTypes(TCF value)
    parameters:
    - id: value
      type: TypeHelp.TCF
    return:
      type: TypeHelp.TCF
    content.vb: Public Shared Function GetWellKnownTypes(value As TCF) As TCF
  overload: TypeHelp.TypeParser.GetWellKnownTypes*
- uid: TypeHelp.TypeParser.IsBigInteger
  commentId: P:TypeHelp.TypeParser.IsBigInteger
  id: IsBigInteger
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsBigInteger
  nameWithType: TypeParser.IsBigInteger
  fullName: TypeHelp.TypeParser.IsBigInteger
  type: Property
  source:
    id: IsBigInteger
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 14
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsBigInteger { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsBigInteger As Boolean
  overload: TypeHelp.TypeParser.IsBigInteger*
- uid: TypeHelp.TypeParser.IsComplex
  commentId: P:TypeHelp.TypeParser.IsComplex
  id: IsComplex
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsComplex
  nameWithType: TypeParser.IsComplex
  fullName: TypeHelp.TypeParser.IsComplex
  type: Property
  source:
    id: IsComplex
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 18
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsComplex { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsComplex As Boolean
  overload: TypeHelp.TypeParser.IsComplex*
- uid: TypeHelp.TypeParser.IsDateTime
  commentId: P:TypeHelp.TypeParser.IsDateTime
  id: IsDateTime
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsDateTime
  nameWithType: TypeParser.IsDateTime
  fullName: TypeHelp.TypeParser.IsDateTime
  type: Property
  source:
    id: IsDateTime
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 22
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsDateTime { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDateTime As Boolean
  overload: TypeHelp.TypeParser.IsDateTime*
- uid: TypeHelp.TypeParser.IsDecimal
  commentId: P:TypeHelp.TypeParser.IsDecimal
  id: IsDecimal
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsDecimal
  nameWithType: TypeParser.IsDecimal
  fullName: TypeHelp.TypeParser.IsDecimal
  type: Property
  source:
    id: IsDecimal
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 26
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsDecimal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDecimal As Boolean
  overload: TypeHelp.TypeParser.IsDecimal*
- uid: TypeHelp.TypeParser.IsDouble
  commentId: P:TypeHelp.TypeParser.IsDouble
  id: IsDouble
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsDouble
  nameWithType: TypeParser.IsDouble
  fullName: TypeHelp.TypeParser.IsDouble
  type: Property
  source:
    id: IsDouble
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 30
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsDouble { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDouble As Boolean
  overload: TypeHelp.TypeParser.IsDouble*
- uid: TypeHelp.TypeParser.IsEmpty
  commentId: P:TypeHelp.TypeParser.IsEmpty
  id: IsEmpty
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: TypeParser.IsEmpty
  fullName: TypeHelp.TypeParser.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 34
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: TypeHelp.TypeParser.IsEmpty*
- uid: TypeHelp.TypeParser.IsEmptyOrWhiteSpace
  commentId: P:TypeHelp.TypeParser.IsEmptyOrWhiteSpace
  id: IsEmptyOrWhiteSpace
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsEmptyOrWhiteSpace
  nameWithType: TypeParser.IsEmptyOrWhiteSpace
  fullName: TypeHelp.TypeParser.IsEmptyOrWhiteSpace
  type: Property
  source:
    id: IsEmptyOrWhiteSpace
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 38
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsEmptyOrWhiteSpace { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmptyOrWhiteSpace As Boolean
  overload: TypeHelp.TypeParser.IsEmptyOrWhiteSpace*
- uid: TypeHelp.TypeParser.IsInt
  commentId: P:TypeHelp.TypeParser.IsInt
  id: IsInt
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsInt
  nameWithType: TypeParser.IsInt
  fullName: TypeHelp.TypeParser.IsInt
  type: Property
  source:
    id: IsInt
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 42
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsInt { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInt As Boolean
  overload: TypeHelp.TypeParser.IsInt*
- uid: TypeHelp.TypeParser.IsLong
  commentId: P:TypeHelp.TypeParser.IsLong
  id: IsLong
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsLong
  nameWithType: TypeParser.IsLong
  fullName: TypeHelp.TypeParser.IsLong
  type: Property
  source:
    id: IsLong
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 46
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsLong { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLong As Boolean
  overload: TypeHelp.TypeParser.IsLong*
- uid: TypeHelp.TypeParser.IsNumber
  commentId: P:TypeHelp.TypeParser.IsNumber
  id: IsNumber
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNumber
  nameWithType: TypeParser.IsNumber
  fullName: TypeHelp.TypeParser.IsNumber
  type: Property
  source:
    id: IsNumber
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 50
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsNumber { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNumber As Boolean
  overload: TypeHelp.TypeParser.IsNumber*
- uid: TypeHelp.TypeParser.IsWhiteSpace
  commentId: P:TypeHelp.TypeParser.IsWhiteSpace
  id: IsWhiteSpace
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsWhiteSpace
  nameWithType: TypeParser.IsWhiteSpace
  fullName: TypeHelp.TypeParser.IsWhiteSpace
  type: Property
  source:
    id: IsWhiteSpace
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 54
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool IsWhiteSpace { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsWhiteSpace As Boolean
  overload: TypeHelp.TypeParser.IsWhiteSpace*
- uid: TypeHelp.TypeParser.Length
  commentId: P:TypeHelp.TypeParser.Length
  id: Length
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: TypeParser.Length
  fullName: TypeHelp.TypeParser.Length
  type: Property
  source:
    id: Length
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 58
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: TypeHelp.TypeParser.Length*
- uid: TypeHelp.TypeParser.Text
  commentId: P:TypeHelp.TypeParser.Text
  id: Text
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: TypeParser.Text
  fullName: TypeHelp.TypeParser.Text
  type: Property
  source:
    id: Text
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 62
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: TypeHelp.TypeParser.Text*
- uid: TypeHelp.TypeParser.CanParse(System.Type)
  commentId: M:TypeHelp.TypeParser.CanParse(System.Type)
  id: CanParse(System.Type)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CanParse(Type)
  nameWithType: TypeParser.CanParse(Type)
  fullName: TypeHelp.TypeParser.CanParse(System.Type)
  type: Method
  source:
    id: CanParse
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 71
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool CanParse(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function CanParse(type As Type) As Boolean
  overload: TypeHelp.TypeParser.CanParse*
- uid: TypeHelp.TypeParser.CanParse(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.CanParse(System.TypeCode)
  id: CanParse(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CanParse(TypeCode)
  nameWithType: TypeParser.CanParse(TypeCode)
  fullName: TypeHelp.TypeParser.CanParse(System.TypeCode)
  type: Method
  source:
    id: CanParse
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 76
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool CanParse(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Boolean
    content.vb: Public Function CanParse(typeCode As TypeCode) As Boolean
  overload: TypeHelp.TypeParser.CanParse*
- uid: TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger)
  commentId: M:TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger)
  id: GetBigInteger(System.Numerics.BigInteger)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetBigInteger(BigInteger)
  nameWithType: TypeParser.GetBigInteger(BigInteger)
  fullName: TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger)
  type: Method
  source:
    id: GetBigInteger
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 81
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public BigInteger GetBigInteger(BigInteger defaultValue)
    parameters:
    - id: defaultValue
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
    content.vb: Public Function GetBigInteger(defaultValue As BigInteger) As BigInteger
  overload: TypeHelp.TypeParser.GetBigInteger*
- uid: TypeHelp.TypeParser.GetBigInteger(System.Nullable{System.Numerics.BigInteger}@)
  commentId: M:TypeHelp.TypeParser.GetBigInteger(System.Nullable{System.Numerics.BigInteger}@)
  id: GetBigInteger(System.Nullable{System.Numerics.BigInteger}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetBigInteger(out BigInteger?)
  nameWithType: TypeParser.GetBigInteger(out BigInteger?)
  fullName: TypeHelp.TypeParser.GetBigInteger(out System.Numerics.BigInteger?)
  type: Method
  source:
    id: GetBigInteger
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 87
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetBigInteger(out BigInteger? value)
    parameters:
    - id: value
      type: System.Nullable{System.Numerics.BigInteger}
    return:
      type: System.Boolean
    content.vb: Public Function GetBigInteger(value As BigInteger?) As Boolean
  overload: TypeHelp.TypeParser.GetBigInteger*
  nameWithType.vb: TypeParser.GetBigInteger(BigInteger?)
  fullName.vb: TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger?)
  name.vb: GetBigInteger(BigInteger?)
- uid: TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger,System.Numerics.BigInteger@)
  commentId: M:TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger,System.Numerics.BigInteger@)
  id: GetBigInteger(System.Numerics.BigInteger,System.Numerics.BigInteger@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetBigInteger(BigInteger, out BigInteger)
  nameWithType: TypeParser.GetBigInteger(BigInteger, out BigInteger)
  fullName: TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger, out System.Numerics.BigInteger)
  type: Method
  source:
    id: GetBigInteger
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 93
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetBigInteger(BigInteger defaultValue, out BigInteger value)
    parameters:
    - id: defaultValue
      type: System.Numerics.BigInteger
    - id: value
      type: System.Numerics.BigInteger
    return:
      type: System.Boolean
    content.vb: Public Function GetBigInteger(defaultValue As BigInteger, value As BigInteger) As Boolean
  overload: TypeHelp.TypeParser.GetBigInteger*
  nameWithType.vb: TypeParser.GetBigInteger(BigInteger, BigInteger)
  fullName.vb: TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger, System.Numerics.BigInteger)
  name.vb: GetBigInteger(BigInteger, BigInteger)
- uid: TypeHelp.TypeParser.GetBool(System.Boolean)
  commentId: M:TypeHelp.TypeParser.GetBool(System.Boolean)
  id: GetBool(System.Boolean)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetBool(bool)
  nameWithType: TypeParser.GetBool(bool)
  fullName: TypeHelp.TypeParser.GetBool(bool)
  type: Method
  source:
    id: GetBool
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 100
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetBool(bool defaultValue)
    parameters:
    - id: defaultValue
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function GetBool(defaultValue As Boolean) As Boolean
  overload: TypeHelp.TypeParser.GetBool*
  nameWithType.vb: TypeParser.GetBool(Boolean)
  fullName.vb: TypeHelp.TypeParser.GetBool(Boolean)
  name.vb: GetBool(Boolean)
- uid: TypeHelp.TypeParser.GetBool(System.Nullable{System.Boolean}@)
  commentId: M:TypeHelp.TypeParser.GetBool(System.Nullable{System.Boolean}@)
  id: GetBool(System.Nullable{System.Boolean}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetBool(out bool?)
  nameWithType: TypeParser.GetBool(out bool?)
  fullName: TypeHelp.TypeParser.GetBool(out bool?)
  type: Method
  source:
    id: GetBool
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 106
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetBool(out bool? value)
    parameters:
    - id: value
      type: System.Nullable{System.Boolean}
    return:
      type: System.Boolean
    content.vb: Public Function GetBool(value As Boolean?) As Boolean
  overload: TypeHelp.TypeParser.GetBool*
  nameWithType.vb: TypeParser.GetBool(Boolean?)
  fullName.vb: TypeHelp.TypeParser.GetBool(Boolean?)
  name.vb: GetBool(Boolean?)
- uid: TypeHelp.TypeParser.GetBool(System.Boolean,System.Boolean@)
  commentId: M:TypeHelp.TypeParser.GetBool(System.Boolean,System.Boolean@)
  id: GetBool(System.Boolean,System.Boolean@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetBool(bool, out bool)
  nameWithType: TypeParser.GetBool(bool, out bool)
  fullName: TypeHelp.TypeParser.GetBool(bool, out bool)
  type: Method
  source:
    id: GetBool
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 112
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetBool(bool defaultValue, out bool value)
    parameters:
    - id: defaultValue
      type: System.Boolean
    - id: value
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function GetBool(defaultValue As Boolean, value As Boolean) As Boolean
  overload: TypeHelp.TypeParser.GetBool*
  nameWithType.vb: TypeParser.GetBool(Boolean, Boolean)
  fullName.vb: TypeHelp.TypeParser.GetBool(Boolean, Boolean)
  name.vb: GetBool(Boolean, Boolean)
- uid: TypeHelp.TypeParser.GetByte(System.Byte)
  commentId: M:TypeHelp.TypeParser.GetByte(System.Byte)
  id: GetByte(System.Byte)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetByte(byte)
  nameWithType: TypeParser.GetByte(byte)
  fullName: TypeHelp.TypeParser.GetByte(byte)
  type: Method
  source:
    id: GetByte
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 119
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public byte GetByte(byte defaultValue)
    parameters:
    - id: defaultValue
      type: System.Byte
    return:
      type: System.Byte
    content.vb: Public Function GetByte(defaultValue As Byte) As Byte
  overload: TypeHelp.TypeParser.GetByte*
  nameWithType.vb: TypeParser.GetByte(Byte)
  fullName.vb: TypeHelp.TypeParser.GetByte(Byte)
  name.vb: GetByte(Byte)
- uid: TypeHelp.TypeParser.GetByte(System.Nullable{System.Byte}@)
  commentId: M:TypeHelp.TypeParser.GetByte(System.Nullable{System.Byte}@)
  id: GetByte(System.Nullable{System.Byte}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetByte(out byte?)
  nameWithType: TypeParser.GetByte(out byte?)
  fullName: TypeHelp.TypeParser.GetByte(out byte?)
  type: Method
  source:
    id: GetByte
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 125
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetByte(out byte? value)
    parameters:
    - id: value
      type: System.Nullable{System.Byte}
    return:
      type: System.Boolean
    content.vb: Public Function GetByte(value As Byte?) As Boolean
  overload: TypeHelp.TypeParser.GetByte*
  nameWithType.vb: TypeParser.GetByte(Byte?)
  fullName.vb: TypeHelp.TypeParser.GetByte(Byte?)
  name.vb: GetByte(Byte?)
- uid: TypeHelp.TypeParser.GetByte(System.Byte,System.Nullable{System.Byte}@)
  commentId: M:TypeHelp.TypeParser.GetByte(System.Byte,System.Nullable{System.Byte}@)
  id: GetByte(System.Byte,System.Nullable{System.Byte}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetByte(byte, out byte?)
  nameWithType: TypeParser.GetByte(byte, out byte?)
  fullName: TypeHelp.TypeParser.GetByte(byte, out byte?)
  type: Method
  source:
    id: GetByte
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 131
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetByte(byte defaultValue, out byte? value)
    parameters:
    - id: defaultValue
      type: System.Byte
    - id: value
      type: System.Nullable{System.Byte}
    return:
      type: System.Boolean
    content.vb: Public Function GetByte(defaultValue As Byte, value As Byte?) As Boolean
  overload: TypeHelp.TypeParser.GetByte*
  nameWithType.vb: TypeParser.GetByte(Byte, Byte?)
  fullName.vb: TypeHelp.TypeParser.GetByte(Byte, Byte?)
  name.vb: GetByte(Byte, Byte?)
- uid: TypeHelp.TypeParser.GetComplex(System.Numerics.Complex)
  commentId: M:TypeHelp.TypeParser.GetComplex(System.Numerics.Complex)
  id: GetComplex(System.Numerics.Complex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetComplex(Complex)
  nameWithType: TypeParser.GetComplex(Complex)
  fullName: TypeHelp.TypeParser.GetComplex(System.Numerics.Complex)
  type: Method
  source:
    id: GetComplex
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 138
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public Complex GetComplex(Complex defaultValue)
    parameters:
    - id: defaultValue
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
    content.vb: Public Function GetComplex(defaultValue As Complex) As Complex
  overload: TypeHelp.TypeParser.GetComplex*
- uid: TypeHelp.TypeParser.GetComplex(System.Nullable{System.Numerics.Complex}@)
  commentId: M:TypeHelp.TypeParser.GetComplex(System.Nullable{System.Numerics.Complex}@)
  id: GetComplex(System.Nullable{System.Numerics.Complex}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetComplex(out Complex?)
  nameWithType: TypeParser.GetComplex(out Complex?)
  fullName: TypeHelp.TypeParser.GetComplex(out System.Numerics.Complex?)
  type: Method
  source:
    id: GetComplex
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 144
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetComplex(out Complex? value)
    parameters:
    - id: value
      type: System.Nullable{System.Numerics.Complex}
    return:
      type: System.Boolean
    content.vb: Public Function GetComplex(value As Complex?) As Boolean
  overload: TypeHelp.TypeParser.GetComplex*
  nameWithType.vb: TypeParser.GetComplex(Complex?)
  fullName.vb: TypeHelp.TypeParser.GetComplex(System.Numerics.Complex?)
  name.vb: GetComplex(Complex?)
- uid: TypeHelp.TypeParser.GetComplex(System.Numerics.Complex,System.Numerics.Complex@)
  commentId: M:TypeHelp.TypeParser.GetComplex(System.Numerics.Complex,System.Numerics.Complex@)
  id: GetComplex(System.Numerics.Complex,System.Numerics.Complex@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetComplex(Complex, out Complex)
  nameWithType: TypeParser.GetComplex(Complex, out Complex)
  fullName: TypeHelp.TypeParser.GetComplex(System.Numerics.Complex, out System.Numerics.Complex)
  type: Method
  source:
    id: GetComplex
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 150
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetComplex(Complex defaultValue, out Complex value)
    parameters:
    - id: defaultValue
      type: System.Numerics.Complex
    - id: value
      type: System.Numerics.Complex
    return:
      type: System.Boolean
    content.vb: Public Function GetComplex(defaultValue As Complex, value As Complex) As Boolean
  overload: TypeHelp.TypeParser.GetComplex*
  nameWithType.vb: TypeParser.GetComplex(Complex, Complex)
  fullName.vb: TypeHelp.TypeParser.GetComplex(System.Numerics.Complex, System.Numerics.Complex)
  name.vb: GetComplex(Complex, Complex)
- uid: TypeHelp.TypeParser.GetDateTime(System.DateTime)
  commentId: M:TypeHelp.TypeParser.GetDateTime(System.DateTime)
  id: GetDateTime(System.DateTime)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetDateTime(DateTime)
  nameWithType: TypeParser.GetDateTime(DateTime)
  fullName: TypeHelp.TypeParser.GetDateTime(System.DateTime)
  type: Method
  source:
    id: GetDateTime
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 157
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public DateTime GetDateTime(DateTime defaultValue)
    parameters:
    - id: defaultValue
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: Public Function GetDateTime(defaultValue As Date) As Date
  overload: TypeHelp.TypeParser.GetDateTime*
  nameWithType.vb: TypeParser.GetDateTime(Date)
  fullName.vb: TypeHelp.TypeParser.GetDateTime(Date)
  name.vb: GetDateTime(Date)
- uid: TypeHelp.TypeParser.GetDateTime(System.Nullable{System.DateTime}@)
  commentId: M:TypeHelp.TypeParser.GetDateTime(System.Nullable{System.DateTime}@)
  id: GetDateTime(System.Nullable{System.DateTime}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetDateTime(out DateTime?)
  nameWithType: TypeParser.GetDateTime(out DateTime?)
  fullName: TypeHelp.TypeParser.GetDateTime(out System.DateTime?)
  type: Method
  source:
    id: GetDateTime
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 163
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetDateTime(out DateTime? value)
    parameters:
    - id: value
      type: System.Nullable{System.DateTime}
    return:
      type: System.Boolean
    content.vb: Public Function GetDateTime(value As Date?) As Boolean
  overload: TypeHelp.TypeParser.GetDateTime*
  nameWithType.vb: TypeParser.GetDateTime(Date?)
  fullName.vb: TypeHelp.TypeParser.GetDateTime(Date?)
  name.vb: GetDateTime(Date?)
- uid: TypeHelp.TypeParser.GetDateTime(System.DateTime,System.DateTime@)
  commentId: M:TypeHelp.TypeParser.GetDateTime(System.DateTime,System.DateTime@)
  id: GetDateTime(System.DateTime,System.DateTime@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetDateTime(DateTime, out DateTime)
  nameWithType: TypeParser.GetDateTime(DateTime, out DateTime)
  fullName: TypeHelp.TypeParser.GetDateTime(System.DateTime, out System.DateTime)
  type: Method
  source:
    id: GetDateTime
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 169
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetDateTime(DateTime defaultValue, out DateTime value)
    parameters:
    - id: defaultValue
      type: System.DateTime
    - id: value
      type: System.DateTime
    return:
      type: System.Boolean
    content.vb: Public Function GetDateTime(defaultValue As Date, value As Date) As Boolean
  overload: TypeHelp.TypeParser.GetDateTime*
  nameWithType.vb: TypeParser.GetDateTime(Date, Date)
  fullName.vb: TypeHelp.TypeParser.GetDateTime(Date, Date)
  name.vb: GetDateTime(Date, Date)
- uid: TypeHelp.TypeParser.GetDecimal(System.Decimal)
  commentId: M:TypeHelp.TypeParser.GetDecimal(System.Decimal)
  id: GetDecimal(System.Decimal)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetDecimal(decimal)
  nameWithType: TypeParser.GetDecimal(decimal)
  fullName: TypeHelp.TypeParser.GetDecimal(decimal)
  type: Method
  source:
    id: GetDecimal
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 176
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public decimal GetDecimal(decimal defaultValue)
    parameters:
    - id: defaultValue
      type: System.Decimal
    return:
      type: System.Decimal
    content.vb: Public Function GetDecimal(defaultValue As Decimal) As Decimal
  overload: TypeHelp.TypeParser.GetDecimal*
  nameWithType.vb: TypeParser.GetDecimal(Decimal)
  fullName.vb: TypeHelp.TypeParser.GetDecimal(Decimal)
  name.vb: GetDecimal(Decimal)
- uid: TypeHelp.TypeParser.GetDecimal(System.Nullable{System.Decimal}@)
  commentId: M:TypeHelp.TypeParser.GetDecimal(System.Nullable{System.Decimal}@)
  id: GetDecimal(System.Nullable{System.Decimal}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetDecimal(out decimal?)
  nameWithType: TypeParser.GetDecimal(out decimal?)
  fullName: TypeHelp.TypeParser.GetDecimal(out decimal?)
  type: Method
  source:
    id: GetDecimal
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 182
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetDecimal(out decimal? value)
    parameters:
    - id: value
      type: System.Nullable{System.Decimal}
    return:
      type: System.Boolean
    content.vb: Public Function GetDecimal(value As Decimal?) As Boolean
  overload: TypeHelp.TypeParser.GetDecimal*
  nameWithType.vb: TypeParser.GetDecimal(Decimal?)
  fullName.vb: TypeHelp.TypeParser.GetDecimal(Decimal?)
  name.vb: GetDecimal(Decimal?)
- uid: TypeHelp.TypeParser.GetDecimal(System.Decimal,System.Nullable{System.Decimal}@)
  commentId: M:TypeHelp.TypeParser.GetDecimal(System.Decimal,System.Nullable{System.Decimal}@)
  id: GetDecimal(System.Decimal,System.Nullable{System.Decimal}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetDecimal(decimal, out decimal?)
  nameWithType: TypeParser.GetDecimal(decimal, out decimal?)
  fullName: TypeHelp.TypeParser.GetDecimal(decimal, out decimal?)
  type: Method
  source:
    id: GetDecimal
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 188
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetDecimal(decimal defaultValue, out decimal? value)
    parameters:
    - id: defaultValue
      type: System.Decimal
    - id: value
      type: System.Nullable{System.Decimal}
    return:
      type: System.Boolean
    content.vb: Public Function GetDecimal(defaultValue As Decimal, value As Decimal?) As Boolean
  overload: TypeHelp.TypeParser.GetDecimal*
  nameWithType.vb: TypeParser.GetDecimal(Decimal, Decimal?)
  fullName.vb: TypeHelp.TypeParser.GetDecimal(Decimal, Decimal?)
  name.vb: GetDecimal(Decimal, Decimal?)
- uid: TypeHelp.TypeParser.GetDouble(System.Double)
  commentId: M:TypeHelp.TypeParser.GetDouble(System.Double)
  id: GetDouble(System.Double)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetDouble(double)
  nameWithType: TypeParser.GetDouble(double)
  fullName: TypeHelp.TypeParser.GetDouble(double)
  type: Method
  source:
    id: GetDouble
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 195
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public double GetDouble(double defaultValue)
    parameters:
    - id: defaultValue
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Function GetDouble(defaultValue As Double) As Double
  overload: TypeHelp.TypeParser.GetDouble*
  nameWithType.vb: TypeParser.GetDouble(Double)
  fullName.vb: TypeHelp.TypeParser.GetDouble(Double)
  name.vb: GetDouble(Double)
- uid: TypeHelp.TypeParser.GetDouble(System.Nullable{System.Double}@)
  commentId: M:TypeHelp.TypeParser.GetDouble(System.Nullable{System.Double}@)
  id: GetDouble(System.Nullable{System.Double}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetDouble(out double?)
  nameWithType: TypeParser.GetDouble(out double?)
  fullName: TypeHelp.TypeParser.GetDouble(out double?)
  type: Method
  source:
    id: GetDouble
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 201
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetDouble(out double? value)
    parameters:
    - id: value
      type: System.Nullable{System.Double}
    return:
      type: System.Boolean
    content.vb: Public Function GetDouble(value As Double?) As Boolean
  overload: TypeHelp.TypeParser.GetDouble*
  nameWithType.vb: TypeParser.GetDouble(Double?)
  fullName.vb: TypeHelp.TypeParser.GetDouble(Double?)
  name.vb: GetDouble(Double?)
- uid: TypeHelp.TypeParser.GetDouble(System.Double,System.Double@)
  commentId: M:TypeHelp.TypeParser.GetDouble(System.Double,System.Double@)
  id: GetDouble(System.Double,System.Double@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetDouble(double, out double)
  nameWithType: TypeParser.GetDouble(double, out double)
  fullName: TypeHelp.TypeParser.GetDouble(double, out double)
  type: Method
  source:
    id: GetDouble
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 207
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetDouble(double defaultValue, out double value)
    parameters:
    - id: defaultValue
      type: System.Double
    - id: value
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function GetDouble(defaultValue As Double, value As Double) As Boolean
  overload: TypeHelp.TypeParser.GetDouble*
  nameWithType.vb: TypeParser.GetDouble(Double, Double)
  fullName.vb: TypeHelp.TypeParser.GetDouble(Double, Double)
  name.vb: GetDouble(Double, Double)
- uid: TypeHelp.TypeParser.GetFloat(System.Single)
  commentId: M:TypeHelp.TypeParser.GetFloat(System.Single)
  id: GetFloat(System.Single)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetFloat(float)
  nameWithType: TypeParser.GetFloat(float)
  fullName: TypeHelp.TypeParser.GetFloat(float)
  type: Method
  source:
    id: GetFloat
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 214
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public float GetFloat(float defaultValue)
    parameters:
    - id: defaultValue
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Function GetFloat(defaultValue As Single) As Single
  overload: TypeHelp.TypeParser.GetFloat*
  nameWithType.vb: TypeParser.GetFloat(Single)
  fullName.vb: TypeHelp.TypeParser.GetFloat(Single)
  name.vb: GetFloat(Single)
- uid: TypeHelp.TypeParser.GetFloat(System.Nullable{System.Single}@)
  commentId: M:TypeHelp.TypeParser.GetFloat(System.Nullable{System.Single}@)
  id: GetFloat(System.Nullable{System.Single}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetFloat(out float?)
  nameWithType: TypeParser.GetFloat(out float?)
  fullName: TypeHelp.TypeParser.GetFloat(out float?)
  type: Method
  source:
    id: GetFloat
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 220
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetFloat(out float? value)
    parameters:
    - id: value
      type: System.Nullable{System.Single}
    return:
      type: System.Boolean
    content.vb: Public Function GetFloat(value As Single?) As Boolean
  overload: TypeHelp.TypeParser.GetFloat*
  nameWithType.vb: TypeParser.GetFloat(Single?)
  fullName.vb: TypeHelp.TypeParser.GetFloat(Single?)
  name.vb: GetFloat(Single?)
- uid: TypeHelp.TypeParser.GetFloat(System.Single,System.Single@)
  commentId: M:TypeHelp.TypeParser.GetFloat(System.Single,System.Single@)
  id: GetFloat(System.Single,System.Single@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetFloat(float, out float)
  nameWithType: TypeParser.GetFloat(float, out float)
  fullName: TypeHelp.TypeParser.GetFloat(float, out float)
  type: Method
  source:
    id: GetFloat
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 226
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetFloat(float defaultValue, out float value)
    parameters:
    - id: defaultValue
      type: System.Single
    - id: value
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function GetFloat(defaultValue As Single, value As Single) As Boolean
  overload: TypeHelp.TypeParser.GetFloat*
  nameWithType.vb: TypeParser.GetFloat(Single, Single)
  fullName.vb: TypeHelp.TypeParser.GetFloat(Single, Single)
  name.vb: GetFloat(Single, Single)
- uid: TypeHelp.TypeParser.GetInt(System.Int32)
  commentId: M:TypeHelp.TypeParser.GetInt(System.Int32)
  id: GetInt(System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetInt(int)
  nameWithType: TypeParser.GetInt(int)
  fullName: TypeHelp.TypeParser.GetInt(int)
  type: Method
  source:
    id: GetInt
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 233
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public int GetInt(int defaultValue)
    parameters:
    - id: defaultValue
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function GetInt(defaultValue As Integer) As Integer
  overload: TypeHelp.TypeParser.GetInt*
  nameWithType.vb: TypeParser.GetInt(Integer)
  fullName.vb: TypeHelp.TypeParser.GetInt(Integer)
  name.vb: GetInt(Integer)
- uid: TypeHelp.TypeParser.GetInt(System.Nullable{System.Int32}@)
  commentId: M:TypeHelp.TypeParser.GetInt(System.Nullable{System.Int32}@)
  id: GetInt(System.Nullable{System.Int32}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetInt(out int?)
  nameWithType: TypeParser.GetInt(out int?)
  fullName: TypeHelp.TypeParser.GetInt(out int?)
  type: Method
  source:
    id: GetInt
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 239
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetInt(out int? value)
    parameters:
    - id: value
      type: System.Nullable{System.Int32}
    return:
      type: System.Boolean
    content.vb: Public Function GetInt(value As Integer?) As Boolean
  overload: TypeHelp.TypeParser.GetInt*
  nameWithType.vb: TypeParser.GetInt(Integer?)
  fullName.vb: TypeHelp.TypeParser.GetInt(Integer?)
  name.vb: GetInt(Integer?)
- uid: TypeHelp.TypeParser.GetInt(System.Int32,System.Nullable{System.Int32}@)
  commentId: M:TypeHelp.TypeParser.GetInt(System.Int32,System.Nullable{System.Int32}@)
  id: GetInt(System.Int32,System.Nullable{System.Int32}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetInt(int, out int?)
  nameWithType: TypeParser.GetInt(int, out int?)
  fullName: TypeHelp.TypeParser.GetInt(int, out int?)
  type: Method
  source:
    id: GetInt
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 245
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetInt(int defaultValue, out int? value)
    parameters:
    - id: defaultValue
      type: System.Int32
    - id: value
      type: System.Nullable{System.Int32}
    return:
      type: System.Boolean
    content.vb: Public Function GetInt(defaultValue As Integer, value As Integer?) As Boolean
  overload: TypeHelp.TypeParser.GetInt*
  nameWithType.vb: TypeParser.GetInt(Integer, Integer?)
  fullName.vb: TypeHelp.TypeParser.GetInt(Integer, Integer?)
  name.vb: GetInt(Integer, Integer?)
- uid: TypeHelp.TypeParser.GetLong(System.Int64)
  commentId: M:TypeHelp.TypeParser.GetLong(System.Int64)
  id: GetLong(System.Int64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetLong(long)
  nameWithType: TypeParser.GetLong(long)
  fullName: TypeHelp.TypeParser.GetLong(long)
  type: Method
  source:
    id: GetLong
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 252
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public long GetLong(long defaultValue)
    parameters:
    - id: defaultValue
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Function GetLong(defaultValue As Long) As Long
  overload: TypeHelp.TypeParser.GetLong*
  nameWithType.vb: TypeParser.GetLong(Long)
  fullName.vb: TypeHelp.TypeParser.GetLong(Long)
  name.vb: GetLong(Long)
- uid: TypeHelp.TypeParser.GetLong(System.Nullable{System.Int64}@)
  commentId: M:TypeHelp.TypeParser.GetLong(System.Nullable{System.Int64}@)
  id: GetLong(System.Nullable{System.Int64}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetLong(out long?)
  nameWithType: TypeParser.GetLong(out long?)
  fullName: TypeHelp.TypeParser.GetLong(out long?)
  type: Method
  source:
    id: GetLong
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 258
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetLong(out long? value)
    parameters:
    - id: value
      type: System.Nullable{System.Int64}
    return:
      type: System.Boolean
    content.vb: Public Function GetLong(value As Long?) As Boolean
  overload: TypeHelp.TypeParser.GetLong*
  nameWithType.vb: TypeParser.GetLong(Long?)
  fullName.vb: TypeHelp.TypeParser.GetLong(Long?)
  name.vb: GetLong(Long?)
- uid: TypeHelp.TypeParser.GetLong(System.Int64,System.Nullable{System.Int64}@)
  commentId: M:TypeHelp.TypeParser.GetLong(System.Int64,System.Nullable{System.Int64}@)
  id: GetLong(System.Int64,System.Nullable{System.Int64}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetLong(long, out long?)
  nameWithType: TypeParser.GetLong(long, out long?)
  fullName: TypeHelp.TypeParser.GetLong(long, out long?)
  type: Method
  source:
    id: GetLong
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 264
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetLong(long defaultValue, out long? value)
    parameters:
    - id: defaultValue
      type: System.Int64
    - id: value
      type: System.Nullable{System.Int64}
    return:
      type: System.Boolean
    content.vb: Public Function GetLong(defaultValue As Long, value As Long?) As Boolean
  overload: TypeHelp.TypeParser.GetLong*
  nameWithType.vb: TypeParser.GetLong(Long, Long?)
  fullName.vb: TypeHelp.TypeParser.GetLong(Long, Long?)
  name.vb: GetLong(Long, Long?)
- uid: TypeHelp.TypeParser.GetSByte(System.SByte)
  commentId: M:TypeHelp.TypeParser.GetSByte(System.SByte)
  id: GetSByte(System.SByte)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetSByte(sbyte)
  nameWithType: TypeParser.GetSByte(sbyte)
  fullName: TypeHelp.TypeParser.GetSByte(sbyte)
  type: Method
  source:
    id: GetSByte
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 271
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public sbyte GetSByte(sbyte defaultValue)
    parameters:
    - id: defaultValue
      type: System.SByte
    return:
      type: System.SByte
    content.vb: Public Function GetSByte(defaultValue As SByte) As SByte
  overload: TypeHelp.TypeParser.GetSByte*
  nameWithType.vb: TypeParser.GetSByte(SByte)
  fullName.vb: TypeHelp.TypeParser.GetSByte(SByte)
  name.vb: GetSByte(SByte)
- uid: TypeHelp.TypeParser.GetSByte(System.Nullable{System.SByte}@)
  commentId: M:TypeHelp.TypeParser.GetSByte(System.Nullable{System.SByte}@)
  id: GetSByte(System.Nullable{System.SByte}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetSByte(out sbyte?)
  nameWithType: TypeParser.GetSByte(out sbyte?)
  fullName: TypeHelp.TypeParser.GetSByte(out sbyte?)
  type: Method
  source:
    id: GetSByte
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 277
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetSByte(out sbyte? value)
    parameters:
    - id: value
      type: System.Nullable{System.SByte}
    return:
      type: System.Boolean
    content.vb: Public Function GetSByte(value As SByte?) As Boolean
  overload: TypeHelp.TypeParser.GetSByte*
  nameWithType.vb: TypeParser.GetSByte(SByte?)
  fullName.vb: TypeHelp.TypeParser.GetSByte(SByte?)
  name.vb: GetSByte(SByte?)
- uid: TypeHelp.TypeParser.GetSByte(System.SByte,System.Nullable{System.SByte}@)
  commentId: M:TypeHelp.TypeParser.GetSByte(System.SByte,System.Nullable{System.SByte}@)
  id: GetSByte(System.SByte,System.Nullable{System.SByte}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetSByte(sbyte, out sbyte?)
  nameWithType: TypeParser.GetSByte(sbyte, out sbyte?)
  fullName: TypeHelp.TypeParser.GetSByte(sbyte, out sbyte?)
  type: Method
  source:
    id: GetSByte
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 283
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetSByte(sbyte defaultValue, out sbyte? value)
    parameters:
    - id: defaultValue
      type: System.SByte
    - id: value
      type: System.Nullable{System.SByte}
    return:
      type: System.Boolean
    content.vb: Public Function GetSByte(defaultValue As SByte, value As SByte?) As Boolean
  overload: TypeHelp.TypeParser.GetSByte*
  nameWithType.vb: TypeParser.GetSByte(SByte, SByte?)
  fullName.vb: TypeHelp.TypeParser.GetSByte(SByte, SByte?)
  name.vb: GetSByte(SByte, SByte?)
- uid: TypeHelp.TypeParser.GetShort(System.Int16)
  commentId: M:TypeHelp.TypeParser.GetShort(System.Int16)
  id: GetShort(System.Int16)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetShort(short)
  nameWithType: TypeParser.GetShort(short)
  fullName: TypeHelp.TypeParser.GetShort(short)
  type: Method
  source:
    id: GetShort
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 290
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public short GetShort(short defaultValue)
    parameters:
    - id: defaultValue
      type: System.Int16
    return:
      type: System.Int16
    content.vb: Public Function GetShort(defaultValue As Short) As Short
  overload: TypeHelp.TypeParser.GetShort*
  nameWithType.vb: TypeParser.GetShort(Short)
  fullName.vb: TypeHelp.TypeParser.GetShort(Short)
  name.vb: GetShort(Short)
- uid: TypeHelp.TypeParser.GetShort(System.Nullable{System.Int16}@)
  commentId: M:TypeHelp.TypeParser.GetShort(System.Nullable{System.Int16}@)
  id: GetShort(System.Nullable{System.Int16}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetShort(out short?)
  nameWithType: TypeParser.GetShort(out short?)
  fullName: TypeHelp.TypeParser.GetShort(out short?)
  type: Method
  source:
    id: GetShort
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 296
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetShort(out short? value)
    parameters:
    - id: value
      type: System.Nullable{System.Int16}
    return:
      type: System.Boolean
    content.vb: Public Function GetShort(value As Short?) As Boolean
  overload: TypeHelp.TypeParser.GetShort*
  nameWithType.vb: TypeParser.GetShort(Short?)
  fullName.vb: TypeHelp.TypeParser.GetShort(Short?)
  name.vb: GetShort(Short?)
- uid: TypeHelp.TypeParser.GetShort(System.Int16,System.Nullable{System.Int16}@)
  commentId: M:TypeHelp.TypeParser.GetShort(System.Int16,System.Nullable{System.Int16}@)
  id: GetShort(System.Int16,System.Nullable{System.Int16}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetShort(short, out short?)
  nameWithType: TypeParser.GetShort(short, out short?)
  fullName: TypeHelp.TypeParser.GetShort(short, out short?)
  type: Method
  source:
    id: GetShort
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 302
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetShort(short defaultValue, out short? value)
    parameters:
    - id: defaultValue
      type: System.Int16
    - id: value
      type: System.Nullable{System.Int16}
    return:
      type: System.Boolean
    content.vb: Public Function GetShort(defaultValue As Short, value As Short?) As Boolean
  overload: TypeHelp.TypeParser.GetShort*
  nameWithType.vb: TypeParser.GetShort(Short, Short?)
  fullName.vb: TypeHelp.TypeParser.GetShort(Short, Short?)
  name.vb: GetShort(Short, Short?)
- uid: TypeHelp.TypeParser.GetUInt(System.UInt32)
  commentId: M:TypeHelp.TypeParser.GetUInt(System.UInt32)
  id: GetUInt(System.UInt32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetUInt(uint)
  nameWithType: TypeParser.GetUInt(uint)
  fullName: TypeHelp.TypeParser.GetUInt(uint)
  type: Method
  source:
    id: GetUInt
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 309
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public uint GetUInt(uint defaultValue)
    parameters:
    - id: defaultValue
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Function GetUInt(defaultValue As UInteger) As UInteger
  overload: TypeHelp.TypeParser.GetUInt*
  nameWithType.vb: TypeParser.GetUInt(UInteger)
  fullName.vb: TypeHelp.TypeParser.GetUInt(UInteger)
  name.vb: GetUInt(UInteger)
- uid: TypeHelp.TypeParser.GetUInt(System.Nullable{System.UInt32}@)
  commentId: M:TypeHelp.TypeParser.GetUInt(System.Nullable{System.UInt32}@)
  id: GetUInt(System.Nullable{System.UInt32}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetUInt(out uint?)
  nameWithType: TypeParser.GetUInt(out uint?)
  fullName: TypeHelp.TypeParser.GetUInt(out uint?)
  type: Method
  source:
    id: GetUInt
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 315
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetUInt(out uint? value)
    parameters:
    - id: value
      type: System.Nullable{System.UInt32}
    return:
      type: System.Boolean
    content.vb: Public Function GetUInt(value As UInteger?) As Boolean
  overload: TypeHelp.TypeParser.GetUInt*
  nameWithType.vb: TypeParser.GetUInt(UInteger?)
  fullName.vb: TypeHelp.TypeParser.GetUInt(UInteger?)
  name.vb: GetUInt(UInteger?)
- uid: TypeHelp.TypeParser.GetUInt(System.UInt32,System.Nullable{System.UInt32}@)
  commentId: M:TypeHelp.TypeParser.GetUInt(System.UInt32,System.Nullable{System.UInt32}@)
  id: GetUInt(System.UInt32,System.Nullable{System.UInt32}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetUInt(uint, out uint?)
  nameWithType: TypeParser.GetUInt(uint, out uint?)
  fullName: TypeHelp.TypeParser.GetUInt(uint, out uint?)
  type: Method
  source:
    id: GetUInt
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 321
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetUInt(uint defaultValue, out uint? value)
    parameters:
    - id: defaultValue
      type: System.UInt32
    - id: value
      type: System.Nullable{System.UInt32}
    return:
      type: System.Boolean
    content.vb: Public Function GetUInt(defaultValue As UInteger, value As UInteger?) As Boolean
  overload: TypeHelp.TypeParser.GetUInt*
  nameWithType.vb: TypeParser.GetUInt(UInteger, UInteger?)
  fullName.vb: TypeHelp.TypeParser.GetUInt(UInteger, UInteger?)
  name.vb: GetUInt(UInteger, UInteger?)
- uid: TypeHelp.TypeParser.GetULong(System.UInt64)
  commentId: M:TypeHelp.TypeParser.GetULong(System.UInt64)
  id: GetULong(System.UInt64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetULong(ulong)
  nameWithType: TypeParser.GetULong(ulong)
  fullName: TypeHelp.TypeParser.GetULong(ulong)
  type: Method
  source:
    id: GetULong
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 328
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public ulong GetULong(ulong defaultValue)
    parameters:
    - id: defaultValue
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Function GetULong(defaultValue As ULong) As ULong
  overload: TypeHelp.TypeParser.GetULong*
  nameWithType.vb: TypeParser.GetULong(ULong)
  fullName.vb: TypeHelp.TypeParser.GetULong(ULong)
  name.vb: GetULong(ULong)
- uid: TypeHelp.TypeParser.GetULong(System.Nullable{System.UInt64}@)
  commentId: M:TypeHelp.TypeParser.GetULong(System.Nullable{System.UInt64}@)
  id: GetULong(System.Nullable{System.UInt64}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetULong(out ulong?)
  nameWithType: TypeParser.GetULong(out ulong?)
  fullName: TypeHelp.TypeParser.GetULong(out ulong?)
  type: Method
  source:
    id: GetULong
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 334
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetULong(out ulong? value)
    parameters:
    - id: value
      type: System.Nullable{System.UInt64}
    return:
      type: System.Boolean
    content.vb: Public Function GetULong(value As ULong?) As Boolean
  overload: TypeHelp.TypeParser.GetULong*
  nameWithType.vb: TypeParser.GetULong(ULong?)
  fullName.vb: TypeHelp.TypeParser.GetULong(ULong?)
  name.vb: GetULong(ULong?)
- uid: TypeHelp.TypeParser.GetULong(System.UInt64,System.Nullable{System.UInt64}@)
  commentId: M:TypeHelp.TypeParser.GetULong(System.UInt64,System.Nullable{System.UInt64}@)
  id: GetULong(System.UInt64,System.Nullable{System.UInt64}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetULong(ulong, out ulong?)
  nameWithType: TypeParser.GetULong(ulong, out ulong?)
  fullName: TypeHelp.TypeParser.GetULong(ulong, out ulong?)
  type: Method
  source:
    id: GetULong
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 340
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetULong(ulong defaultValue, out ulong? value)
    parameters:
    - id: defaultValue
      type: System.UInt64
    - id: value
      type: System.Nullable{System.UInt64}
    return:
      type: System.Boolean
    content.vb: Public Function GetULong(defaultValue As ULong, value As ULong?) As Boolean
  overload: TypeHelp.TypeParser.GetULong*
  nameWithType.vb: TypeParser.GetULong(ULong, ULong?)
  fullName.vb: TypeHelp.TypeParser.GetULong(ULong, ULong?)
  name.vb: GetULong(ULong, ULong?)
- uid: TypeHelp.TypeParser.GetUShort(System.Int16)
  commentId: M:TypeHelp.TypeParser.GetUShort(System.Int16)
  id: GetUShort(System.Int16)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetUShort(short)
  nameWithType: TypeParser.GetUShort(short)
  fullName: TypeHelp.TypeParser.GetUShort(short)
  type: Method
  source:
    id: GetUShort
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 347
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public short GetUShort(short defaultValue)
    parameters:
    - id: defaultValue
      type: System.Int16
    return:
      type: System.Int16
    content.vb: Public Function GetUShort(defaultValue As Short) As Short
  overload: TypeHelp.TypeParser.GetUShort*
  nameWithType.vb: TypeParser.GetUShort(Short)
  fullName.vb: TypeHelp.TypeParser.GetUShort(Short)
  name.vb: GetUShort(Short)
- uid: TypeHelp.TypeParser.GetUShort(System.Nullable{System.Int16}@)
  commentId: M:TypeHelp.TypeParser.GetUShort(System.Nullable{System.Int16}@)
  id: GetUShort(System.Nullable{System.Int16}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetUShort(out short?)
  nameWithType: TypeParser.GetUShort(out short?)
  fullName: TypeHelp.TypeParser.GetUShort(out short?)
  type: Method
  source:
    id: GetUShort
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 353
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetUShort(out short? value)
    parameters:
    - id: value
      type: System.Nullable{System.Int16}
    return:
      type: System.Boolean
    content.vb: Public Function GetUShort(value As Short?) As Boolean
  overload: TypeHelp.TypeParser.GetUShort*
  nameWithType.vb: TypeParser.GetUShort(Short?)
  fullName.vb: TypeHelp.TypeParser.GetUShort(Short?)
  name.vb: GetUShort(Short?)
- uid: TypeHelp.TypeParser.GetUShort(System.UInt16,System.Nullable{System.UInt16}@)
  commentId: M:TypeHelp.TypeParser.GetUShort(System.UInt16,System.Nullable{System.UInt16}@)
  id: GetUShort(System.UInt16,System.Nullable{System.UInt16}@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetUShort(ushort, out ushort?)
  nameWithType: TypeParser.GetUShort(ushort, out ushort?)
  fullName: TypeHelp.TypeParser.GetUShort(ushort, out ushort?)
  type: Method
  source:
    id: GetUShort
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 359
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool GetUShort(ushort defaultValue, out ushort? value)
    parameters:
    - id: defaultValue
      type: System.UInt16
    - id: value
      type: System.Nullable{System.UInt16}
    return:
      type: System.Boolean
    content.vb: Public Function GetUShort(defaultValue As UShort, value As UShort?) As Boolean
  overload: TypeHelp.TypeParser.GetUShort*
  nameWithType.vb: TypeParser.GetUShort(UShort, UShort?)
  fullName.vb: TypeHelp.TypeParser.GetUShort(UShort, UShort?)
  name.vb: GetUShort(UShort, UShort?)
- uid: TypeHelp.TypeParser.Parse(System.Type)
  commentId: M:TypeHelp.TypeParser.Parse(System.Type)
  id: Parse(System.Type)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Parse(Type)
  nameWithType: TypeParser.Parse(Type)
  fullName: TypeHelp.TypeParser.Parse(System.Type)
  type: Method
  source:
    id: Parse
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 366
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public object? Parse(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function Parse(type As Type) As Object
  overload: TypeHelp.TypeParser.Parse*
- uid: TypeHelp.TypeParser.Parse(System.Type,System.Object@)
  commentId: M:TypeHelp.TypeParser.Parse(System.Type,System.Object@)
  id: Parse(System.Type,System.Object@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Parse(Type, out object?)
  nameWithType: TypeParser.Parse(Type, out object?)
  fullName: TypeHelp.TypeParser.Parse(System.Type, out object?)
  type: Method
  source:
    id: Parse
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 371
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool Parse(Type type, out object? result)
    parameters:
    - id: type
      type: System.Type
    - id: result
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Function Parse(type As Type, result As Object) As Boolean
  overload: TypeHelp.TypeParser.Parse*
  nameWithType.vb: TypeParser.Parse(Type, Object)
  fullName.vb: TypeHelp.TypeParser.Parse(System.Type, Object)
  name.vb: Parse(Type, Object)
- uid: TypeHelp.TypeParser.Parse(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.Parse(System.TypeCode)
  id: Parse(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Parse(TypeCode)
  nameWithType: TypeParser.Parse(TypeCode)
  fullName: TypeHelp.TypeParser.Parse(System.TypeCode)
  type: Method
  source:
    id: Parse
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 377
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public object? Parse(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Object
    content.vb: Public Function Parse(typeCode As TypeCode) As Object
  overload: TypeHelp.TypeParser.Parse*
- uid: TypeHelp.TypeParser.Parse(System.TypeCode,System.Object@)
  commentId: M:TypeHelp.TypeParser.Parse(System.TypeCode,System.Object@)
  id: Parse(System.TypeCode,System.Object@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Parse(TypeCode, out object?)
  nameWithType: TypeParser.Parse(TypeCode, out object?)
  fullName: TypeHelp.TypeParser.Parse(System.TypeCode, out object?)
  type: Method
  source:
    id: Parse
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\public\TypeParser_Public.cs
    startLine: 382
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public bool Parse(TypeCode typeCode, out object? result)
    parameters:
    - id: typeCode
      type: System.TypeCode
    - id: result
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Function Parse(typeCode As TypeCode, result As Object) As Boolean
  overload: TypeHelp.TypeParser.Parse*
  nameWithType.vb: TypeParser.Parse(TypeCode, Object)
  fullName.vb: TypeHelp.TypeParser.Parse(System.TypeCode, Object)
  name.vb: Parse(TypeCode, Object)
- uid: TypeHelp.TypeParser.Clamp(System.Char,System.Char)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Char,System.Char)
  id: Clamp(System.Char,System.Char)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(char, char)
  nameWithType: TypeParser.Clamp(char, char)
  fullName: TypeHelp.TypeParser.Clamp(char, char)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 14
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static char Clamp(char value, char max)
    parameters:
    - id: value
      type: System.Char
    - id: max
      type: System.Char
    return:
      type: System.Char
    content.vb: Public Shared Function Clamp(value As Char, max As Char) As Char
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Char, Char)
  fullName.vb: TypeHelp.TypeParser.Clamp(Char, Char)
  name.vb: Clamp(Char, Char)
- uid: TypeHelp.TypeParser.Clamp(System.Char,System.Char,System.Char)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Char,System.Char,System.Char)
  id: Clamp(System.Char,System.Char,System.Char)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(char, char, char)
  nameWithType: TypeParser.Clamp(char, char, char)
  fullName: TypeHelp.TypeParser.Clamp(char, char, char)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 20
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static char Clamp(char value, char min, char max)
    parameters:
    - id: value
      type: System.Char
    - id: min
      type: System.Char
    - id: max
      type: System.Char
    return:
      type: System.Char
    content.vb: Public Shared Function Clamp(value As Char, min As Char, max As Char) As Char
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Char, Char, Char)
  fullName.vb: TypeHelp.TypeParser.Clamp(Char, Char, Char)
  name.vb: Clamp(Char, Char, Char)
- uid: TypeHelp.TypeParser.Clamp(System.SByte,System.SByte)
  commentId: M:TypeHelp.TypeParser.Clamp(System.SByte,System.SByte)
  id: Clamp(System.SByte,System.SByte)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(sbyte, sbyte)
  nameWithType: TypeParser.Clamp(sbyte, sbyte)
  fullName: TypeHelp.TypeParser.Clamp(sbyte, sbyte)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 25
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static sbyte Clamp(sbyte value, sbyte max)
    parameters:
    - id: value
      type: System.SByte
    - id: max
      type: System.SByte
    return:
      type: System.SByte
    content.vb: Public Shared Function Clamp(value As SByte, max As SByte) As SByte
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(SByte, SByte)
  fullName.vb: TypeHelp.TypeParser.Clamp(SByte, SByte)
  name.vb: Clamp(SByte, SByte)
- uid: TypeHelp.TypeParser.Clamp(System.SByte,System.SByte,System.SByte)
  commentId: M:TypeHelp.TypeParser.Clamp(System.SByte,System.SByte,System.SByte)
  id: Clamp(System.SByte,System.SByte,System.SByte)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(sbyte, sbyte, sbyte)
  nameWithType: TypeParser.Clamp(sbyte, sbyte, sbyte)
  fullName: TypeHelp.TypeParser.Clamp(sbyte, sbyte, sbyte)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 30
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static sbyte Clamp(sbyte value, sbyte min, sbyte max)
    parameters:
    - id: value
      type: System.SByte
    - id: min
      type: System.SByte
    - id: max
      type: System.SByte
    return:
      type: System.SByte
    content.vb: Public Shared Function Clamp(value As SByte, min As SByte, max As SByte) As SByte
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(SByte, SByte, SByte)
  fullName.vb: TypeHelp.TypeParser.Clamp(SByte, SByte, SByte)
  name.vb: Clamp(SByte, SByte, SByte)
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.SByte,System.SByte,System.SByte)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.SByte,System.SByte,System.SByte)
  id: Clamp(System.Boolean,System.SByte,System.SByte,System.SByte)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, sbyte, sbyte, sbyte)
  nameWithType: TypeParser.Clamp(bool, sbyte, sbyte, sbyte)
  fullName: TypeHelp.TypeParser.Clamp(bool, sbyte, sbyte, sbyte)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 36
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static sbyte Clamp(bool abs, sbyte value, sbyte min, sbyte max)
    parameters:
    - id: abs
      type: System.Boolean
    - id: value
      type: System.SByte
    - id: min
      type: System.SByte
    - id: max
      type: System.SByte
    return:
      type: System.SByte
    content.vb: Public Shared Function Clamp(abs As Boolean, value As SByte, min As SByte, max As SByte) As SByte
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, SByte, SByte, SByte)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, SByte, SByte, SByte)
  name.vb: Clamp(Boolean, SByte, SByte, SByte)
- uid: TypeHelp.TypeParser.Clamp(System.Byte,System.Byte)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Byte,System.Byte)
  id: Clamp(System.Byte,System.Byte)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(byte, byte)
  nameWithType: TypeParser.Clamp(byte, byte)
  fullName: TypeHelp.TypeParser.Clamp(byte, byte)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 42
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static byte Clamp(byte value, byte max)
    parameters:
    - id: value
      type: System.Byte
    - id: max
      type: System.Byte
    return:
      type: System.Byte
    content.vb: Public Shared Function Clamp(value As Byte, max As Byte) As Byte
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Byte, Byte)
  fullName.vb: TypeHelp.TypeParser.Clamp(Byte, Byte)
  name.vb: Clamp(Byte, Byte)
- uid: TypeHelp.TypeParser.Clamp(System.Byte,System.Byte,System.Byte)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Byte,System.Byte,System.Byte)
  id: Clamp(System.Byte,System.Byte,System.Byte)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(byte, byte, byte)
  nameWithType: TypeParser.Clamp(byte, byte, byte)
  fullName: TypeHelp.TypeParser.Clamp(byte, byte, byte)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 48
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static byte Clamp(byte value, byte min, byte max)
    parameters:
    - id: value
      type: System.Byte
    - id: min
      type: System.Byte
    - id: max
      type: System.Byte
    return:
      type: System.Byte
    content.vb: Public Shared Function Clamp(value As Byte, min As Byte, max As Byte) As Byte
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Byte, Byte, Byte)
  fullName.vb: TypeHelp.TypeParser.Clamp(Byte, Byte, Byte)
  name.vb: Clamp(Byte, Byte, Byte)
- uid: TypeHelp.TypeParser.Clamp(System.Int16,System.Int16)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Int16,System.Int16)
  id: Clamp(System.Int16,System.Int16)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(short, short)
  nameWithType: TypeParser.Clamp(short, short)
  fullName: TypeHelp.TypeParser.Clamp(short, short)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 53
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static short Clamp(short value, short max)
    parameters:
    - id: value
      type: System.Int16
    - id: max
      type: System.Int16
    return:
      type: System.Int16
    content.vb: Public Shared Function Clamp(value As Short, max As Short) As Short
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Short, Short)
  fullName.vb: TypeHelp.TypeParser.Clamp(Short, Short)
  name.vb: Clamp(Short, Short)
- uid: TypeHelp.TypeParser.Clamp(System.Int16,System.Int16,System.Int16)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Int16,System.Int16,System.Int16)
  id: Clamp(System.Int16,System.Int16,System.Int16)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(short, short, short)
  nameWithType: TypeParser.Clamp(short, short, short)
  fullName: TypeHelp.TypeParser.Clamp(short, short, short)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 59
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static short Clamp(short value, short min, short max)
    parameters:
    - id: value
      type: System.Int16
    - id: min
      type: System.Int16
    - id: max
      type: System.Int16
    return:
      type: System.Int16
    content.vb: Public Shared Function Clamp(value As Short, min As Short, max As Short) As Short
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Short, Short, Short)
  fullName.vb: TypeHelp.TypeParser.Clamp(Short, Short, Short)
  name.vb: Clamp(Short, Short, Short)
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.Int16,System.Int16,System.Int16)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.Int16,System.Int16,System.Int16)
  id: Clamp(System.Boolean,System.Int16,System.Int16,System.Int16)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, short, short, short)
  nameWithType: TypeParser.Clamp(bool, short, short, short)
  fullName: TypeHelp.TypeParser.Clamp(bool, short, short, short)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 65
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static short Clamp(bool abs, short value, short min, short max)
    parameters:
    - id: abs
      type: System.Boolean
    - id: value
      type: System.Int16
    - id: min
      type: System.Int16
    - id: max
      type: System.Int16
    return:
      type: System.Int16
    content.vb: Public Shared Function Clamp(abs As Boolean, value As Short, min As Short, max As Short) As Short
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, Short, Short, Short)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, Short, Short, Short)
  name.vb: Clamp(Boolean, Short, Short, Short)
- uid: TypeHelp.TypeParser.Clamp(System.Int32,System.Int32)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Int32,System.Int32)
  id: Clamp(System.Int32,System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(int, int)
  nameWithType: TypeParser.Clamp(int, int)
  fullName: TypeHelp.TypeParser.Clamp(int, int)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 71
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int Clamp(int value, int max)
    parameters:
    - id: value
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Clamp(value As Integer, max As Integer) As Integer
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Integer, Integer)
  fullName.vb: TypeHelp.TypeParser.Clamp(Integer, Integer)
  name.vb: Clamp(Integer, Integer)
- uid: TypeHelp.TypeParser.Clamp(System.Int32,System.Int32,System.Int32)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Int32,System.Int32,System.Int32)
  id: Clamp(System.Int32,System.Int32,System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(int, int, int)
  nameWithType: TypeParser.Clamp(int, int, int)
  fullName: TypeHelp.TypeParser.Clamp(int, int, int)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 76
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int Clamp(int value, int min, int max)
    parameters:
    - id: value
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Clamp(value As Integer, min As Integer, max As Integer) As Integer
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Integer, Integer, Integer)
  fullName.vb: TypeHelp.TypeParser.Clamp(Integer, Integer, Integer)
  name.vb: Clamp(Integer, Integer, Integer)
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.Int32,System.Int32,System.Int32)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.Int32,System.Int32,System.Int32)
  id: Clamp(System.Boolean,System.Int32,System.Int32,System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, int, int, int)
  nameWithType: TypeParser.Clamp(bool, int, int, int)
  fullName: TypeHelp.TypeParser.Clamp(bool, int, int, int)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 82
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int Clamp(bool abs, int value, int min, int max)
    parameters:
    - id: abs
      type: System.Boolean
    - id: value
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Clamp(abs As Boolean, value As Integer, min As Integer, max As Integer) As Integer
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, Integer, Integer, Integer)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, Integer, Integer, Integer)
  name.vb: Clamp(Boolean, Integer, Integer, Integer)
- uid: TypeHelp.TypeParser.Clamp(System.Int64,System.Int64)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Int64,System.Int64)
  id: Clamp(System.Int64,System.Int64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(long, long)
  nameWithType: TypeParser.Clamp(long, long)
  fullName: TypeHelp.TypeParser.Clamp(long, long)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 87
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static long Clamp(long value, long max)
    parameters:
    - id: value
      type: System.Int64
    - id: max
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Shared Function Clamp(value As Long, max As Long) As Long
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Long, Long)
  fullName.vb: TypeHelp.TypeParser.Clamp(Long, Long)
  name.vb: Clamp(Long, Long)
- uid: TypeHelp.TypeParser.Clamp(System.Int64,System.Int64,System.Int64)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Int64,System.Int64,System.Int64)
  id: Clamp(System.Int64,System.Int64,System.Int64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(long, long, long)
  nameWithType: TypeParser.Clamp(long, long, long)
  fullName: TypeHelp.TypeParser.Clamp(long, long, long)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 92
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static long Clamp(long value, long min, long max)
    parameters:
    - id: value
      type: System.Int64
    - id: min
      type: System.Int64
    - id: max
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Shared Function Clamp(value As Long, min As Long, max As Long) As Long
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Long, Long, Long)
  fullName.vb: TypeHelp.TypeParser.Clamp(Long, Long, Long)
  name.vb: Clamp(Long, Long, Long)
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.Int64,System.Int64,System.Int64)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.Int64,System.Int64,System.Int64)
  id: Clamp(System.Boolean,System.Int64,System.Int64,System.Int64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, long, long, long)
  nameWithType: TypeParser.Clamp(bool, long, long, long)
  fullName: TypeHelp.TypeParser.Clamp(bool, long, long, long)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 97
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static long Clamp(bool abs, long value, long min, long max)
    parameters:
    - id: abs
      type: System.Boolean
    - id: value
      type: System.Int64
    - id: min
      type: System.Int64
    - id: max
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Shared Function Clamp(abs As Boolean, value As Long, min As Long, max As Long) As Long
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, Long, Long, Long)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, Long, Long, Long)
  name.vb: Clamp(Boolean, Long, Long, Long)
- uid: TypeHelp.TypeParser.Clamp(System.Single,System.Single)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Single,System.Single)
  id: Clamp(System.Single,System.Single)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(float, float)
  nameWithType: TypeParser.Clamp(float, float)
  fullName: TypeHelp.TypeParser.Clamp(float, float)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 105
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static float Clamp(float value, float max)
    parameters:
    - id: value
      type: System.Single
    - id: max
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Clamp(value As Single, max As Single) As Single
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Single, Single)
  fullName.vb: TypeHelp.TypeParser.Clamp(Single, Single)
  name.vb: Clamp(Single, Single)
- uid: TypeHelp.TypeParser.Clamp(System.Single,System.Single,System.Single)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Single,System.Single,System.Single)
  id: Clamp(System.Single,System.Single,System.Single)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(float, float, float)
  nameWithType: TypeParser.Clamp(float, float, float)
  fullName: TypeHelp.TypeParser.Clamp(float, float, float)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 110
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static float Clamp(float value, float min, float max)
    parameters:
    - id: value
      type: System.Single
    - id: min
      type: System.Single
    - id: max
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Clamp(value As Single, min As Single, max As Single) As Single
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Single, Single, Single)
  fullName.vb: TypeHelp.TypeParser.Clamp(Single, Single, Single)
  name.vb: Clamp(Single, Single, Single)
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.Single,System.Single,System.Single)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.Single,System.Single,System.Single)
  id: Clamp(System.Boolean,System.Single,System.Single,System.Single)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, float, float, float)
  nameWithType: TypeParser.Clamp(bool, float, float, float)
  fullName: TypeHelp.TypeParser.Clamp(bool, float, float, float)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 115
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static float Clamp(bool abs, float value, float min, float max)
    parameters:
    - id: abs
      type: System.Boolean
    - id: value
      type: System.Single
    - id: min
      type: System.Single
    - id: max
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Clamp(abs As Boolean, value As Single, min As Single, max As Single) As Single
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, Single, Single, Single)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, Single, Single, Single)
  name.vb: Clamp(Boolean, Single, Single, Single)
- uid: TypeHelp.TypeParser.Clamp(System.Double,System.Double)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Double,System.Double)
  id: Clamp(System.Double,System.Double)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(double, double)
  nameWithType: TypeParser.Clamp(double, double)
  fullName: TypeHelp.TypeParser.Clamp(double, double)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 130
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static double Clamp(double value, double max)
    parameters:
    - id: value
      type: System.Double
    - id: max
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Clamp(value As Double, max As Double) As Double
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Double, Double)
  fullName.vb: TypeHelp.TypeParser.Clamp(Double, Double)
  name.vb: Clamp(Double, Double)
- uid: TypeHelp.TypeParser.Clamp(System.Double,System.Double,System.Double)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Double,System.Double,System.Double)
  id: Clamp(System.Double,System.Double,System.Double)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(double, double, double)
  nameWithType: TypeParser.Clamp(double, double, double)
  fullName: TypeHelp.TypeParser.Clamp(double, double, double)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 135
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static double Clamp(double value, double min, double max)
    parameters:
    - id: value
      type: System.Double
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Clamp(value As Double, min As Double, max As Double) As Double
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Double, Double, Double)
  fullName.vb: TypeHelp.TypeParser.Clamp(Double, Double, Double)
  name.vb: Clamp(Double, Double, Double)
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.Double,System.Double,System.Double)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.Double,System.Double,System.Double)
  id: Clamp(System.Boolean,System.Double,System.Double,System.Double)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, double, double, double)
  nameWithType: TypeParser.Clamp(bool, double, double, double)
  fullName: TypeHelp.TypeParser.Clamp(bool, double, double, double)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 140
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static double Clamp(bool abs, double value, double min, double max)
    parameters:
    - id: abs
      type: System.Boolean
    - id: value
      type: System.Double
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Clamp(abs As Boolean, value As Double, min As Double, max As Double) As Double
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, Double, Double, Double)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, Double, Double, Double)
  name.vb: Clamp(Boolean, Double, Double, Double)
- uid: TypeHelp.TypeParser.Clamp(System.Decimal,System.Decimal)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Decimal,System.Decimal)
  id: Clamp(System.Decimal,System.Decimal)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(decimal, decimal)
  nameWithType: TypeParser.Clamp(decimal, decimal)
  fullName: TypeHelp.TypeParser.Clamp(decimal, decimal)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 155
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static decimal Clamp(decimal value, decimal max)
    parameters:
    - id: value
      type: System.Decimal
    - id: max
      type: System.Decimal
    return:
      type: System.Decimal
    content.vb: Public Shared Function Clamp(value As Decimal, max As Decimal) As Decimal
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Decimal, Decimal)
  fullName.vb: TypeHelp.TypeParser.Clamp(Decimal, Decimal)
  name.vb: Clamp(Decimal, Decimal)
- uid: TypeHelp.TypeParser.Clamp(System.Decimal,System.Decimal,System.Decimal)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Decimal,System.Decimal,System.Decimal)
  id: Clamp(System.Decimal,System.Decimal,System.Decimal)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(decimal, decimal, decimal)
  nameWithType: TypeParser.Clamp(decimal, decimal, decimal)
  fullName: TypeHelp.TypeParser.Clamp(decimal, decimal, decimal)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 160
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static decimal Clamp(decimal value, decimal min, decimal max)
    parameters:
    - id: value
      type: System.Decimal
    - id: min
      type: System.Decimal
    - id: max
      type: System.Decimal
    return:
      type: System.Decimal
    content.vb: Public Shared Function Clamp(value As Decimal, min As Decimal, max As Decimal) As Decimal
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Decimal, Decimal, Decimal)
  fullName.vb: TypeHelp.TypeParser.Clamp(Decimal, Decimal, Decimal)
  name.vb: Clamp(Decimal, Decimal, Decimal)
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.Decimal,System.Decimal,System.Decimal)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.Decimal,System.Decimal,System.Decimal)
  id: Clamp(System.Boolean,System.Decimal,System.Decimal,System.Decimal)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, decimal, decimal, decimal)
  nameWithType: TypeParser.Clamp(bool, decimal, decimal, decimal)
  fullName: TypeHelp.TypeParser.Clamp(bool, decimal, decimal, decimal)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 165
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static decimal Clamp(bool abs, decimal value, decimal min, decimal max)
    parameters:
    - id: abs
      type: System.Boolean
    - id: value
      type: System.Decimal
    - id: min
      type: System.Decimal
    - id: max
      type: System.Decimal
    return:
      type: System.Decimal
    content.vb: Public Shared Function Clamp(abs As Boolean, value As Decimal, min As Decimal, max As Decimal) As Decimal
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, Decimal, Decimal, Decimal)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, Decimal, Decimal, Decimal)
  name.vb: Clamp(Boolean, Decimal, Decimal, Decimal)
- uid: TypeHelp.TypeParser.Clamp(System.UInt16,System.UInt16)
  commentId: M:TypeHelp.TypeParser.Clamp(System.UInt16,System.UInt16)
  id: Clamp(System.UInt16,System.UInt16)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(ushort, ushort)
  nameWithType: TypeParser.Clamp(ushort, ushort)
  fullName: TypeHelp.TypeParser.Clamp(ushort, ushort)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 177
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static ushort Clamp(ushort value, ushort max)
    parameters:
    - id: value
      type: System.UInt16
    - id: max
      type: System.UInt16
    return:
      type: System.UInt16
    content.vb: Public Shared Function Clamp(value As UShort, max As UShort) As UShort
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(UShort, UShort)
  fullName.vb: TypeHelp.TypeParser.Clamp(UShort, UShort)
  name.vb: Clamp(UShort, UShort)
- uid: TypeHelp.TypeParser.Clamp(System.UInt16,System.UInt16,System.UInt16)
  commentId: M:TypeHelp.TypeParser.Clamp(System.UInt16,System.UInt16,System.UInt16)
  id: Clamp(System.UInt16,System.UInt16,System.UInt16)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(ushort, ushort, ushort)
  nameWithType: TypeParser.Clamp(ushort, ushort, ushort)
  fullName: TypeHelp.TypeParser.Clamp(ushort, ushort, ushort)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 183
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static ushort Clamp(ushort value, ushort min, ushort max)
    parameters:
    - id: value
      type: System.UInt16
    - id: min
      type: System.UInt16
    - id: max
      type: System.UInt16
    return:
      type: System.UInt16
    content.vb: Public Shared Function Clamp(value As UShort, min As UShort, max As UShort) As UShort
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(UShort, UShort, UShort)
  fullName.vb: TypeHelp.TypeParser.Clamp(UShort, UShort, UShort)
  name.vb: Clamp(UShort, UShort, UShort)
- uid: TypeHelp.TypeParser.Clamp(System.UInt32,System.UInt32)
  commentId: M:TypeHelp.TypeParser.Clamp(System.UInt32,System.UInt32)
  id: Clamp(System.UInt32,System.UInt32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(uint, uint)
  nameWithType: TypeParser.Clamp(uint, uint)
  fullName: TypeHelp.TypeParser.Clamp(uint, uint)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 188
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static uint Clamp(uint value, uint max)
    parameters:
    - id: value
      type: System.UInt32
    - id: max
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Shared Function Clamp(value As UInteger, max As UInteger) As UInteger
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(UInteger, UInteger)
  fullName.vb: TypeHelp.TypeParser.Clamp(UInteger, UInteger)
  name.vb: Clamp(UInteger, UInteger)
- uid: TypeHelp.TypeParser.Clamp(System.UInt32,System.UInt32,System.UInt32)
  commentId: M:TypeHelp.TypeParser.Clamp(System.UInt32,System.UInt32,System.UInt32)
  id: Clamp(System.UInt32,System.UInt32,System.UInt32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(uint, uint, uint)
  nameWithType: TypeParser.Clamp(uint, uint, uint)
  fullName: TypeHelp.TypeParser.Clamp(uint, uint, uint)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 194
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static uint Clamp(uint value, uint min, uint max)
    parameters:
    - id: value
      type: System.UInt32
    - id: min
      type: System.UInt32
    - id: max
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Shared Function Clamp(value As UInteger, min As UInteger, max As UInteger) As UInteger
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(UInteger, UInteger, UInteger)
  fullName.vb: TypeHelp.TypeParser.Clamp(UInteger, UInteger, UInteger)
  name.vb: Clamp(UInteger, UInteger, UInteger)
- uid: TypeHelp.TypeParser.Clamp(System.UInt64,System.UInt64)
  commentId: M:TypeHelp.TypeParser.Clamp(System.UInt64,System.UInt64)
  id: Clamp(System.UInt64,System.UInt64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(ulong, ulong)
  nameWithType: TypeParser.Clamp(ulong, ulong)
  fullName: TypeHelp.TypeParser.Clamp(ulong, ulong)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 199
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static ulong Clamp(ulong value, ulong max)
    parameters:
    - id: value
      type: System.UInt64
    - id: max
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Shared Function Clamp(value As ULong, max As ULong) As ULong
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(ULong, ULong)
  fullName.vb: TypeHelp.TypeParser.Clamp(ULong, ULong)
  name.vb: Clamp(ULong, ULong)
- uid: TypeHelp.TypeParser.Clamp(System.UInt64,System.UInt64,System.UInt64)
  commentId: M:TypeHelp.TypeParser.Clamp(System.UInt64,System.UInt64,System.UInt64)
  id: Clamp(System.UInt64,System.UInt64,System.UInt64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(ulong, ulong, ulong)
  nameWithType: TypeParser.Clamp(ulong, ulong, ulong)
  fullName: TypeHelp.TypeParser.Clamp(ulong, ulong, ulong)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 204
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static ulong Clamp(ulong value, ulong min, ulong max)
    parameters:
    - id: value
      type: System.UInt64
    - id: min
      type: System.UInt64
    - id: max
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Shared Function Clamp(value As ULong, min As ULong, max As ULong) As ULong
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(ULong, ULong, ULong)
  fullName.vb: TypeHelp.TypeParser.Clamp(ULong, ULong, ULong)
  name.vb: Clamp(ULong, ULong, ULong)
- uid: TypeHelp.TypeParser.Clamp(System.DateTime,System.DateTime)
  commentId: M:TypeHelp.TypeParser.Clamp(System.DateTime,System.DateTime)
  id: Clamp(System.DateTime,System.DateTime)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(DateTime, DateTime)
  nameWithType: TypeParser.Clamp(DateTime, DateTime)
  fullName: TypeHelp.TypeParser.Clamp(System.DateTime, System.DateTime)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 211
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static DateTime Clamp(DateTime value, DateTime max)
    parameters:
    - id: value
      type: System.DateTime
    - id: max
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: Public Shared Function Clamp(value As Date, max As Date) As Date
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Date, Date)
  fullName.vb: TypeHelp.TypeParser.Clamp(Date, Date)
  name.vb: Clamp(Date, Date)
- uid: TypeHelp.TypeParser.Clamp(System.DateTime,System.DateTime,System.DateTime)
  commentId: M:TypeHelp.TypeParser.Clamp(System.DateTime,System.DateTime,System.DateTime)
  id: Clamp(System.DateTime,System.DateTime,System.DateTime)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(DateTime, DateTime, DateTime)
  nameWithType: TypeParser.Clamp(DateTime, DateTime, DateTime)
  fullName: TypeHelp.TypeParser.Clamp(System.DateTime, System.DateTime, System.DateTime)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 217
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static DateTime Clamp(DateTime value, DateTime min, DateTime max)
    parameters:
    - id: value
      type: System.DateTime
    - id: min
      type: System.DateTime
    - id: max
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: Public Shared Function Clamp(value As Date, min As Date, max As Date) As Date
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Date, Date, Date)
  fullName.vb: TypeHelp.TypeParser.Clamp(Date, Date, Date)
  name.vb: Clamp(Date, Date, Date)
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.Guid,System.Guid,System.Guid)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.Guid,System.Guid,System.Guid)
  id: Clamp(System.Boolean,System.Guid,System.Guid,System.Guid)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, Guid, Guid, Guid)
  nameWithType: TypeParser.Clamp(bool, Guid, Guid, Guid)
  fullName: TypeHelp.TypeParser.Clamp(bool, System.Guid, System.Guid, System.Guid)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 225
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Guid Clamp(bool asString, Guid value, Guid min, Guid max)
    parameters:
    - id: asString
      type: System.Boolean
    - id: value
      type: System.Guid
    - id: min
      type: System.Guid
    - id: max
      type: System.Guid
    return:
      type: System.Guid
    content.vb: Public Shared Function Clamp(asString As Boolean, value As Guid, min As Guid, max As Guid) As Guid
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, Guid, Guid, Guid)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, System.Guid, System.Guid, System.Guid)
  name.vb: Clamp(Boolean, Guid, Guid, Guid)
- uid: TypeHelp.TypeParser.Clamp(System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Clamp(System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(BigInteger, BigInteger)
  nameWithType: TypeParser.Clamp(BigInteger, BigInteger)
  fullName: TypeHelp.TypeParser.Clamp(System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 241
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static BigInteger Clamp(BigInteger value, BigInteger max)
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    - id: max
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
    content.vb: Public Shared Function Clamp(value As BigInteger, max As BigInteger) As BigInteger
  overload: TypeHelp.TypeParser.Clamp*
- uid: TypeHelp.TypeParser.Clamp(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Clamp(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(BigInteger, BigInteger, BigInteger)
  nameWithType: TypeParser.Clamp(BigInteger, BigInteger, BigInteger)
  fullName: TypeHelp.TypeParser.Clamp(System.Numerics.BigInteger, System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 246
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static BigInteger Clamp(BigInteger value, BigInteger min, BigInteger max)
    parameters:
    - id: value
      type: System.Numerics.BigInteger
    - id: min
      type: System.Numerics.BigInteger
    - id: max
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
    content.vb: Public Shared Function Clamp(value As BigInteger, min As BigInteger, max As BigInteger) As BigInteger
  overload: TypeHelp.TypeParser.Clamp*
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  id: Clamp(System.Boolean,System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, BigInteger, BigInteger, BigInteger)
  nameWithType: TypeParser.Clamp(bool, BigInteger, BigInteger, BigInteger)
  fullName: TypeHelp.TypeParser.Clamp(bool, System.Numerics.BigInteger, System.Numerics.BigInteger, System.Numerics.BigInteger)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 254
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static BigInteger Clamp(bool abs, BigInteger value, BigInteger min, BigInteger max)
    parameters:
    - id: abs
      type: System.Boolean
    - id: value
      type: System.Numerics.BigInteger
    - id: min
      type: System.Numerics.BigInteger
    - id: max
      type: System.Numerics.BigInteger
    return:
      type: System.Numerics.BigInteger
    content.vb: Public Shared Function Clamp(abs As Boolean, value As BigInteger, min As BigInteger, max As BigInteger) As BigInteger
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, BigInteger, BigInteger, BigInteger)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, System.Numerics.BigInteger, System.Numerics.BigInteger, System.Numerics.BigInteger)
  name.vb: Clamp(Boolean, BigInteger, BigInteger, BigInteger)
- uid: TypeHelp.TypeParser.Clamp(System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Numerics.Complex,System.Numerics.Complex)
  id: Clamp(System.Numerics.Complex,System.Numerics.Complex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(Complex, Complex)
  nameWithType: TypeParser.Clamp(Complex, Complex)
  fullName: TypeHelp.TypeParser.Clamp(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 266
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Complex Clamp(Complex value, Complex max)
    parameters:
    - id: value
      type: System.Numerics.Complex
    - id: max
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
    content.vb: Public Shared Function Clamp(value As Complex, max As Complex) As Complex
  overload: TypeHelp.TypeParser.Clamp*
- uid: TypeHelp.TypeParser.Clamp(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)
  id: Clamp(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(Complex, Complex, Complex)
  nameWithType: TypeParser.Clamp(Complex, Complex, Complex)
  fullName: TypeHelp.TypeParser.Clamp(System.Numerics.Complex, System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 271
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Complex Clamp(Complex value, Complex min, Complex max)
    parameters:
    - id: value
      type: System.Numerics.Complex
    - id: min
      type: System.Numerics.Complex
    - id: max
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
    content.vb: Public Shared Function Clamp(value As Complex, min As Complex, max As Complex) As Complex
  overload: TypeHelp.TypeParser.Clamp*
- uid: TypeHelp.TypeParser.Clamp(System.Boolean,System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)
  commentId: M:TypeHelp.TypeParser.Clamp(System.Boolean,System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)
  id: Clamp(System.Boolean,System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Clamp(bool, Complex, Complex, Complex)
  nameWithType: TypeParser.Clamp(bool, Complex, Complex, Complex)
  fullName: TypeHelp.TypeParser.Clamp(bool, System.Numerics.Complex, System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Clamp.cs
    startLine: 276
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Complex Clamp(bool abs, Complex value, Complex min, Complex max)
    parameters:
    - id: abs
      type: System.Boolean
    - id: value
      type: System.Numerics.Complex
    - id: min
      type: System.Numerics.Complex
    - id: max
      type: System.Numerics.Complex
    return:
      type: System.Numerics.Complex
    content.vb: Public Shared Function Clamp(abs As Boolean, value As Complex, min As Complex, max As Complex) As Complex
  overload: TypeHelp.TypeParser.Clamp*
  nameWithType.vb: TypeParser.Clamp(Boolean, Complex, Complex, Complex)
  fullName.vb: TypeHelp.TypeParser.Clamp(Boolean, System.Numerics.Complex, System.Numerics.Complex, System.Numerics.Complex)
  name.vb: Clamp(Boolean, Complex, Complex, Complex)
- uid: TypeHelp.TypeParser.Comp(TypeHelp.Cmp)
  commentId: M:TypeHelp.TypeParser.Comp(TypeHelp.Cmp)
  id: Comp(TypeHelp.Cmp)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Comp(Cmp)
  nameWithType: TypeParser.Comp(Cmp)
  fullName: TypeHelp.TypeParser.Comp(TypeHelp.Cmp)
  type: Method
  source:
    id: Comp
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 17
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp Comp(Cmp cmp)
    parameters:
    - id: cmp
      type: TypeHelp.Cmp
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function Comp(cmp As Cmp) As Cmp
  overload: TypeHelp.TypeParser.Comp*
- uid: TypeHelp.TypeParser.CompFromInt(System.Int32)
  commentId: M:TypeHelp.TypeParser.CompFromInt(System.Int32)
  id: CompFromInt(System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompFromInt(int)
  nameWithType: TypeParser.CompFromInt(int)
  fullName: TypeHelp.TypeParser.CompFromInt(int)
  type: Method
  source:
    id: CompFromInt
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 22
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompFromInt(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompFromInt(value As Integer) As Cmp
  overload: TypeHelp.TypeParser.CompFromInt*
  nameWithType.vb: TypeParser.CompFromInt(Integer)
  fullName.vb: TypeHelp.TypeParser.CompFromInt(Integer)
  name.vb: CompFromInt(Integer)
- uid: TypeHelp.TypeParser.Compare(System.Int32,System.Int32)
  commentId: M:TypeHelp.TypeParser.Compare(System.Int32,System.Int32)
  id: Compare(System.Int32,System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Compare(int, int)
  nameWithType: TypeParser.Compare(int, int)
  fullName: TypeHelp.TypeParser.Compare(int, int)
  type: Method
  source:
    id: Compare
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 30
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp Compare(int valueA, int valueB)
    parameters:
    - id: valueA
      type: System.Int32
    - id: valueB
      type: System.Int32
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function Compare(valueA As Integer, valueB As Integer) As Cmp
  overload: TypeHelp.TypeParser.Compare*
  nameWithType.vb: TypeParser.Compare(Integer, Integer)
  fullName.vb: TypeHelp.TypeParser.Compare(Integer, Integer)
  name.vb: Compare(Integer, Integer)
- uid: TypeHelp.TypeParser.Compare(System.UInt32,System.UInt32)
  commentId: M:TypeHelp.TypeParser.Compare(System.UInt32,System.UInt32)
  id: Compare(System.UInt32,System.UInt32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Compare(uint, uint)
  nameWithType: TypeParser.Compare(uint, uint)
  fullName: TypeHelp.TypeParser.Compare(uint, uint)
  type: Method
  source:
    id: Compare
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 38
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp Compare(uint valueA, uint valueB)
    parameters:
    - id: valueA
      type: System.UInt32
    - id: valueB
      type: System.UInt32
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function Compare(valueA As UInteger, valueB As UInteger) As Cmp
  overload: TypeHelp.TypeParser.Compare*
  nameWithType.vb: TypeParser.Compare(UInteger, UInteger)
  fullName.vb: TypeHelp.TypeParser.Compare(UInteger, UInteger)
  name.vb: Compare(UInteger, UInteger)
- uid: TypeHelp.TypeParser.Compare(System.Int64,System.Int64)
  commentId: M:TypeHelp.TypeParser.Compare(System.Int64,System.Int64)
  id: Compare(System.Int64,System.Int64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Compare(long, long)
  nameWithType: TypeParser.Compare(long, long)
  fullName: TypeHelp.TypeParser.Compare(long, long)
  type: Method
  source:
    id: Compare
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 46
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp Compare(long valueA, long valueB)
    parameters:
    - id: valueA
      type: System.Int64
    - id: valueB
      type: System.Int64
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function Compare(valueA As Long, valueB As Long) As Cmp
  overload: TypeHelp.TypeParser.Compare*
  nameWithType.vb: TypeParser.Compare(Long, Long)
  fullName.vb: TypeHelp.TypeParser.Compare(Long, Long)
  name.vb: Compare(Long, Long)
- uid: TypeHelp.TypeParser.Compare(System.UInt64,System.UInt64)
  commentId: M:TypeHelp.TypeParser.Compare(System.UInt64,System.UInt64)
  id: Compare(System.UInt64,System.UInt64)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Compare(ulong, ulong)
  nameWithType: TypeParser.Compare(ulong, ulong)
  fullName: TypeHelp.TypeParser.Compare(ulong, ulong)
  type: Method
  source:
    id: Compare
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 54
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp Compare(ulong valueA, ulong valueB)
    parameters:
    - id: valueA
      type: System.UInt64
    - id: valueB
      type: System.UInt64
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function Compare(valueA As ULong, valueB As ULong) As Cmp
  overload: TypeHelp.TypeParser.Compare*
  nameWithType.vb: TypeParser.Compare(ULong, ULong)
  fullName.vb: TypeHelp.TypeParser.Compare(ULong, ULong)
  name.vb: Compare(ULong, ULong)
- uid: TypeHelp.TypeParser.Compare(System.String,System.String)
  commentId: M:TypeHelp.TypeParser.Compare(System.String,System.String)
  id: Compare(System.String,System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Compare(string?, string?)
  nameWithType: TypeParser.Compare(string?, string?)
  fullName: TypeHelp.TypeParser.Compare(string?, string?)
  type: Method
  source:
    id: Compare
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 62
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp Compare(string? valueA, string? valueB)
    parameters:
    - id: valueA
      type: System.String
    - id: valueB
      type: System.String
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function Compare(valueA As String, valueB As String) As Cmp
  overload: TypeHelp.TypeParser.Compare*
  nameWithType.vb: TypeParser.Compare(String, String)
  fullName.vb: TypeHelp.TypeParser.Compare(String, String)
  name.vb: Compare(String, String)
- uid: TypeHelp.TypeParser.Compare(System.Boolean,System.Object,System.Object)
  commentId: M:TypeHelp.TypeParser.Compare(System.Boolean,System.Object,System.Object)
  id: Compare(System.Boolean,System.Object,System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Compare(bool, object, object)
  nameWithType: TypeParser.Compare(bool, object, object)
  fullName: TypeHelp.TypeParser.Compare(bool, object, object)
  type: Method
  source:
    id: Compare
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 77
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp Compare(bool byValue, object objA, object objB)
    parameters:
    - id: byValue
      type: System.Boolean
    - id: objA
      type: System.Object
    - id: objB
      type: System.Object
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function Compare(byValue As Boolean, objA As Object, objB As Object) As Cmp
  overload: TypeHelp.TypeParser.Compare*
  nameWithType.vb: TypeParser.Compare(Boolean, Object, Object)
  fullName.vb: TypeHelp.TypeParser.Compare(Boolean, Object, Object)
  name.vb: Compare(Boolean, Object, Object)
- uid: TypeHelp.TypeParser.Compare(System.Boolean,System.Byte[],System.Byte[])
  commentId: M:TypeHelp.TypeParser.Compare(System.Boolean,System.Byte[],System.Byte[])
  id: Compare(System.Boolean,System.Byte[],System.Byte[])
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Compare(bool, byte[]?, byte[]?)
  nameWithType: TypeParser.Compare(bool, byte[]?, byte[]?)
  fullName: TypeHelp.TypeParser.Compare(bool, byte[]?, byte[]?)
  type: Method
  source:
    id: Compare
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 84
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp Compare(bool strict, byte[]? bytesA, byte[]? bytesB)
    parameters:
    - id: strict
      type: System.Boolean
    - id: bytesA
      type: System.Byte[]
    - id: bytesB
      type: System.Byte[]
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function Compare(strict As Boolean, bytesA As Byte(), bytesB As Byte()) As Cmp
  overload: TypeHelp.TypeParser.Compare*
  nameWithType.vb: TypeParser.Compare(Boolean, Byte(), Byte())
  fullName.vb: TypeHelp.TypeParser.Compare(Boolean, Byte(), Byte())
  name.vb: Compare(Boolean, Byte(), Byte())
- uid: TypeHelp.TypeParser.CompareEnums(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  commentId: M:TypeHelp.TypeParser.CompareEnums(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  id: CompareEnums(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareEnums(TypeInfo, TypeInfo)
  nameWithType: TypeParser.CompareEnums(TypeInfo, TypeInfo)
  fullName: TypeHelp.TypeParser.CompareEnums(TypeHelp.TypeInfo, TypeHelp.TypeInfo)
  type: Method
  source:
    id: CompareEnums
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 109
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareEnums(TypeInfo tioA, TypeInfo tioB)
    parameters:
    - id: tioA
      type: TypeHelp.TypeInfo
    - id: tioB
      type: TypeHelp.TypeInfo
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareEnums(tioA As TypeInfo, tioB As TypeInfo) As Cmp
  overload: TypeHelp.TypeParser.CompareEnums*
- uid: TypeHelp.TypeParser.CompareEnumTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  commentId: M:TypeHelp.TypeParser.CompareEnumTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  id: CompareEnumTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareEnumTypes(TypeInfo, TypeInfo)
  nameWithType: TypeParser.CompareEnumTypes(TypeInfo, TypeInfo)
  fullName: TypeHelp.TypeParser.CompareEnumTypes(TypeHelp.TypeInfo, TypeHelp.TypeInfo)
  type: Method
  source:
    id: CompareEnumTypes
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 116
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareEnumTypes(TypeInfo tioA, TypeInfo tioB)
    parameters:
    - id: tioA
      type: TypeHelp.TypeInfo
    - id: tioB
      type: TypeHelp.TypeInfo
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareEnumTypes(tioA As TypeInfo, tioB As TypeInfo) As Cmp
  overload: TypeHelp.TypeParser.CompareEnumTypes*
- uid: TypeHelp.TypeParser.CompareEnumValues(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  commentId: M:TypeHelp.TypeParser.CompareEnumValues(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  id: CompareEnumValues(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareEnumValues(TypeInfo, TypeInfo)
  nameWithType: TypeParser.CompareEnumValues(TypeInfo, TypeInfo)
  fullName: TypeHelp.TypeParser.CompareEnumValues(TypeHelp.TypeInfo, TypeHelp.TypeInfo)
  type: Method
  source:
    id: CompareEnumValues
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 129
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareEnumValues(TypeInfo tioA, TypeInfo tioB)
    parameters:
    - id: tioA
      type: TypeHelp.TypeInfo
    - id: tioB
      type: TypeHelp.TypeInfo
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareEnumValues(tioA As TypeInfo, tioB As TypeInfo) As Cmp
  overload: TypeHelp.TypeParser.CompareEnumValues*
- uid: TypeHelp.TypeParser.CompareGuids(System.Boolean,System.Guid,System.Guid)
  commentId: M:TypeHelp.TypeParser.CompareGuids(System.Boolean,System.Guid,System.Guid)
  id: CompareGuids(System.Boolean,System.Guid,System.Guid)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareGuids(bool, Guid, Guid)
  nameWithType: TypeParser.CompareGuids(bool, Guid, Guid)
  fullName: TypeHelp.TypeParser.CompareGuids(bool, System.Guid, System.Guid)
  type: Method
  source:
    id: CompareGuids
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 145
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareGuids(bool asString, Guid guidA, Guid guidB)
    parameters:
    - id: asString
      type: System.Boolean
    - id: guidA
      type: System.Guid
    - id: guidB
      type: System.Guid
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareGuids(asString As Boolean, guidA As Guid, guidB As Guid) As Cmp
  overload: TypeHelp.TypeParser.CompareGuids*
  nameWithType.vb: TypeParser.CompareGuids(Boolean, Guid, Guid)
  fullName.vb: TypeHelp.TypeParser.CompareGuids(Boolean, System.Guid, System.Guid)
  name.vb: CompareGuids(Boolean, Guid, Guid)
- uid: TypeHelp.TypeParser.CompareGuids(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  commentId: M:TypeHelp.TypeParser.CompareGuids(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  id: CompareGuids(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareGuids(TypeInfo, TypeInfo)
  nameWithType: TypeParser.CompareGuids(TypeInfo, TypeInfo)
  fullName: TypeHelp.TypeParser.CompareGuids(TypeHelp.TypeInfo, TypeHelp.TypeInfo)
  type: Method
  source:
    id: CompareGuids
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 158
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareGuids(TypeInfo tioA, TypeInfo tioB)
    parameters:
    - id: tioA
      type: TypeHelp.TypeInfo
    - id: tioB
      type: TypeHelp.TypeInfo
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareGuids(tioA As TypeInfo, tioB As TypeInfo) As Cmp
  overload: TypeHelp.TypeParser.CompareGuids*
- uid: TypeHelp.TypeParser.CompareNulls(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  commentId: M:TypeHelp.TypeParser.CompareNulls(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  id: CompareNulls(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareNulls(TypeInfo, TypeInfo)
  nameWithType: TypeParser.CompareNulls(TypeInfo, TypeInfo)
  fullName: TypeHelp.TypeParser.CompareNulls(TypeHelp.TypeInfo, TypeHelp.TypeInfo)
  type: Method
  source:
    id: CompareNulls
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 199
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareNulls(TypeInfo tioA, TypeInfo tioB)
    parameters:
    - id: tioA
      type: TypeHelp.TypeInfo
    - id: tioB
      type: TypeHelp.TypeInfo
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareNulls(tioA As TypeInfo, tioB As TypeInfo) As Cmp
  overload: TypeHelp.TypeParser.CompareNulls*
- uid: TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  commentId: M:TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  id: CompareNumerics(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareNumerics(TypeInfo, TypeInfo)
  nameWithType: TypeParser.CompareNumerics(TypeInfo, TypeInfo)
  fullName: TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo, TypeHelp.TypeInfo)
  type: Method
  source:
    id: CompareNumerics
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 226
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareNumerics(TypeInfo tioA, TypeInfo tioB)
    parameters:
    - id: tioA
      type: TypeHelp.TypeInfo
    - id: tioB
      type: TypeHelp.TypeInfo
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareNumerics(tioA As TypeInfo, tioB As TypeInfo) As Cmp
  overload: TypeHelp.TypeParser.CompareNumerics*
- uid: TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo,TypeHelp.TypeInfo,System.Boolean)
  commentId: M:TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo,TypeHelp.TypeInfo,System.Boolean)
  id: CompareNumerics(TypeHelp.TypeInfo,TypeHelp.TypeInfo,System.Boolean)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareNumerics(TypeInfo, TypeInfo, bool)
  nameWithType: TypeParser.CompareNumerics(TypeInfo, TypeInfo, bool)
  fullName: TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo, TypeHelp.TypeInfo, bool)
  type: Method
  source:
    id: CompareNumerics
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 231
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareNumerics(TypeInfo tioA, TypeInfo tioB, bool integersExt)
    parameters:
    - id: tioA
      type: TypeHelp.TypeInfo
    - id: tioB
      type: TypeHelp.TypeInfo
    - id: integersExt
      type: System.Boolean
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareNumerics(tioA As TypeInfo, tioB As TypeInfo, integersExt As Boolean) As Cmp
  overload: TypeHelp.TypeParser.CompareNumerics*
  nameWithType.vb: TypeParser.CompareNumerics(TypeInfo, TypeInfo, Boolean)
  fullName.vb: TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo, TypeHelp.TypeInfo, Boolean)
  name.vb: CompareNumerics(TypeInfo, TypeInfo, Boolean)
- uid: TypeHelp.TypeParser.CompareNumericStrings(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  commentId: M:TypeHelp.TypeParser.CompareNumericStrings(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  id: CompareNumericStrings(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareNumericStrings(TypeInfo, TypeInfo)
  nameWithType: TypeParser.CompareNumericStrings(TypeInfo, TypeInfo)
  fullName: TypeHelp.TypeParser.CompareNumericStrings(TypeHelp.TypeInfo, TypeHelp.TypeInfo)
  type: Method
  source:
    id: CompareNumericStrings
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 288
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareNumericStrings(TypeInfo tioA, TypeInfo tioB)
    parameters:
    - id: tioA
      type: TypeHelp.TypeInfo
    - id: tioB
      type: TypeHelp.TypeInfo
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareNumericStrings(tioA As TypeInfo, tioB As TypeInfo) As Cmp
  overload: TypeHelp.TypeParser.CompareNumericStrings*
- uid: TypeHelp.TypeParser.CompareNumericTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  commentId: M:TypeHelp.TypeParser.CompareNumericTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  id: CompareNumericTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareNumericTypes(TypeInfo, TypeInfo)
  nameWithType: TypeParser.CompareNumericTypes(TypeInfo, TypeInfo)
  fullName: TypeHelp.TypeParser.CompareNumericTypes(TypeHelp.TypeInfo, TypeHelp.TypeInfo)
  type: Method
  source:
    id: CompareNumericTypes
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 312
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareNumericTypes(TypeInfo tioA, TypeInfo tioB)
    parameters:
    - id: tioA
      type: TypeHelp.TypeInfo
    - id: tioB
      type: TypeHelp.TypeInfo
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareNumericTypes(tioA As TypeInfo, tioB As TypeInfo) As Cmp
  overload: TypeHelp.TypeParser.CompareNumericTypes*
- uid: TypeHelp.TypeParser.CompareTuples(System.Object,System.Object)
  commentId: M:TypeHelp.TypeParser.CompareTuples(System.Object,System.Object)
  id: CompareTuples(System.Object,System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareTuples(object, object)
  nameWithType: TypeParser.CompareTuples(object, object)
  fullName: TypeHelp.TypeParser.CompareTuples(object, object)
  type: Method
  source:
    id: CompareTuples
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 325
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareTuples(object tupleA, object tupleB)
    parameters:
    - id: tupleA
      type: System.Object
    - id: tupleB
      type: System.Object
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareTuples(tupleA As Object, tupleB As Object) As Cmp
  overload: TypeHelp.TypeParser.CompareTuples*
  nameWithType.vb: TypeParser.CompareTuples(Object, Object)
  fullName.vb: TypeHelp.TypeParser.CompareTuples(Object, Object)
  name.vb: CompareTuples(Object, Object)
- uid: TypeHelp.TypeParser.CompareTypeCoexes(TypeHelp.TypeCoex,TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.CompareTypeCoexes(TypeHelp.TypeCoex,TypeHelp.TypeCoex)
  id: CompareTypeCoexes(TypeHelp.TypeCoex,TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareTypeCoexes(TypeCoex, TypeCoex)
  nameWithType: TypeParser.CompareTypeCoexes(TypeCoex, TypeCoex)
  fullName: TypeHelp.TypeParser.CompareTypeCoexes(TypeHelp.TypeCoex, TypeHelp.TypeCoex)
  type: Method
  source:
    id: CompareTypeCoexes
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 361
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareTypeCoexes(TypeCoex coexA, TypeCoex coexB)
    parameters:
    - id: coexA
      type: TypeHelp.TypeCoex
    - id: coexB
      type: TypeHelp.TypeCoex
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareTypeCoexes(coexA As TypeCoex, coexB As TypeCoex) As Cmp
  overload: TypeHelp.TypeParser.CompareTypeCoexes*
- uid: TypeHelp.TypeParser.CompareTypes(System.Object,System.Object)
  commentId: M:TypeHelp.TypeParser.CompareTypes(System.Object,System.Object)
  id: CompareTypes(System.Object,System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareTypes(object, object)
  nameWithType: TypeParser.CompareTypes(object, object)
  fullName: TypeHelp.TypeParser.CompareTypes(object, object)
  type: Method
  source:
    id: CompareTypes
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 371
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareTypes(object objA, object objB)
    parameters:
    - id: objA
      type: System.Object
    - id: objB
      type: System.Object
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareTypes(objA As Object, objB As Object) As Cmp
  overload: TypeHelp.TypeParser.CompareTypes*
  nameWithType.vb: TypeParser.CompareTypes(Object, Object)
  fullName.vb: TypeHelp.TypeParser.CompareTypes(Object, Object)
  name.vb: CompareTypes(Object, Object)
- uid: TypeHelp.TypeParser.CompareValues(System.Object,System.Object)
  commentId: M:TypeHelp.TypeParser.CompareValues(System.Object,System.Object)
  id: CompareValues(System.Object,System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: CompareValues(object, object)
  nameWithType: TypeParser.CompareValues(object, object)
  fullName: TypeHelp.TypeParser.CompareValues(object, object)
  type: Method
  source:
    id: CompareValues
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Compare.cs
    startLine: 383
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Cmp CompareValues(object objA, object objB)
    parameters:
    - id: objA
      type: System.Object
    - id: objB
      type: System.Object
    return:
      type: TypeHelp.Cmp
    content.vb: Public Shared Function CompareValues(objA As Object, objB As Object) As Cmp
  overload: TypeHelp.TypeParser.CompareValues*
  nameWithType.vb: TypeParser.CompareValues(Object, Object)
  fullName.vb: TypeHelp.TypeParser.CompareValues(Object, Object)
  name.vb: CompareValues(Object, Object)
- uid: TypeHelp.TypeParser.RunProps
  commentId: F:TypeHelp.TypeParser.RunProps
  id: RunProps
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: RunProps
  nameWithType: TypeParser.RunProps
  fullName: TypeHelp.TypeParser.RunProps
  type: Field
  source:
    id: RunProps
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 17
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static readonly RuntimeProps RunProps
    return:
      type: TypeHelp.RuntimeProps
    content.vb: Public Shared ReadOnly RunProps As RuntimeProps
- uid: TypeHelp.TypeParser.GetCodeFlag(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.GetCodeFlag(System.TypeCode)
  id: GetCodeFlag(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetCodeFlag(TypeCode)
  nameWithType: TypeParser.GetCodeFlag(TypeCode)
  fullName: TypeHelp.TypeParser.GetCodeFlag(System.TypeCode)
  type: Method
  source:
    id: GetCodeFlag
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 25
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TCF GetCodeFlag(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: TypeHelp.TCF
    content.vb: Public Shared Function GetCodeFlag(typeCode As TypeCode) As TCF
  overload: TypeHelp.TypeParser.GetCodeFlag*
- uid: TypeHelp.TypeParser.GetCoexFlag(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.GetCoexFlag(TypeHelp.TypeCoex)
  id: GetCoexFlag(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetCoexFlag(TypeCoex)
  nameWithType: TypeParser.GetCoexFlag(TypeCoex)
  fullName: TypeHelp.TypeParser.GetCoexFlag(TypeHelp.TypeCoex)
  type: Method
  source:
    id: GetCoexFlag
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 31
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TCF GetCoexFlag(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: TypeHelp.TCF
    content.vb: Public Shared Function GetCoexFlag(typeCoex As TypeCoex) As TCF
  overload: TypeHelp.TypeParser.GetCoexFlag*
- uid: TypeHelp.TypeParser.GetType(System.Object)
  commentId: M:TypeHelp.TypeParser.GetType(System.Object)
  id: GetType(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetType(object?)
  nameWithType: TypeParser.GetType(object?)
  fullName: TypeHelp.TypeParser.GetType(object?)
  type: Method
  source:
    id: GetType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 37
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Type? GetType(object? item)
    parameters:
    - id: item
      type: System.Object
    return:
      type: System.Type
    content.vb: Public Shared Function [GetType](item As Object) As Type
  overload: TypeHelp.TypeParser.GetType*
  nameWithType.vb: TypeParser.GetType(Object)
  fullName.vb: TypeHelp.TypeParser.GetType(Object)
  name.vb: GetType(Object)
- uid: TypeHelp.TypeParser.GetType(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.GetType(System.TypeCode)
  id: GetType(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetType(TypeCode)
  nameWithType: TypeParser.GetType(TypeCode)
  fullName: TypeHelp.TypeParser.GetType(System.TypeCode)
  type: Method
  source:
    id: GetType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 51
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Type? GetType(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Type
    content.vb: Public Shared Function [GetType](typeCode As TypeCode) As Type
  overload: TypeHelp.TypeParser.GetType*
- uid: TypeHelp.TypeParser.GetType(System.TypeCode,System.Type@)
  commentId: M:TypeHelp.TypeParser.GetType(System.TypeCode,System.Type@)
  id: GetType(System.TypeCode,System.Type@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetType(TypeCode, out Type?)
  nameWithType: TypeParser.GetType(TypeCode, out Type?)
  fullName: TypeHelp.TypeParser.GetType(System.TypeCode, out System.Type?)
  type: Method
  source:
    id: GetType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 59
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool GetType(TypeCode typeCode, out Type? type)
    parameters:
    - id: typeCode
      type: System.TypeCode
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Shared Function [GetType](typeCode As TypeCode, type As Type) As Boolean
  overload: TypeHelp.TypeParser.GetType*
  nameWithType.vb: TypeParser.GetType(TypeCode, Type)
  fullName.vb: TypeHelp.TypeParser.GetType(System.TypeCode, System.Type)
  name.vb: GetType(TypeCode, Type)
- uid: TypeHelp.TypeParser.GetType(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.GetType(TypeHelp.TypeCoex)
  id: GetType(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetType(TypeCoex)
  nameWithType: TypeParser.GetType(TypeCoex)
  fullName: TypeHelp.TypeParser.GetType(TypeHelp.TypeCoex)
  type: Method
  source:
    id: GetType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 64
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Type? GetType(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Type
    content.vb: Public Shared Function [GetType](typeCoex As TypeCoex) As Type
  overload: TypeHelp.TypeParser.GetType*
- uid: TypeHelp.TypeParser.GetType(TypeHelp.TypeCoex,System.Type@)
  commentId: M:TypeHelp.TypeParser.GetType(TypeHelp.TypeCoex,System.Type@)
  id: GetType(TypeHelp.TypeCoex,System.Type@)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetType(TypeCoex, out Type?)
  nameWithType: TypeParser.GetType(TypeCoex, out Type?)
  fullName: TypeHelp.TypeParser.GetType(TypeHelp.TypeCoex, out System.Type?)
  type: Method
  source:
    id: GetType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 72
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool GetType(TypeCoex typeCoex, out Type? type)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Shared Function [GetType](typeCoex As TypeCoex, type As Type) As Boolean
  overload: TypeHelp.TypeParser.GetType*
  nameWithType.vb: TypeParser.GetType(TypeCoex, Type)
  fullName.vb: TypeHelp.TypeParser.GetType(TypeHelp.TypeCoex, System.Type)
  name.vb: GetType(TypeCoex, Type)
- uid: TypeHelp.TypeParser.GetTypeCode(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.GetTypeCode(TypeHelp.TypeCoex)
  id: GetTypeCode(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeCode(TypeCoex)
  nameWithType: TypeParser.GetTypeCode(TypeCoex)
  fullName: TypeHelp.TypeParser.GetTypeCode(TypeHelp.TypeCoex)
  type: Method
  source:
    id: GetTypeCode
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 78
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeCode GetTypeCode(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.TypeCode
    content.vb: Public Shared Function GetTypeCode(typeCoex As TypeCoex) As TypeCode
  overload: TypeHelp.TypeParser.GetTypeCode*
- uid: TypeHelp.TypeParser.GetTypeCode(System.Object)
  commentId: M:TypeHelp.TypeParser.GetTypeCode(System.Object)
  id: GetTypeCode(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeCode(object?)
  nameWithType: TypeParser.GetTypeCode(object?)
  fullName: TypeHelp.TypeParser.GetTypeCode(object?)
  type: Method
  source:
    id: GetTypeCode
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 88
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeCode GetTypeCode(object? obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.TypeCode
    content.vb: Public Shared Function GetTypeCode(obj As Object) As TypeCode
  overload: TypeHelp.TypeParser.GetTypeCode*
  nameWithType.vb: TypeParser.GetTypeCode(Object)
  fullName.vb: TypeHelp.TypeParser.GetTypeCode(Object)
  name.vb: GetTypeCode(Object)
- uid: TypeHelp.TypeParser.GetTypeCode(TypeHelp.TCF)
  commentId: M:TypeHelp.TypeParser.GetTypeCode(TypeHelp.TCF)
  id: GetTypeCode(TypeHelp.TCF)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeCode(TCF)
  nameWithType: TypeParser.GetTypeCode(TCF)
  fullName: TypeHelp.TypeParser.GetTypeCode(TypeHelp.TCF)
  type: Method
  source:
    id: GetTypeCode
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 101
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeCode GetTypeCode(TCF flags)
    parameters:
    - id: flags
      type: TypeHelp.TCF
    return:
      type: System.TypeCode
    content.vb: Public Shared Function GetTypeCode(flags As TCF) As TypeCode
  overload: TypeHelp.TypeParser.GetTypeCode*
- uid: TypeHelp.TypeParser.GetTypeCoex(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.GetTypeCoex(System.TypeCode)
  id: GetTypeCoex(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeCoex(TypeCode)
  nameWithType: TypeParser.GetTypeCoex(TypeCode)
  fullName: TypeHelp.TypeParser.GetTypeCoex(System.TypeCode)
  type: Method
  source:
    id: GetTypeCoex
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 116
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeCoex GetTypeCoex(TypeCode value)
    parameters:
    - id: value
      type: System.TypeCode
    return:
      type: TypeHelp.TypeCoex
    content.vb: Public Shared Function GetTypeCoex(value As TypeCode) As TypeCoex
  overload: TypeHelp.TypeParser.GetTypeCoex*
- uid: TypeHelp.TypeParser.GetTypeCoex(System.Object)
  commentId: M:TypeHelp.TypeParser.GetTypeCoex(System.Object)
  id: GetTypeCoex(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeCoex(object?)
  nameWithType: TypeParser.GetTypeCoex(object?)
  fullName: TypeHelp.TypeParser.GetTypeCoex(object?)
  type: Method
  source:
    id: GetTypeCoex
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 128
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: Get the <code>TypeCoex</code> for an <code>object</code>.
  example: []
  syntax:
    content: public static TypeCoex GetTypeCoex(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The <code>object</code> to test, which may be null. <xref href="System.TypeCode.Empty" data-throw-if-not-resolved="false"></xref>.<p><xref href="TypeHelp.TypeCoex.Empty" data-throw-if-not-resolved="false"></xref></p>.
    return:
      type: TypeHelp.TypeCoex
      description: ''
    content.vb: Public Shared Function GetTypeCoex(value As Object) As TypeCoex
  overload: TypeHelp.TypeParser.GetTypeCoex*
  nameWithType.vb: TypeParser.GetTypeCoex(Object)
  fullName.vb: TypeHelp.TypeParser.GetTypeCoex(Object)
  name.vb: GetTypeCoex(Object)
- uid: TypeHelp.TypeParser.GetTypeCoex(TypeHelp.TCF)
  commentId: M:TypeHelp.TypeParser.GetTypeCoex(TypeHelp.TCF)
  id: GetTypeCoex(TypeHelp.TCF)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeCoex(TCF)
  nameWithType: TypeParser.GetTypeCoex(TCF)
  fullName: TypeHelp.TypeParser.GetTypeCoex(TypeHelp.TCF)
  type: Method
  source:
    id: GetTypeCoex
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 142
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeCoex GetTypeCoex(TCF value)
    parameters:
    - id: value
      type: TypeHelp.TCF
    return:
      type: TypeHelp.TypeCoex
    content.vb: Public Shared Function GetTypeCoex(value As TCF) As TypeCoex
  overload: TypeHelp.TypeParser.GetTypeCoex*
- uid: TypeHelp.TypeParser.GetTypeCoex(System.Type)
  commentId: M:TypeHelp.TypeParser.GetTypeCoex(System.Type)
  id: GetTypeCoex(System.Type)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: GetTypeCoex(Type?)
  nameWithType: TypeParser.GetTypeCoex(Type?)
  fullName: TypeHelp.TypeParser.GetTypeCoex(System.Type?)
  type: Method
  source:
    id: GetTypeCoex
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 160
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeCoex GetTypeCoex(Type? type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: TypeHelp.TypeCoex
    content.vb: Public Shared Function GetTypeCoex(type As Type) As TypeCoex
  overload: TypeHelp.TypeParser.GetTypeCoex*
  nameWithType.vb: TypeParser.GetTypeCoex(Type)
  fullName.vb: TypeHelp.TypeParser.GetTypeCoex(System.Type)
  name.vb: GetTypeCoex(Type)
- uid: TypeHelp.TypeParser.IsEnumType(System.Object)
  commentId: M:TypeHelp.TypeParser.IsEnumType(System.Object)
  id: IsEnumType(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsEnumType(object?)
  nameWithType: TypeParser.IsEnumType(object?)
  fullName: TypeHelp.TypeParser.IsEnumType(object?)
  type: Method
  source:
    id: IsEnumType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 180
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsEnumType(object? obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEnumType(obj As Object) As Boolean
  overload: TypeHelp.TypeParser.IsEnumType*
  nameWithType.vb: TypeParser.IsEnumType(Object)
  fullName.vb: TypeHelp.TypeParser.IsEnumType(Object)
  name.vb: IsEnumType(Object)
- uid: TypeHelp.TypeParser.IsInteger(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.IsInteger(System.TypeCode)
  id: IsInteger(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsInteger(TypeCode)
  nameWithType: TypeParser.IsInteger(TypeCode)
  fullName: TypeHelp.TypeParser.IsInteger(System.TypeCode)
  type: Method
  source:
    id: IsInteger
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 190
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsInteger(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsInteger(typeCode As TypeCode) As Boolean
  overload: TypeHelp.TypeParser.IsInteger*
- uid: TypeHelp.TypeParser.IsInteger(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.IsInteger(TypeHelp.TypeCoex)
  id: IsInteger(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsInteger(TypeCoex)
  nameWithType: TypeParser.IsInteger(TypeCoex)
  fullName: TypeHelp.TypeParser.IsInteger(TypeHelp.TypeCoex)
  type: Method
  source:
    id: IsInteger
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 195
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsInteger(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsInteger(typeCoex As TypeCoex) As Boolean
  overload: TypeHelp.TypeParser.IsInteger*
- uid: TypeHelp.TypeParser.IsIntegerOrExt(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.IsIntegerOrExt(TypeHelp.TypeCoex)
  id: IsIntegerOrExt(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsIntegerOrExt(TypeCoex)
  nameWithType: TypeParser.IsIntegerOrExt(TypeCoex)
  fullName: TypeHelp.TypeParser.IsIntegerOrExt(TypeHelp.TypeCoex)
  type: Method
  source:
    id: IsIntegerOrExt
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 202
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsIntegerOrExt(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsIntegerOrExt(typeCoex As TypeCoex) As Boolean
  overload: TypeHelp.TypeParser.IsIntegerOrExt*
- uid: TypeHelp.TypeParser.IsNatural(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.IsNatural(System.TypeCode)
  id: IsNatural(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNatural(TypeCode)
  nameWithType: TypeParser.IsNatural(TypeCode)
  fullName: TypeHelp.TypeParser.IsNatural(System.TypeCode)
  type: Method
  source:
    id: IsNatural
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 209
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsNatural(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNatural(typeCode As TypeCode) As Boolean
  overload: TypeHelp.TypeParser.IsNatural*
- uid: TypeHelp.TypeParser.IsNatural(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.IsNatural(TypeHelp.TypeCoex)
  id: IsNatural(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNatural(TypeCoex)
  nameWithType: TypeParser.IsNatural(TypeCoex)
  fullName: TypeHelp.TypeParser.IsNatural(TypeHelp.TypeCoex)
  type: Method
  source:
    id: IsNatural
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 214
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsNatural(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNatural(typeCoex As TypeCoex) As Boolean
  overload: TypeHelp.TypeParser.IsNatural*
- uid: TypeHelp.TypeParser.IsType(System.Object)
  commentId: M:TypeHelp.TypeParser.IsType(System.Object)
  id: IsType(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsType(object?)
  nameWithType: TypeParser.IsType(object?)
  fullName: TypeHelp.TypeParser.IsType(object?)
  type: Method
  source:
    id: IsType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 221
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsType(object? obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsType(obj As Object) As Boolean
  overload: TypeHelp.TypeParser.IsType*
  nameWithType.vb: TypeParser.IsType(Object)
  fullName.vb: TypeHelp.TypeParser.IsType(Object)
  name.vb: IsType(Object)
- uid: TypeHelp.TypeParser.IsNumeric(System.String)
  commentId: M:TypeHelp.TypeParser.IsNumeric(System.String)
  id: IsNumeric(System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNumeric(string)
  nameWithType: TypeParser.IsNumeric(string)
  fullName: TypeHelp.TypeParser.IsNumeric(string)
  type: Method
  source:
    id: IsNumeric
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 230
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsNumeric(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNumeric(text As String) As Boolean
  overload: TypeHelp.TypeParser.IsNumeric*
  nameWithType.vb: TypeParser.IsNumeric(String)
  fullName.vb: TypeHelp.TypeParser.IsNumeric(String)
  name.vb: IsNumeric(String)
- uid: TypeHelp.TypeParser.IsNumeric(System.Boolean,System.String)
  commentId: M:TypeHelp.TypeParser.IsNumeric(System.Boolean,System.String)
  id: IsNumeric(System.Boolean,System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNumeric(bool, string)
  nameWithType: TypeParser.IsNumeric(bool, string)
  fullName: TypeHelp.TypeParser.IsNumeric(bool, string)
  type: Method
  source:
    id: IsNumeric
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 236
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsNumeric(bool allowPrecision, string text)
    parameters:
    - id: allowPrecision
      type: System.Boolean
    - id: text
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNumeric(allowPrecision As Boolean, text As String) As Boolean
  overload: TypeHelp.TypeParser.IsNumeric*
  nameWithType.vb: TypeParser.IsNumeric(Boolean, String)
  fullName.vb: TypeHelp.TypeParser.IsNumeric(Boolean, String)
  name.vb: IsNumeric(Boolean, String)
- uid: TypeHelp.TypeParser.IsNumeric(System.TypeCode,System.String)
  commentId: M:TypeHelp.TypeParser.IsNumeric(System.TypeCode,System.String)
  id: IsNumeric(System.TypeCode,System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNumeric(TypeCode, string)
  nameWithType: TypeParser.IsNumeric(TypeCode, string)
  fullName: TypeHelp.TypeParser.IsNumeric(System.TypeCode, string)
  type: Method
  source:
    id: IsNumeric
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 250
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsNumeric(TypeCode typeCode, string text)
    parameters:
    - id: typeCode
      type: System.TypeCode
    - id: text
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNumeric(typeCode As TypeCode, text As String) As Boolean
  overload: TypeHelp.TypeParser.IsNumeric*
  nameWithType.vb: TypeParser.IsNumeric(TypeCode, String)
  fullName.vb: TypeHelp.TypeParser.IsNumeric(System.TypeCode, String)
  name.vb: IsNumeric(TypeCode, String)
- uid: TypeHelp.TypeParser.IsNumeric(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.IsNumeric(System.TypeCode)
  id: IsNumeric(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNumeric(TypeCode)
  nameWithType: TypeParser.IsNumeric(TypeCode)
  fullName: TypeHelp.TypeParser.IsNumeric(System.TypeCode)
  type: Method
  source:
    id: IsNumeric
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 259
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsNumeric(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNumeric(typeCode As TypeCode) As Boolean
  overload: TypeHelp.TypeParser.IsNumeric*
- uid: TypeHelp.TypeParser.IsNumeric(System.Boolean,System.TypeCode)
  commentId: M:TypeHelp.TypeParser.IsNumeric(System.Boolean,System.TypeCode)
  id: IsNumeric(System.Boolean,System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNumeric(bool, TypeCode)
  nameWithType: TypeParser.IsNumeric(bool, TypeCode)
  fullName: TypeHelp.TypeParser.IsNumeric(bool, System.TypeCode)
  type: Method
  source:
    id: IsNumeric
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 264
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsNumeric(bool allowPrecision, TypeCode typeCode)
    parameters:
    - id: allowPrecision
      type: System.Boolean
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNumeric(allowPrecision As Boolean, typeCode As TypeCode) As Boolean
  overload: TypeHelp.TypeParser.IsNumeric*
  nameWithType.vb: TypeParser.IsNumeric(Boolean, TypeCode)
  fullName.vb: TypeHelp.TypeParser.IsNumeric(Boolean, System.TypeCode)
  name.vb: IsNumeric(Boolean, TypeCode)
- uid: TypeHelp.TypeParser.IsNumeric(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.IsNumeric(TypeHelp.TypeCoex)
  id: IsNumeric(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNumeric(TypeCoex)
  nameWithType: TypeParser.IsNumeric(TypeCoex)
  fullName: TypeHelp.TypeParser.IsNumeric(TypeHelp.TypeCoex)
  type: Method
  source:
    id: IsNumeric
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 269
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsNumeric(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNumeric(typeCoex As TypeCoex) As Boolean
  overload: TypeHelp.TypeParser.IsNumeric*
- uid: TypeHelp.TypeParser.IsNumeric(System.Boolean,TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.IsNumeric(System.Boolean,TypeHelp.TypeCoex)
  id: IsNumeric(System.Boolean,TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsNumeric(bool, TypeCoex)
  nameWithType: TypeParser.IsNumeric(bool, TypeCoex)
  fullName: TypeHelp.TypeParser.IsNumeric(bool, TypeHelp.TypeCoex)
  type: Method
  source:
    id: IsNumeric
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 275
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsNumeric(bool allowPrecision, TypeCoex typeCoex)
    parameters:
    - id: allowPrecision
      type: System.Boolean
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNumeric(allowPrecision As Boolean, typeCoex As TypeCoex) As Boolean
  overload: TypeHelp.TypeParser.IsNumeric*
  nameWithType.vb: TypeParser.IsNumeric(Boolean, TypeCoex)
  fullName.vb: TypeHelp.TypeParser.IsNumeric(Boolean, TypeHelp.TypeCoex)
  name.vb: IsNumeric(Boolean, TypeCoex)
- uid: TypeHelp.TypeParser.IsPrecision(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.IsPrecision(TypeHelp.TypeCoex)
  id: IsPrecision(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsPrecision(TypeCoex)
  nameWithType: TypeParser.IsPrecision(TypeCoex)
  fullName: TypeHelp.TypeParser.IsPrecision(TypeHelp.TypeCoex)
  type: Method
  source:
    id: IsPrecision
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 288
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsPrecision(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPrecision(typeCoex As TypeCoex) As Boolean
  overload: TypeHelp.TypeParser.IsPrecision*
- uid: TypeHelp.TypeParser.IsValid(System.String)
  commentId: M:TypeHelp.TypeParser.IsValid(System.String)
  id: IsValid(System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(string)
  nameWithType: TypeParser.IsValid(string)
  fullName: TypeHelp.TypeParser.IsValid(string)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 295
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(text As String) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(String)
  fullName.vb: TypeHelp.TypeParser.IsValid(String)
  name.vb: IsValid(String)
- uid: TypeHelp.TypeParser.IsValid(System.Object)
  commentId: M:TypeHelp.TypeParser.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(object?)
  nameWithType: TypeParser.IsValid(object?)
  fullName: TypeHelp.TypeParser.IsValid(object?)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 300
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(object? value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(value As Object) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(Object)
  fullName.vb: TypeHelp.TypeParser.IsValid(Object)
  name.vb: IsValid(Object)
- uid: TypeHelp.TypeParser.IsValid(TypeHelp.RTProp)
  commentId: M:TypeHelp.TypeParser.IsValid(TypeHelp.RTProp)
  id: IsValid(TypeHelp.RTProp)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(RTProp)
  nameWithType: TypeParser.IsValid(RTProp)
  fullName: TypeHelp.TypeParser.IsValid(TypeHelp.RTProp)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 306
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(RTProp prop)
    parameters:
    - id: prop
      type: TypeHelp.RTProp
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(prop As RTProp) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
- uid: TypeHelp.TypeParser.IsValid(System.Type)
  commentId: M:TypeHelp.TypeParser.IsValid(System.Type)
  id: IsValid(System.Type)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(Type?)
  nameWithType: TypeParser.IsValid(Type?)
  fullName: TypeHelp.TypeParser.IsValid(System.Type?)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 311
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(Type? type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(type As Type) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(Type)
  fullName.vb: TypeHelp.TypeParser.IsValid(System.Type)
  name.vb: IsValid(Type)
- uid: TypeHelp.TypeParser.IsValid(System.Type,System.Int32)
  commentId: M:TypeHelp.TypeParser.IsValid(System.Type,System.Int32)
  id: IsValid(System.Type,System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(Type, int)
  nameWithType: TypeParser.IsValid(Type, int)
  fullName: TypeHelp.TypeParser.IsValid(System.Type, int)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 316
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(Type enumType, int value)
    parameters:
    - id: enumType
      type: System.Type
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(enumType As Type, value As Integer) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(Type, Integer)
  fullName.vb: TypeHelp.TypeParser.IsValid(System.Type, Integer)
  name.vb: IsValid(Type, Integer)
- uid: TypeHelp.TypeParser.IsValid(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.IsValid(System.TypeCode)
  id: IsValid(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(TypeCode)
  nameWithType: TypeParser.IsValid(TypeCode)
  fullName: TypeHelp.TypeParser.IsValid(System.TypeCode)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 322
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(typeCode As TypeCode) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
- uid: TypeHelp.TypeParser.IsValid(System.TypeCode,System.Object)
  commentId: M:TypeHelp.TypeParser.IsValid(System.TypeCode,System.Object)
  id: IsValid(System.TypeCode,System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(TypeCode, object?)
  nameWithType: TypeParser.IsValid(TypeCode, object?)
  fullName: TypeHelp.TypeParser.IsValid(System.TypeCode, object?)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 327
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(TypeCode typeCode, object? item)
    parameters:
    - id: typeCode
      type: System.TypeCode
    - id: item
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(typeCode As TypeCode, item As Object) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(TypeCode, Object)
  fullName.vb: TypeHelp.TypeParser.IsValid(System.TypeCode, Object)
  name.vb: IsValid(TypeCode, Object)
- uid: TypeHelp.TypeParser.IsValid(System.Boolean,System.TypeCode)
  commentId: M:TypeHelp.TypeParser.IsValid(System.Boolean,System.TypeCode)
  id: IsValid(System.Boolean,System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(bool, TypeCode)
  nameWithType: TypeParser.IsValid(bool, TypeCode)
  fullName: TypeHelp.TypeParser.IsValid(bool, System.TypeCode)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 332
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(bool isNullish, TypeCode typeCode)
    parameters:
    - id: isNullish
      type: System.Boolean
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(isNullish As Boolean, typeCode As TypeCode) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(Boolean, TypeCode)
  fullName.vb: TypeHelp.TypeParser.IsValid(Boolean, System.TypeCode)
  name.vb: IsValid(Boolean, TypeCode)
- uid: TypeHelp.TypeParser.IsValid(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.IsValid(TypeHelp.TypeCoex)
  id: IsValid(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(TypeCoex)
  nameWithType: TypeParser.IsValid(TypeCoex)
  fullName: TypeHelp.TypeParser.IsValid(TypeHelp.TypeCoex)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 338
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(typeCoex As TypeCoex) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
- uid: TypeHelp.TypeParser.IsValid(TypeHelp.TypeCoex,System.Object)
  commentId: M:TypeHelp.TypeParser.IsValid(TypeHelp.TypeCoex,System.Object)
  id: IsValid(TypeHelp.TypeCoex,System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(TypeCoex, object?)
  nameWithType: TypeParser.IsValid(TypeCoex, object?)
  fullName: TypeHelp.TypeParser.IsValid(TypeHelp.TypeCoex, object?)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 343
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(TypeCoex typeCoex, object? item)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    - id: item
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(typeCoex As TypeCoex, item As Object) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(TypeCoex, Object)
  fullName.vb: TypeHelp.TypeParser.IsValid(TypeHelp.TypeCoex, Object)
  name.vb: IsValid(TypeCoex, Object)
- uid: TypeHelp.TypeParser.IsValid(System.Boolean,TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.IsValid(System.Boolean,TypeHelp.TypeCoex)
  id: IsValid(System.Boolean,TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(bool, TypeCoex)
  nameWithType: TypeParser.IsValid(bool, TypeCoex)
  fullName: TypeHelp.TypeParser.IsValid(bool, TypeHelp.TypeCoex)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 348
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(bool isNullish, TypeCoex typeCoex)
    parameters:
    - id: isNullish
      type: System.Boolean
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(isNullish As Boolean, typeCoex As TypeCoex) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(Boolean, TypeCoex)
  fullName.vb: TypeHelp.TypeParser.IsValid(Boolean, TypeHelp.TypeCoex)
  name.vb: IsValid(Boolean, TypeCoex)
- uid: TypeHelp.TypeParser.IsValid(System.Boolean,System.String)
  commentId: M:TypeHelp.TypeParser.IsValid(System.Boolean,System.String)
  id: IsValid(System.Boolean,System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(bool, string)
  nameWithType: TypeParser.IsValid(bool, string)
  fullName: TypeHelp.TypeParser.IsValid(bool, string)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 355
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(bool allowWhitespace, string text)
    parameters:
    - id: allowWhitespace
      type: System.Boolean
    - id: text
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(allowWhitespace As Boolean, text As String) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(Boolean, String)
  fullName.vb: TypeHelp.TypeParser.IsValid(Boolean, String)
  name.vb: IsValid(Boolean, String)
- uid: TypeHelp.TypeParser.IsValid(System.Boolean,System.Boolean,System.String)
  commentId: M:TypeHelp.TypeParser.IsValid(System.Boolean,System.Boolean,System.String)
  id: IsValid(System.Boolean,System.Boolean,System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: IsValid(bool, bool, string)
  nameWithType: TypeParser.IsValid(bool, bool, string)
  fullName: TypeHelp.TypeParser.IsValid(bool, bool, string)
  type: Method
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 360
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static bool IsValid(bool allowEmpty, bool allowWhitespace, string text)
    parameters:
    - id: allowEmpty
      type: System.Boolean
    - id: allowWhitespace
      type: System.Boolean
    - id: text
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(allowEmpty As Boolean, allowWhitespace As Boolean, text As String) As Boolean
  overload: TypeHelp.TypeParser.IsValid*
  nameWithType.vb: TypeParser.IsValid(Boolean, Boolean, String)
  fullName.vb: TypeHelp.TypeParser.IsValid(Boolean, Boolean, String)
  name.vb: IsValid(Boolean, Boolean, String)
- uid: TypeHelp.TypeParser.PadMod(System.Int32,System.Int32)
  commentId: M:TypeHelp.TypeParser.PadMod(System.Int32,System.Int32)
  id: PadMod(System.Int32,System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: PadMod(int, int)
  nameWithType: TypeParser.PadMod(int, int)
  fullName: TypeHelp.TypeParser.PadMod(int, int)
  type: Method
  source:
    id: PadMod
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 376
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static long PadMod(int value, int modulus)
    parameters:
    - id: value
      type: System.Int32
    - id: modulus
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Public Shared Function PadMod(value As Integer, modulus As Integer) As Long
  overload: TypeHelp.TypeParser.PadMod*
  nameWithType.vb: TypeParser.PadMod(Integer, Integer)
  fullName.vb: TypeHelp.TypeParser.PadMod(Integer, Integer)
  name.vb: PadMod(Integer, Integer)
- uid: TypeHelp.TypeParser.PadMod(System.Int64,System.Int32)
  commentId: M:TypeHelp.TypeParser.PadMod(System.Int64,System.Int32)
  id: PadMod(System.Int64,System.Int32)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: PadMod(long, int)
  nameWithType: TypeParser.PadMod(long, int)
  fullName: TypeHelp.TypeParser.PadMod(long, int)
  type: Method
  source:
    id: PadMod
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 381
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static long PadMod(long value, int modulus)
    parameters:
    - id: value
      type: System.Int64
    - id: modulus
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Public Shared Function PadMod(value As Long, modulus As Integer) As Long
  overload: TypeHelp.TypeParser.PadMod*
  nameWithType.vb: TypeParser.PadMod(Long, Integer)
  fullName.vb: TypeHelp.TypeParser.PadMod(Long, Integer)
  name.vb: PadMod(Long, Integer)
- uid: TypeHelp.TypeParser.ParseToComplex(System.Boolean,System.String)
  commentId: M:TypeHelp.TypeParser.ParseToComplex(System.Boolean,System.String)
  id: ParseToComplex(System.Boolean,System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: ParseToComplex(bool, string)
  nameWithType: TypeParser.ParseToComplex(bool, string)
  fullName: TypeHelp.TypeParser.ParseToComplex(bool, string)
  type: Method
  source:
    id: ParseToComplex
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 407
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Complex? ParseToComplex(bool allowEngJsuffix, string text)
    parameters:
    - id: allowEngJsuffix
      type: System.Boolean
    - id: text
      type: System.String
    return:
      type: System.Nullable{System.Numerics.Complex}
    content.vb: Public Shared Function ParseToComplex(allowEngJsuffix As Boolean, text As String) As Complex?
  overload: TypeHelp.TypeParser.ParseToComplex*
  nameWithType.vb: TypeParser.ParseToComplex(Boolean, String)
  fullName.vb: TypeHelp.TypeParser.ParseToComplex(Boolean, String)
  name.vb: ParseToComplex(Boolean, String)
- uid: TypeHelp.TypeParser.ParseToType(System.String)
  commentId: M:TypeHelp.TypeParser.ParseToType(System.String)
  id: ParseToType(System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: ParseToType(string)
  nameWithType: TypeParser.ParseToType(string)
  fullName: TypeHelp.TypeParser.ParseToType(string)
  type: Method
  source:
    id: ParseToType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 458
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Type? ParseToType(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.Type
    content.vb: Public Shared Function ParseToType(text As String) As Type
  overload: TypeHelp.TypeParser.ParseToType*
  nameWithType.vb: TypeParser.ParseToType(String)
  fullName.vb: TypeHelp.TypeParser.ParseToType(String)
  name.vb: ParseToType(String)
- uid: TypeHelp.TypeParser.ParseToTypeCode(System.String)
  commentId: M:TypeHelp.TypeParser.ParseToTypeCode(System.String)
  id: ParseToTypeCode(System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: ParseToTypeCode(string)
  nameWithType: TypeParser.ParseToTypeCode(string)
  fullName: TypeHelp.TypeParser.ParseToTypeCode(string)
  type: Method
  source:
    id: ParseToTypeCode
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 465
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static TypeCode ParseToTypeCode(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.TypeCode
    content.vb: Public Shared Function ParseToTypeCode(text As String) As TypeCode
  overload: TypeHelp.TypeParser.ParseToTypeCode*
  nameWithType.vb: TypeParser.ParseToTypeCode(String)
  fullName.vb: TypeHelp.TypeParser.ParseToTypeCode(String)
  name.vb: ParseToTypeCode(String)
- uid: TypeHelp.TypeParser.ParseToValue(System.String)
  commentId: M:TypeHelp.TypeParser.ParseToValue(System.String)
  id: ParseToValue(System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: ParseToValue(string)
  nameWithType: TypeParser.ParseToValue(string)
  fullName: TypeHelp.TypeParser.ParseToValue(string)
  type: Method
  source:
    id: ParseToValue
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 472
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static object? ParseToValue(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function ParseToValue(text As String) As Object
  overload: TypeHelp.TypeParser.ParseToValue*
  nameWithType.vb: TypeParser.ParseToValue(String)
  fullName.vb: TypeHelp.TypeParser.ParseToValue(String)
  name.vb: ParseToValue(String)
- uid: TypeHelp.TypeParser.ParseToValue(TypeHelp.TCF,System.String)
  commentId: M:TypeHelp.TypeParser.ParseToValue(TypeHelp.TCF,System.String)
  id: ParseToValue(TypeHelp.TCF,System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: ParseToValue(TCF, string)
  nameWithType: TypeParser.ParseToValue(TCF, string)
  fullName: TypeHelp.TypeParser.ParseToValue(TypeHelp.TCF, string)
  type: Method
  source:
    id: ParseToValue
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 477
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static object? ParseToValue(TCF filter, string text)
    parameters:
    - id: filter
      type: TypeHelp.TCF
    - id: text
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function ParseToValue(filter As TCF, text As String) As Object
  overload: TypeHelp.TypeParser.ParseToValue*
  nameWithType.vb: TypeParser.ParseToValue(TCF, String)
  fullName.vb: TypeHelp.TypeParser.ParseToValue(TypeHelp.TCF, String)
  name.vb: ParseToValue(TCF, String)
- uid: TypeHelp.TypeParser.ParseUsing(System.Type,System.String)
  commentId: M:TypeHelp.TypeParser.ParseUsing(System.Type,System.String)
  id: ParseUsing(System.Type,System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: ParseUsing(Type, string)
  nameWithType: TypeParser.ParseUsing(Type, string)
  fullName: TypeHelp.TypeParser.ParseUsing(System.Type, string)
  type: Method
  source:
    id: ParseUsing
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 555
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static object? ParseUsing(Type type, string text)
    parameters:
    - id: type
      type: System.Type
    - id: text
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function ParseUsing(type As Type, text As String) As Object
  overload: TypeHelp.TypeParser.ParseUsing*
  nameWithType.vb: TypeParser.ParseUsing(Type, String)
  fullName.vb: TypeHelp.TypeParser.ParseUsing(System.Type, String)
  name.vb: ParseUsing(Type, String)
- uid: TypeHelp.TypeParser.ParseUsing(System.TypeCode,System.String)
  commentId: M:TypeHelp.TypeParser.ParseUsing(System.TypeCode,System.String)
  id: ParseUsing(System.TypeCode,System.String)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: ParseUsing(TypeCode, string)
  nameWithType: TypeParser.ParseUsing(TypeCode, string)
  fullName: TypeHelp.TypeParser.ParseUsing(System.TypeCode, string)
  type: Method
  source:
    id: ParseUsing
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 569
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static object? ParseUsing(TypeCode typeCode, string text)
    parameters:
    - id: typeCode
      type: System.TypeCode
    - id: text
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function ParseUsing(typeCode As TypeCode, text As String) As Object
  overload: TypeHelp.TypeParser.ParseUsing*
  nameWithType.vb: TypeParser.ParseUsing(TypeCode, String)
  fullName.vb: TypeHelp.TypeParser.ParseUsing(System.TypeCode, String)
  name.vb: ParseUsing(TypeCode, String)
- uid: TypeHelp.TypeParser.PointerBaseSize(System.Nullable{System.Boolean})
  commentId: M:TypeHelp.TypeParser.PointerBaseSize(System.Nullable{System.Boolean})
  id: PointerBaseSize(System.Nullable{System.Boolean})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: PointerBaseSize(bool?)
  nameWithType: TypeParser.PointerBaseSize(bool?)
  fullName: TypeHelp.TypeParser.PointerBaseSize(bool?)
  type: Method
  source:
    id: PointerBaseSize
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 612
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int PointerBaseSize(bool? signed)
    parameters:
    - id: signed
      type: System.Nullable{System.Boolean}
    return:
      type: System.Int32
    content.vb: Public Shared Function PointerBaseSize(signed As Boolean?) As Integer
  overload: TypeHelp.TypeParser.PointerBaseSize*
  nameWithType.vb: TypeParser.PointerBaseSize(Boolean?)
  fullName.vb: TypeHelp.TypeParser.PointerBaseSize(Boolean?)
  name.vb: PointerBaseSize(Boolean?)
- uid: TypeHelp.TypeParser.PointerBaseType(System.Nullable{System.Boolean})
  commentId: M:TypeHelp.TypeParser.PointerBaseType(System.Nullable{System.Boolean})
  id: PointerBaseType(System.Nullable{System.Boolean})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: PointerBaseType(bool?)
  nameWithType: TypeParser.PointerBaseType(bool?)
  fullName: TypeHelp.TypeParser.PointerBaseType(bool?)
  type: Method
  source:
    id: PointerBaseType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 619
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Type PointerBaseType(bool? signed)
    parameters:
    - id: signed
      type: System.Nullable{System.Boolean}
    return:
      type: System.Type
    content.vb: Public Shared Function PointerBaseType(signed As Boolean?) As Type
  overload: TypeHelp.TypeParser.PointerBaseType*
  nameWithType.vb: TypeParser.PointerBaseType(Boolean?)
  fullName.vb: TypeHelp.TypeParser.PointerBaseType(Boolean?)
  name.vb: PointerBaseType(Boolean?)
- uid: TypeHelp.TypeParser.PointerBaseType(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:TypeHelp.TypeParser.PointerBaseType(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: PointerBaseType(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: PointerBaseType(bool?, bool?)
  nameWithType: TypeParser.PointerBaseType(bool?, bool?)
  fullName: TypeHelp.TypeParser.PointerBaseType(bool?, bool?)
  type: Method
  source:
    id: PointerBaseType
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 624
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static Type PointerBaseType(bool? signed, bool? system)
    parameters:
    - id: signed
      type: System.Nullable{System.Boolean}
    - id: system
      type: System.Nullable{System.Boolean}
    return:
      type: System.Type
    content.vb: Public Shared Function PointerBaseType(signed As Boolean?, system As Boolean?) As Type
  overload: TypeHelp.TypeParser.PointerBaseType*
  nameWithType.vb: TypeParser.PointerBaseType(Boolean?, Boolean?)
  fullName.vb: TypeHelp.TypeParser.PointerBaseType(Boolean?, Boolean?)
  name.vb: PointerBaseType(Boolean?, Boolean?)
- uid: TypeHelp.TypeParser.SizeOf(System.Object)
  commentId: M:TypeHelp.TypeParser.SizeOf(System.Object)
  id: SizeOf(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOf(object?)
  nameWithType: TypeParser.SizeOf(object?)
  fullName: TypeHelp.TypeParser.SizeOf(object?)
  type: Method
  source:
    id: SizeOf
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 640
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOf(object? value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOf(value As Object) As Integer
  overload: TypeHelp.TypeParser.SizeOf*
  nameWithType.vb: TypeParser.SizeOf(Object)
  fullName.vb: TypeHelp.TypeParser.SizeOf(Object)
  name.vb: SizeOf(Object)
- uid: TypeHelp.TypeParser.SizeOf(System.Object,System.Nullable{System.Int32})
  commentId: M:TypeHelp.TypeParser.SizeOf(System.Object,System.Nullable{System.Int32})
  id: SizeOf(System.Object,System.Nullable{System.Int32})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOf(object?, int?)
  nameWithType: TypeParser.SizeOf(object?, int?)
  fullName: TypeHelp.TypeParser.SizeOf(object?, int?)
  type: Method
  source:
    id: SizeOf
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 645
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOf(object? item, int? failValue)
    parameters:
    - id: item
      type: System.Object
    - id: failValue
      type: System.Nullable{System.Int32}
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOf(item As Object, failValue As Integer?) As Integer
  overload: TypeHelp.TypeParser.SizeOf*
  nameWithType.vb: TypeParser.SizeOf(Object, Integer?)
  fullName.vb: TypeHelp.TypeParser.SizeOf(Object, Integer?)
  name.vb: SizeOf(Object, Integer?)
- uid: TypeHelp.TypeParser.SizeOf(System.Type)
  commentId: M:TypeHelp.TypeParser.SizeOf(System.Type)
  id: SizeOf(System.Type)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOf(Type)
  nameWithType: TypeParser.SizeOf(Type)
  fullName: TypeHelp.TypeParser.SizeOf(System.Type)
  type: Method
  source:
    id: SizeOf
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 725
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOf(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOf(type As Type) As Integer
  overload: TypeHelp.TypeParser.SizeOf*
- uid: TypeHelp.TypeParser.SizeOf(System.Type,System.Nullable{System.Int32})
  commentId: M:TypeHelp.TypeParser.SizeOf(System.Type,System.Nullable{System.Int32})
  id: SizeOf(System.Type,System.Nullable{System.Int32})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOf(Type, int?)
  nameWithType: TypeParser.SizeOf(Type, int?)
  fullName: TypeHelp.TypeParser.SizeOf(System.Type, int?)
  type: Method
  source:
    id: SizeOf
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 730
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOf(Type type, int? failValue)
    parameters:
    - id: type
      type: System.Type
    - id: failValue
      type: System.Nullable{System.Int32}
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOf(type As Type, failValue As Integer?) As Integer
  overload: TypeHelp.TypeParser.SizeOf*
  nameWithType.vb: TypeParser.SizeOf(Type, Integer?)
  fullName.vb: TypeHelp.TypeParser.SizeOf(System.Type, Integer?)
  name.vb: SizeOf(Type, Integer?)
- uid: TypeHelp.TypeParser.SizeOf(System.Boolean,System.Type,System.Nullable{System.Int32})
  commentId: M:TypeHelp.TypeParser.SizeOf(System.Boolean,System.Type,System.Nullable{System.Int32})
  id: SizeOf(System.Boolean,System.Type,System.Nullable{System.Int32})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOf(bool, Type, int?)
  nameWithType: TypeParser.SizeOf(bool, Type, int?)
  fullName: TypeHelp.TypeParser.SizeOf(bool, System.Type, int?)
  type: Method
  source:
    id: SizeOf
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 743
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOf(bool checkEnum, Type type, int? failValue)
    parameters:
    - id: checkEnum
      type: System.Boolean
    - id: type
      type: System.Type
    - id: failValue
      type: System.Nullable{System.Int32}
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOf(checkEnum As Boolean, type As Type, failValue As Integer?) As Integer
  overload: TypeHelp.TypeParser.SizeOf*
  nameWithType.vb: TypeParser.SizeOf(Boolean, Type, Integer?)
  fullName.vb: TypeHelp.TypeParser.SizeOf(Boolean, System.Type, Integer?)
  name.vb: SizeOf(Boolean, Type, Integer?)
- uid: TypeHelp.TypeParser.SizeOf(System.TypeCode)
  commentId: M:TypeHelp.TypeParser.SizeOf(System.TypeCode)
  id: SizeOf(System.TypeCode)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOf(TypeCode)
  nameWithType: TypeParser.SizeOf(TypeCode)
  fullName: TypeHelp.TypeParser.SizeOf(System.TypeCode)
  type: Method
  source:
    id: SizeOf
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 759
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOf(TypeCode typeCode)
    parameters:
    - id: typeCode
      type: System.TypeCode
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOf(typeCode As TypeCode) As Integer
  overload: TypeHelp.TypeParser.SizeOf*
- uid: TypeHelp.TypeParser.SizeOf(System.TypeCode,System.Nullable{System.Int32})
  commentId: M:TypeHelp.TypeParser.SizeOf(System.TypeCode,System.Nullable{System.Int32})
  id: SizeOf(System.TypeCode,System.Nullable{System.Int32})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOf(TypeCode, int?)
  nameWithType: TypeParser.SizeOf(TypeCode, int?)
  fullName: TypeHelp.TypeParser.SizeOf(System.TypeCode, int?)
  type: Method
  source:
    id: SizeOf
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 764
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOf(TypeCode typeCode, int? failValue)
    parameters:
    - id: typeCode
      type: System.TypeCode
    - id: failValue
      type: System.Nullable{System.Int32}
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOf(typeCode As TypeCode, failValue As Integer?) As Integer
  overload: TypeHelp.TypeParser.SizeOf*
  nameWithType.vb: TypeParser.SizeOf(TypeCode, Integer?)
  fullName.vb: TypeHelp.TypeParser.SizeOf(System.TypeCode, Integer?)
  name.vb: SizeOf(TypeCode, Integer?)
- uid: TypeHelp.TypeParser.SizeOf(TypeHelp.TypeCoex)
  commentId: M:TypeHelp.TypeParser.SizeOf(TypeHelp.TypeCoex)
  id: SizeOf(TypeHelp.TypeCoex)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOf(TypeCoex)
  nameWithType: TypeParser.SizeOf(TypeCoex)
  fullName: TypeHelp.TypeParser.SizeOf(TypeHelp.TypeCoex)
  type: Method
  source:
    id: SizeOf
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 769
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOf(TypeCoex typeCoex)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOf(typeCoex As TypeCoex) As Integer
  overload: TypeHelp.TypeParser.SizeOf*
- uid: TypeHelp.TypeParser.SizeOf(TypeHelp.TypeCoex,System.Nullable{System.Int32})
  commentId: M:TypeHelp.TypeParser.SizeOf(TypeHelp.TypeCoex,System.Nullable{System.Int32})
  id: SizeOf(TypeHelp.TypeCoex,System.Nullable{System.Int32})
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOf(TypeCoex, int?)
  nameWithType: TypeParser.SizeOf(TypeCoex, int?)
  fullName: TypeHelp.TypeParser.SizeOf(TypeHelp.TypeCoex, int?)
  type: Method
  source:
    id: SizeOf
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 774
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOf(TypeCoex typeCoex, int? failValue)
    parameters:
    - id: typeCoex
      type: TypeHelp.TypeCoex
    - id: failValue
      type: System.Nullable{System.Int32}
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOf(typeCoex As TypeCoex, failValue As Integer?) As Integer
  overload: TypeHelp.TypeParser.SizeOf*
  nameWithType.vb: TypeParser.SizeOf(TypeCoex, Integer?)
  fullName.vb: TypeHelp.TypeParser.SizeOf(TypeHelp.TypeCoex, Integer?)
  name.vb: SizeOf(TypeCoex, Integer?)
- uid: TypeHelp.TypeParser.SizeOfTuple(System.Object)
  commentId: M:TypeHelp.TypeParser.SizeOfTuple(System.Object)
  id: SizeOfTuple(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SizeOfTuple(object?)
  nameWithType: TypeParser.SizeOfTuple(object?)
  fullName: TypeHelp.TypeParser.SizeOfTuple(object?)
  type: Method
  source:
    id: SizeOfTuple
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 785
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int SizeOfTuple(object? tupleObj)
    parameters:
    - id: tupleObj
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Shared Function SizeOfTuple(tupleObj As Object) As Integer
  overload: TypeHelp.TypeParser.SizeOfTuple*
  nameWithType.vb: TypeParser.SizeOfTuple(Object)
  fullName.vb: TypeHelp.TypeParser.SizeOfTuple(Object)
  name.vb: SizeOfTuple(Object)
- uid: TypeHelp.TypeParser.TupleElementCount(System.Object)
  commentId: M:TypeHelp.TypeParser.TupleElementCount(System.Object)
  id: TupleElementCount(System.Object)
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: TupleElementCount(object)
  nameWithType: TypeParser.TupleElementCount(object)
  fullName: TypeHelp.TypeParser.TupleElementCount(object)
  type: Method
  source:
    id: TupleElementCount
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\static\TypeParser_Public_Static.cs
    startLine: 816
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static int TupleElementCount(object tupleObj)
    parameters:
    - id: tupleObj
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Shared Function TupleElementCount(tupleObj As Object) As Integer
  overload: TypeHelp.TypeParser.TupleElementCount*
  nameWithType.vb: TypeParser.TupleElementCount(Object)
  fullName.vb: TypeHelp.TypeParser.TupleElementCount(Object)
  name.vb: TupleElementCount(Object)
- uid: TypeHelp.TypeParser.#ctor(System.String)
  commentId: M:TypeHelp.TypeParser.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: TypeParser(string?)
  nameWithType: TypeParser.TypeParser(string?)
  fullName: TypeHelp.TypeParser.TypeParser(string?)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 374
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public TypeParser(string? value)
    parameters:
    - id: value
      type: System.String
    content.vb: Public Sub New(value As String)
  overload: TypeHelp.TypeParser.#ctor*
  nameWithType.vb: TypeParser.New(String)
  fullName.vb: TypeHelp.TypeParser.New(String)
  name.vb: New(String)
- uid: TypeHelp.TypeParser.text
  commentId: F:TypeHelp.TypeParser.text
  id: text
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: text
  nameWithType: TypeParser.text
  fullName: TypeHelp.TypeParser.text
  type: Field
  source:
    id: text
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 383
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected string text
    return:
      type: System.String
    content.vb: Protected text As String
- uid: TypeHelp.TypeParser.Base64RePat
  commentId: F:TypeHelp.TypeParser.Base64RePat
  id: Base64RePat
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Base64RePat
  nameWithType: TypeParser.Base64RePat
  fullName: TypeHelp.TypeParser.Base64RePat
  type: Field
  source:
    id: Base64RePat
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 393
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string Base64RePat = "(?:[A-Za-z0-9+\\/]{4}\\\\n?)*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)"
    return:
      type: System.String
    content.vb: Protected Const Base64RePat As String = "(?:[A-Za-z0-9+\/]{4}\\n?)*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)"
- uid: TypeHelp.TypeParser.Base64RePatExact
  commentId: F:TypeHelp.TypeParser.Base64RePatExact
  id: Base64RePatExact
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Base64RePatExact
  nameWithType: TypeParser.Base64RePatExact
  fullName: TypeHelp.TypeParser.Base64RePatExact
  type: Field
  source:
    id: Base64RePatExact
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 397
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string Base64RePatExact = "(?:^(?:[A-Za-z0-9+\\/]{4}\\\\n?)*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)$)"
    return:
      type: System.String
    content.vb: Protected Const Base64RePatExact As String = "(?:^(?:[A-Za-z0-9+\/]{4}\\n?)*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)$)"
- uid: TypeHelp.TypeParser.DateIsoRePat
  commentId: F:TypeHelp.TypeParser.DateIsoRePat
  id: DateIsoRePat
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: DateIsoRePat
  nameWithType: TypeParser.DateIsoRePat
  fullName: TypeHelp.TypeParser.DateIsoRePat
  type: Field
  source:
    id: DateIsoRePat
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 399
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string DateIsoRePat = "(\\d{4})-(\\d{2})-(\\d{2})T((\\d{2}):(\\d{2}):(\\d{2}))\\.(\\d{3})Z"
    return:
      type: System.String
    content.vb: Protected Const DateIsoRePat As String = "(\d{4})-(\d{2})-(\d{2})T((\d{2}):(\d{2}):(\d{2}))\.(\d{3})Z"
- uid: TypeHelp.TypeParser.DateUtcRePat
  commentId: F:TypeHelp.TypeParser.DateUtcRePat
  id: DateUtcRePat
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: DateUtcRePat
  nameWithType: TypeParser.DateUtcRePat
  fullName: TypeHelp.TypeParser.DateUtcRePat
  type: Field
  source:
    id: DateUtcRePat
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 402
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string DateUtcRePat = "(\\w{3}), (\\d{2}) (\\w{3}) (\\d{4}) ((\\d{2}):(\\d{2}):(\\d{2})) GMT"
    return:
      type: System.String
    content.vb: Protected Const DateUtcRePat As String = "(\w{3}), (\d{2}) (\w{3}) (\d{4}) ((\d{2}):(\d{2}):(\d{2})) GMT"
- uid: TypeHelp.TypeParser.REOpts
  commentId: F:TypeHelp.TypeParser.REOpts
  id: REOpts
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: REOpts
  nameWithType: TypeParser.REOpts
  fullName: TypeHelp.TypeParser.REOpts
  type: Field
  source:
    id: REOpts
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 406
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const RegexOptions REOpts = IgnoreCase | Compiled
    return:
      type: System.Text.RegularExpressions.RegexOptions
    content.vb: Protected Const REOpts As RegexOptions = IgnoreCase Or Compiled
- uid: TypeHelp.TypeParser.REOptsBase64
  commentId: F:TypeHelp.TypeParser.REOptsBase64
  id: REOptsBase64
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: REOptsBase64
  nameWithType: TypeParser.REOptsBase64
  fullName: TypeHelp.TypeParser.REOptsBase64
  type: Field
  source:
    id: REOptsBase64
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 408
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const RegexOptions REOptsBase64 = IgnoreCase | Multiline | Compiled
    return:
      type: System.Text.RegularExpressions.RegexOptions
    content.vb: Protected Const REOptsBase64 As RegexOptions = IgnoreCase Or Multiline Or Compiled
- uid: TypeHelp.TypeParser.REComplexSuffix
  commentId: F:TypeHelp.TypeParser.REComplexSuffix
  id: REComplexSuffix
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: REComplexSuffix
  nameWithType: TypeParser.REComplexSuffix
  fullName: TypeHelp.TypeParser.REComplexSuffix
  type: Field
  source:
    id: REComplexSuffix
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 411
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string REComplexSuffix = "[iI]"
    return:
      type: System.String
    content.vb: Protected Const REComplexSuffix As String = "[iI]"
- uid: TypeHelp.TypeParser.REEngCompSuffix
  commentId: F:TypeHelp.TypeParser.REEngCompSuffix
  id: REEngCompSuffix
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: REEngCompSuffix
  nameWithType: TypeParser.REEngCompSuffix
  fullName: TypeHelp.TypeParser.REEngCompSuffix
  type: Field
  source:
    id: REEngCompSuffix
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 412
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string REEngCompSuffix = "[iIjJ]"
    return:
      type: System.String
    content.vb: Protected Const REEngCompSuffix As String = "[iIjJ]"
- uid: TypeHelp.TypeParser.REETX
  commentId: F:TypeHelp.TypeParser.REETX
  id: REETX
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: REETX
  nameWithType: TypeParser.REETX
  fullName: TypeHelp.TypeParser.REETX
  type: Field
  source:
    id: REETX
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 413
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string REETX = "$"
    return:
      type: System.String
    content.vb: Protected Const REETX As String = "$"
- uid: TypeHelp.TypeParser.RESTX
  commentId: F:TypeHelp.TypeParser.RESTX
  id: RESTX
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: RESTX
  nameWithType: TypeParser.RESTX
  fullName: TypeHelp.TypeParser.RESTX
  type: Field
  source:
    id: RESTX
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 414
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string RESTX = "^"
    return:
      type: System.String
    content.vb: Protected Const RESTX As String = "^"
- uid: TypeHelp.TypeParser.REFloatPattern
  commentId: F:TypeHelp.TypeParser.REFloatPattern
  id: REFloatPattern
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: REFloatPattern
  nameWithType: TypeParser.REFloatPattern
  fullName: TypeHelp.TypeParser.REFloatPattern
  type: Field
  source:
    id: REFloatPattern
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 417
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string REFloatPattern = "(([-+])?([0-9]*)(\\.?[0-9]+)?(([Ee])?([-+])?([0-9]*)))+"
    return:
      type: System.String
    content.vb: Protected Const REFloatPattern As String = "(([-+])?([0-9]*)(\.?[0-9]+)?(([Ee])?([-+])?([0-9]*)))+"
- uid: TypeHelp.TypeParser.REComplexPattern
  commentId: F:TypeHelp.TypeParser.REComplexPattern
  id: REComplexPattern
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: REComplexPattern
  nameWithType: TypeParser.REComplexPattern
  fullName: TypeHelp.TypeParser.REComplexPattern
  type: Field
  source:
    id: REComplexPattern
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 419
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const string REComplexPattern = "^(?<f>(([-+])?([0-9]*)(\\.?[0-9]+)?(([Ee])?([-+])?([0-9]*)))+)\\k<f>\\s*(,?[+-])\\s*\\k<f>"
    return:
      type: System.String
    content.vb: Protected Const REComplexPattern As String = "^(?<f>(([-+])?([0-9]*)(\.?[0-9]+)?(([Ee])?([-+])?([0-9]*)))+)\k<f>\s*(,?[+-])\s*\k<f>"
- uid: TypeHelp.TypeParser.REFloats
  commentId: F:TypeHelp.TypeParser.REFloats
  id: REFloats
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: REFloats
  nameWithType: TypeParser.REFloats
  fullName: TypeHelp.TypeParser.REFloats
  type: Field
  source:
    id: REFloats
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 422
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly Regex[] REFloats
    return:
      type: System.Text.RegularExpressions.Regex[]
    content.vb: Protected Shared ReadOnly REFloats As Regex()
- uid: TypeHelp.TypeParser.PointerSize
  commentId: F:TypeHelp.TypeParser.PointerSize
  id: PointerSize
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: PointerSize
  nameWithType: TypeParser.PointerSize
  fullName: TypeHelp.TypeParser.PointerSize
  type: Field
  source:
    id: PointerSize
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 436
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly int PointerSize
    return:
      type: System.Int32
    content.vb: Protected Shared ReadOnly PointerSize As Integer
- uid: TypeHelp.TypeParser.KnownTypeList
  commentId: F:TypeHelp.TypeParser.KnownTypeList
  id: KnownTypeList
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: KnownTypeList
  nameWithType: TypeParser.KnownTypeList
  fullName: TypeHelp.TypeParser.KnownTypeList
  type: Field
  source:
    id: KnownTypeList
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 438
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly List<Type> KnownTypeList
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Protected Shared ReadOnly KnownTypeList As List(Of Type)
- uid: TypeHelp.TypeParser.TypeCoexNumericPriority
  commentId: F:TypeHelp.TypeParser.TypeCoexNumericPriority
  id: TypeCoexNumericPriority
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: TypeCoexNumericPriority
  nameWithType: TypeParser.TypeCoexNumericPriority
  fullName: TypeHelp.TypeParser.TypeCoexNumericPriority
  type: Field
  source:
    id: TypeCoexNumericPriority
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 458
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly List<TypeCoex> TypeCoexNumericPriority
    return:
      type: System.Collections.Generic.List{TypeHelp.TypeCoex}
    content.vb: Protected Shared ReadOnly TypeCoexNumericPriority As List(Of TypeCoex)
- uid: TypeHelp.TypeParser.TypeCoexSizePriority
  commentId: F:TypeHelp.TypeParser.TypeCoexSizePriority
  id: TypeCoexSizePriority
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: TypeCoexSizePriority
  nameWithType: TypeParser.TypeCoexSizePriority
  fullName: TypeHelp.TypeParser.TypeCoexSizePriority
  type: Field
  source:
    id: TypeCoexSizePriority
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 473
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public static readonly List<TypeCoex> TypeCoexSizePriority
    return:
      type: System.Collections.Generic.List{TypeHelp.TypeCoex}
    content.vb: Public Shared ReadOnly TypeCoexSizePriority As List(Of TypeCoex)
- uid: TypeHelp.TypeParser.TypeCoexUsagePriority
  commentId: F:TypeHelp.TypeParser.TypeCoexUsagePriority
  id: TypeCoexUsagePriority
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: TypeCoexUsagePriority
  nameWithType: TypeParser.TypeCoexUsagePriority
  fullName: TypeHelp.TypeParser.TypeCoexUsagePriority
  type: Field
  source:
    id: TypeCoexUsagePriority
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 510
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly List<TypeCoex> TypeCoexUsagePriority
    return:
      type: System.Collections.Generic.List{TypeHelp.TypeCoex}
    content.vb: Protected Shared ReadOnly TypeCoexUsagePriority As List(Of TypeCoex)
- uid: TypeHelp.TypeParser.TypeCoexSizes
  commentId: F:TypeHelp.TypeParser.TypeCoexSizes
  id: TypeCoexSizes
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: TypeCoexSizes
  nameWithType: TypeParser.TypeCoexSizes
  fullName: TypeHelp.TypeParser.TypeCoexSizes
  type: Field
  source:
    id: TypeCoexSizes
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 525
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly int[] TypeCoexSizes
    return:
      type: System.Int32[]
    content.vb: Protected Shared ReadOnly TypeCoexSizes As Integer()
- uid: TypeHelp.TypeParser.SplitOptContentfulOnly
  commentId: F:TypeHelp.TypeParser.SplitOptContentfulOnly
  id: SplitOptContentfulOnly
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: SplitOptContentfulOnly
  nameWithType: TypeParser.SplitOptContentfulOnly
  fullName: TypeHelp.TypeParser.SplitOptContentfulOnly
  type: Field
  source:
    id: SplitOptContentfulOnly
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 560
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected const StringSplitOptions SplitOptContentfulOnly = RemoveEmptyEntries
    return:
      type: System.StringSplitOptions
    content.vb: Protected Const SplitOptContentfulOnly As StringSplitOptions = RemoveEmptyEntries
- uid: TypeHelp.TypeParser.Splits
  commentId: F:TypeHelp.TypeParser.Splits
  id: Splits
  parent: TypeHelp.TypeParser
  langs:
  - csharp
  - vb
  name: Splits
  nameWithType: TypeParser.Splits
  fullName: TypeHelp.TypeParser.Splits
  type: Field
  source:
    id: Splits
    path: C:\Users\wwess\source\repos\TypeHelp\src\TypeParser\TypeParser.cs
    startLine: 563
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly char[][] Splits
    return:
      type: System.Char[][]
    content.vb: Protected Shared ReadOnly Splits As Char()()
references:
- uid: TypeHelp
  commentId: N:TypeHelp
  href: TypeHelp.html
  name: TypeHelp
  nameWithType: TypeHelp
  fullName: TypeHelp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TypeHelp.TypeParser.Set*
  commentId: Overload:TypeHelp.TypeParser.Set
  href: TypeHelp.TypeParser.Set(System.Boolean,System.Byte,System.Byte).html
  name: Set
  nameWithType: TypeParser.Set
  fullName: TypeHelp.TypeParser.Set
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: TypeHelp.TypeCoex
  commentId: T:TypeHelp.TypeCoex
  parent: TypeHelp
  href: TypeHelp.TypeCoex.html
  name: TypeCoex
  nameWithType: TypeCoex
  fullName: TypeHelp.TypeCoex
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.UIntPtr
  commentId: T:System.UIntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uintptr
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.biginteger
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: TypeHelp.TCF
  commentId: T:TypeHelp.TCF
  parent: TypeHelp
  href: TypeHelp.TCF.html
  name: TCF
  nameWithType: TCF
  fullName: TypeHelp.TCF
- uid: TypeHelp.TypeParser.GetTypeInfo*
  commentId: Overload:TypeHelp.TypeParser.GetTypeInfo
  href: TypeHelp.TypeParser.GetTypeInfo(System.Object).html
  name: GetTypeInfo
  nameWithType: TypeParser.GetTypeInfo
  fullName: TypeHelp.TypeParser.GetTypeInfo
- uid: TypeHelp.TypeInfo
  commentId: T:TypeHelp.TypeInfo
  parent: TypeHelp
  href: TypeHelp.TypeInfo.html
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: TypeHelp.TypeInfo
- uid: System.TypeCode
  commentId: T:System.TypeCode
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.typecode
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: TypeHelp.TypeParser.GetWellKnownTypes*
  commentId: Overload:TypeHelp.TypeParser.GetWellKnownTypes
  href: TypeHelp.TypeParser.GetWellKnownTypes(TypeHelp.TCF).html
  name: GetWellKnownTypes
  nameWithType: TypeParser.GetWellKnownTypes
  fullName: TypeHelp.TypeParser.GetWellKnownTypes
- uid: TypeHelp.TypeParser.IsBigInteger*
  commentId: Overload:TypeHelp.TypeParser.IsBigInteger
  href: TypeHelp.TypeParser.IsBigInteger.html
  name: IsBigInteger
  nameWithType: TypeParser.IsBigInteger
  fullName: TypeHelp.TypeParser.IsBigInteger
- uid: TypeHelp.TypeParser.IsComplex*
  commentId: Overload:TypeHelp.TypeParser.IsComplex
  href: TypeHelp.TypeParser.IsComplex.html
  name: IsComplex
  nameWithType: TypeParser.IsComplex
  fullName: TypeHelp.TypeParser.IsComplex
- uid: TypeHelp.TypeParser.IsDateTime*
  commentId: Overload:TypeHelp.TypeParser.IsDateTime
  href: TypeHelp.TypeParser.IsDateTime.html
  name: IsDateTime
  nameWithType: TypeParser.IsDateTime
  fullName: TypeHelp.TypeParser.IsDateTime
- uid: TypeHelp.TypeParser.IsDecimal*
  commentId: Overload:TypeHelp.TypeParser.IsDecimal
  href: TypeHelp.TypeParser.IsDecimal.html
  name: IsDecimal
  nameWithType: TypeParser.IsDecimal
  fullName: TypeHelp.TypeParser.IsDecimal
- uid: TypeHelp.TypeParser.IsDouble*
  commentId: Overload:TypeHelp.TypeParser.IsDouble
  href: TypeHelp.TypeParser.IsDouble.html
  name: IsDouble
  nameWithType: TypeParser.IsDouble
  fullName: TypeHelp.TypeParser.IsDouble
- uid: TypeHelp.TypeParser.IsEmpty*
  commentId: Overload:TypeHelp.TypeParser.IsEmpty
  href: TypeHelp.TypeParser.IsEmpty.html
  name: IsEmpty
  nameWithType: TypeParser.IsEmpty
  fullName: TypeHelp.TypeParser.IsEmpty
- uid: TypeHelp.TypeParser.IsEmptyOrWhiteSpace*
  commentId: Overload:TypeHelp.TypeParser.IsEmptyOrWhiteSpace
  href: TypeHelp.TypeParser.IsEmptyOrWhiteSpace.html
  name: IsEmptyOrWhiteSpace
  nameWithType: TypeParser.IsEmptyOrWhiteSpace
  fullName: TypeHelp.TypeParser.IsEmptyOrWhiteSpace
- uid: TypeHelp.TypeParser.IsInt*
  commentId: Overload:TypeHelp.TypeParser.IsInt
  href: TypeHelp.TypeParser.IsInt.html
  name: IsInt
  nameWithType: TypeParser.IsInt
  fullName: TypeHelp.TypeParser.IsInt
- uid: TypeHelp.TypeParser.IsLong*
  commentId: Overload:TypeHelp.TypeParser.IsLong
  href: TypeHelp.TypeParser.IsLong.html
  name: IsLong
  nameWithType: TypeParser.IsLong
  fullName: TypeHelp.TypeParser.IsLong
- uid: TypeHelp.TypeParser.IsNumber*
  commentId: Overload:TypeHelp.TypeParser.IsNumber
  href: TypeHelp.TypeParser.IsNumber.html
  name: IsNumber
  nameWithType: TypeParser.IsNumber
  fullName: TypeHelp.TypeParser.IsNumber
- uid: TypeHelp.TypeParser.IsWhiteSpace*
  commentId: Overload:TypeHelp.TypeParser.IsWhiteSpace
  href: TypeHelp.TypeParser.IsWhiteSpace.html
  name: IsWhiteSpace
  nameWithType: TypeParser.IsWhiteSpace
  fullName: TypeHelp.TypeParser.IsWhiteSpace
- uid: TypeHelp.TypeParser.Length*
  commentId: Overload:TypeHelp.TypeParser.Length
  href: TypeHelp.TypeParser.Length.html
  name: Length
  nameWithType: TypeParser.Length
  fullName: TypeHelp.TypeParser.Length
- uid: TypeHelp.TypeParser.Text*
  commentId: Overload:TypeHelp.TypeParser.Text
  href: TypeHelp.TypeParser.Text.html
  name: Text
  nameWithType: TypeParser.Text
  fullName: TypeHelp.TypeParser.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TypeHelp.TypeParser.CanParse*
  commentId: Overload:TypeHelp.TypeParser.CanParse
  href: TypeHelp.TypeParser.CanParse(System.Type).html
  name: CanParse
  nameWithType: TypeParser.CanParse
  fullName: TypeHelp.TypeParser.CanParse
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TypeHelp.TypeParser.GetBigInteger*
  commentId: Overload:TypeHelp.TypeParser.GetBigInteger
  href: TypeHelp.TypeParser.GetBigInteger(System.Numerics.BigInteger).html
  name: GetBigInteger
  nameWithType: TypeParser.GetBigInteger
  fullName: TypeHelp.TypeParser.GetBigInteger
- uid: System.Nullable{System.Numerics.BigInteger}
  commentId: T:System.Nullable{System.Numerics.BigInteger}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.numerics.biginteger
  name: BigInteger?
  nameWithType: BigInteger?
  fullName: System.Numerics.BigInteger?
  spec.csharp:
  - uid: System.Numerics.BigInteger
    name: BigInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.biginteger
  - name: '?'
  spec.vb:
  - uid: System.Numerics.BigInteger
    name: BigInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.biginteger
  - name: '?'
- uid: TypeHelp.TypeParser.GetBool*
  commentId: Overload:TypeHelp.TypeParser.GetBool
  href: TypeHelp.TypeParser.GetBool(System.Boolean).html
  name: GetBool
  nameWithType: TypeParser.GetBool
  fullName: TypeHelp.TypeParser.GetBool
- uid: TypeHelp.TypeParser.GetByte*
  commentId: Overload:TypeHelp.TypeParser.GetByte
  href: TypeHelp.TypeParser.GetByte(System.Byte).html
  name: GetByte
  nameWithType: TypeParser.GetByte
  fullName: TypeHelp.TypeParser.GetByte
- uid: System.Nullable{System.Byte}
  commentId: T:System.Nullable{System.Byte}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte?
  nameWithType: byte?
  fullName: byte?
  nameWithType.vb: Byte?
  fullName.vb: Byte?
  name.vb: Byte?
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '?'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '?'
- uid: TypeHelp.TypeParser.GetComplex*
  commentId: Overload:TypeHelp.TypeParser.GetComplex
  href: TypeHelp.TypeParser.GetComplex(System.Numerics.Complex).html
  name: GetComplex
  nameWithType: TypeParser.GetComplex
  fullName: TypeHelp.TypeParser.GetComplex
- uid: System.Numerics.Complex
  commentId: T:System.Numerics.Complex
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex
  nameWithType: Complex
  fullName: System.Numerics.Complex
- uid: System.Nullable{System.Numerics.Complex}
  commentId: T:System.Nullable{System.Numerics.Complex}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex?
  nameWithType: Complex?
  fullName: System.Numerics.Complex?
  spec.csharp:
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: '?'
  spec.vb:
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: '?'
- uid: TypeHelp.TypeParser.GetDateTime*
  commentId: Overload:TypeHelp.TypeParser.GetDateTime
  href: TypeHelp.TypeParser.GetDateTime(System.DateTime).html
  name: GetDateTime
  nameWithType: TypeParser.GetDateTime
  fullName: TypeHelp.TypeParser.GetDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: TypeHelp.TypeParser.GetDecimal*
  commentId: Overload:TypeHelp.TypeParser.GetDecimal
  href: TypeHelp.TypeParser.GetDecimal(System.Decimal).html
  name: GetDecimal
  nameWithType: TypeParser.GetDecimal
  fullName: TypeHelp.TypeParser.GetDecimal
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal?
  nameWithType: decimal?
  fullName: decimal?
  nameWithType.vb: Decimal?
  fullName.vb: Decimal?
  name.vb: Decimal?
  spec.csharp:
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
- uid: TypeHelp.TypeParser.GetDouble*
  commentId: Overload:TypeHelp.TypeParser.GetDouble
  href: TypeHelp.TypeParser.GetDouble(System.Double).html
  name: GetDouble
  nameWithType: TypeParser.GetDouble
  fullName: TypeHelp.TypeParser.GetDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double?
  nameWithType: double?
  fullName: double?
  nameWithType.vb: Double?
  fullName.vb: Double?
  name.vb: Double?
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
- uid: TypeHelp.TypeParser.GetFloat*
  commentId: Overload:TypeHelp.TypeParser.GetFloat
  href: TypeHelp.TypeParser.GetFloat(System.Single).html
  name: GetFloat
  nameWithType: TypeParser.GetFloat
  fullName: TypeHelp.TypeParser.GetFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: TypeHelp.TypeParser.GetInt*
  commentId: Overload:TypeHelp.TypeParser.GetInt
  href: TypeHelp.TypeParser.GetInt(System.Int32).html
  name: GetInt
  nameWithType: TypeParser.GetInt
  fullName: TypeHelp.TypeParser.GetInt
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: TypeHelp.TypeParser.GetLong*
  commentId: Overload:TypeHelp.TypeParser.GetLong
  href: TypeHelp.TypeParser.GetLong(System.Int64).html
  name: GetLong
  nameWithType: TypeParser.GetLong
  fullName: TypeHelp.TypeParser.GetLong
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: TypeHelp.TypeParser.GetSByte*
  commentId: Overload:TypeHelp.TypeParser.GetSByte
  href: TypeHelp.TypeParser.GetSByte(System.SByte).html
  name: GetSByte
  nameWithType: TypeParser.GetSByte
  fullName: TypeHelp.TypeParser.GetSByte
- uid: System.Nullable{System.SByte}
  commentId: T:System.Nullable{System.SByte}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte?
  nameWithType: sbyte?
  fullName: sbyte?
  nameWithType.vb: SByte?
  fullName.vb: SByte?
  name.vb: SByte?
  spec.csharp:
  - uid: System.SByte
    name: sbyte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '?'
  spec.vb:
  - uid: System.SByte
    name: SByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '?'
- uid: TypeHelp.TypeParser.GetShort*
  commentId: Overload:TypeHelp.TypeParser.GetShort
  href: TypeHelp.TypeParser.GetShort(System.Int16).html
  name: GetShort
  nameWithType: TypeParser.GetShort
  fullName: TypeHelp.TypeParser.GetShort
- uid: System.Nullable{System.Int16}
  commentId: T:System.Nullable{System.Int16}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short?
  nameWithType: short?
  fullName: short?
  nameWithType.vb: Short?
  fullName.vb: Short?
  name.vb: Short?
  spec.csharp:
  - uid: System.Int16
    name: short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: '?'
  spec.vb:
  - uid: System.Int16
    name: Short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: '?'
- uid: TypeHelp.TypeParser.GetUInt*
  commentId: Overload:TypeHelp.TypeParser.GetUInt
  href: TypeHelp.TypeParser.GetUInt(System.UInt32).html
  name: GetUInt
  nameWithType: TypeParser.GetUInt
  fullName: TypeHelp.TypeParser.GetUInt
- uid: System.Nullable{System.UInt32}
  commentId: T:System.Nullable{System.UInt32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint?
  nameWithType: uint?
  fullName: uint?
  nameWithType.vb: UInteger?
  fullName.vb: UInteger?
  name.vb: UInteger?
  spec.csharp:
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '?'
  spec.vb:
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '?'
- uid: TypeHelp.TypeParser.GetULong*
  commentId: Overload:TypeHelp.TypeParser.GetULong
  href: TypeHelp.TypeParser.GetULong(System.UInt64).html
  name: GetULong
  nameWithType: TypeParser.GetULong
  fullName: TypeHelp.TypeParser.GetULong
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong?
  nameWithType: ulong?
  fullName: ulong?
  nameWithType.vb: ULong?
  fullName.vb: ULong?
  name.vb: ULong?
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
- uid: TypeHelp.TypeParser.GetUShort*
  commentId: Overload:TypeHelp.TypeParser.GetUShort
  href: TypeHelp.TypeParser.GetUShort(System.Int16).html
  name: GetUShort
  nameWithType: TypeParser.GetUShort
  fullName: TypeHelp.TypeParser.GetUShort
- uid: System.Nullable{System.UInt16}
  commentId: T:System.Nullable{System.UInt16}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort?
  nameWithType: ushort?
  fullName: ushort?
  nameWithType.vb: UShort?
  fullName.vb: UShort?
  name.vb: UShort?
  spec.csharp:
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: '?'
  spec.vb:
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: '?'
- uid: TypeHelp.TypeParser.Parse*
  commentId: Overload:TypeHelp.TypeParser.Parse
  href: TypeHelp.TypeParser.Parse(System.Type).html
  name: Parse
  nameWithType: TypeParser.Parse
  fullName: TypeHelp.TypeParser.Parse
- uid: TypeHelp.TypeParser.Clamp*
  commentId: Overload:TypeHelp.TypeParser.Clamp
  href: TypeHelp.TypeParser.Clamp(System.Char,System.Char).html
  name: Clamp
  nameWithType: TypeParser.Clamp
  fullName: TypeHelp.TypeParser.Clamp
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TypeHelp.TypeParser.Comp*
  commentId: Overload:TypeHelp.TypeParser.Comp
  href: TypeHelp.TypeParser.Comp(TypeHelp.Cmp).html
  name: Comp
  nameWithType: TypeParser.Comp
  fullName: TypeHelp.TypeParser.Comp
- uid: TypeHelp.Cmp
  commentId: T:TypeHelp.Cmp
  parent: TypeHelp
  href: TypeHelp.Cmp.html
  name: Cmp
  nameWithType: Cmp
  fullName: TypeHelp.Cmp
- uid: TypeHelp.TypeParser.CompFromInt*
  commentId: Overload:TypeHelp.TypeParser.CompFromInt
  href: TypeHelp.TypeParser.CompFromInt(System.Int32).html
  name: CompFromInt
  nameWithType: TypeParser.CompFromInt
  fullName: TypeHelp.TypeParser.CompFromInt
- uid: TypeHelp.TypeParser.Compare*
  commentId: Overload:TypeHelp.TypeParser.Compare
  href: TypeHelp.TypeParser.Compare(System.Int32,System.Int32).html
  name: Compare
  nameWithType: TypeParser.Compare
  fullName: TypeHelp.TypeParser.Compare
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: TypeHelp.TypeParser.CompareEnums*
  commentId: Overload:TypeHelp.TypeParser.CompareEnums
  href: TypeHelp.TypeParser.CompareEnums(TypeHelp.TypeInfo,TypeHelp.TypeInfo).html
  name: CompareEnums
  nameWithType: TypeParser.CompareEnums
  fullName: TypeHelp.TypeParser.CompareEnums
- uid: TypeHelp.TypeParser.CompareEnumTypes*
  commentId: Overload:TypeHelp.TypeParser.CompareEnumTypes
  href: TypeHelp.TypeParser.CompareEnumTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo).html
  name: CompareEnumTypes
  nameWithType: TypeParser.CompareEnumTypes
  fullName: TypeHelp.TypeParser.CompareEnumTypes
- uid: TypeHelp.TypeParser.CompareEnumValues*
  commentId: Overload:TypeHelp.TypeParser.CompareEnumValues
  href: TypeHelp.TypeParser.CompareEnumValues(TypeHelp.TypeInfo,TypeHelp.TypeInfo).html
  name: CompareEnumValues
  nameWithType: TypeParser.CompareEnumValues
  fullName: TypeHelp.TypeParser.CompareEnumValues
- uid: TypeHelp.TypeParser.CompareGuids*
  commentId: Overload:TypeHelp.TypeParser.CompareGuids
  href: TypeHelp.TypeParser.CompareGuids(System.Boolean,System.Guid,System.Guid).html
  name: CompareGuids
  nameWithType: TypeParser.CompareGuids
  fullName: TypeHelp.TypeParser.CompareGuids
- uid: TypeHelp.TypeParser.CompareNulls*
  commentId: Overload:TypeHelp.TypeParser.CompareNulls
  href: TypeHelp.TypeParser.CompareNulls(TypeHelp.TypeInfo,TypeHelp.TypeInfo).html
  name: CompareNulls
  nameWithType: TypeParser.CompareNulls
  fullName: TypeHelp.TypeParser.CompareNulls
- uid: TypeHelp.TypeParser.CompareNumerics*
  commentId: Overload:TypeHelp.TypeParser.CompareNumerics
  href: TypeHelp.TypeParser.CompareNumerics(TypeHelp.TypeInfo,TypeHelp.TypeInfo).html
  name: CompareNumerics
  nameWithType: TypeParser.CompareNumerics
  fullName: TypeHelp.TypeParser.CompareNumerics
- uid: TypeHelp.TypeParser.CompareNumericStrings*
  commentId: Overload:TypeHelp.TypeParser.CompareNumericStrings
  href: TypeHelp.TypeParser.CompareNumericStrings(TypeHelp.TypeInfo,TypeHelp.TypeInfo).html
  name: CompareNumericStrings
  nameWithType: TypeParser.CompareNumericStrings
  fullName: TypeHelp.TypeParser.CompareNumericStrings
- uid: TypeHelp.TypeParser.CompareNumericTypes*
  commentId: Overload:TypeHelp.TypeParser.CompareNumericTypes
  href: TypeHelp.TypeParser.CompareNumericTypes(TypeHelp.TypeInfo,TypeHelp.TypeInfo).html
  name: CompareNumericTypes
  nameWithType: TypeParser.CompareNumericTypes
  fullName: TypeHelp.TypeParser.CompareNumericTypes
- uid: TypeHelp.TypeParser.CompareTuples*
  commentId: Overload:TypeHelp.TypeParser.CompareTuples
  href: TypeHelp.TypeParser.CompareTuples(System.Object,System.Object).html
  name: CompareTuples
  nameWithType: TypeParser.CompareTuples
  fullName: TypeHelp.TypeParser.CompareTuples
- uid: TypeHelp.TypeParser.CompareTypeCoexes*
  commentId: Overload:TypeHelp.TypeParser.CompareTypeCoexes
  href: TypeHelp.TypeParser.CompareTypeCoexes(TypeHelp.TypeCoex,TypeHelp.TypeCoex).html
  name: CompareTypeCoexes
  nameWithType: TypeParser.CompareTypeCoexes
  fullName: TypeHelp.TypeParser.CompareTypeCoexes
- uid: TypeHelp.TypeParser.CompareTypes*
  commentId: Overload:TypeHelp.TypeParser.CompareTypes
  href: TypeHelp.TypeParser.CompareTypes(System.Object,System.Object).html
  name: CompareTypes
  nameWithType: TypeParser.CompareTypes
  fullName: TypeHelp.TypeParser.CompareTypes
- uid: TypeHelp.TypeParser.CompareValues*
  commentId: Overload:TypeHelp.TypeParser.CompareValues
  href: TypeHelp.TypeParser.CompareValues(System.Object,System.Object).html
  name: CompareValues
  nameWithType: TypeParser.CompareValues
  fullName: TypeHelp.TypeParser.CompareValues
- uid: TypeHelp.RuntimeProps
  commentId: T:TypeHelp.RuntimeProps
  parent: TypeHelp
  href: TypeHelp.RuntimeProps.html
  name: RuntimeProps
  nameWithType: RuntimeProps
  fullName: TypeHelp.RuntimeProps
- uid: TypeHelp.TypeParser.GetCodeFlag*
  commentId: Overload:TypeHelp.TypeParser.GetCodeFlag
  href: TypeHelp.TypeParser.GetCodeFlag(System.TypeCode).html
  name: GetCodeFlag
  nameWithType: TypeParser.GetCodeFlag
  fullName: TypeHelp.TypeParser.GetCodeFlag
- uid: TypeHelp.TypeParser.GetCoexFlag*
  commentId: Overload:TypeHelp.TypeParser.GetCoexFlag
  href: TypeHelp.TypeParser.GetCoexFlag(TypeHelp.TypeCoex).html
  name: GetCoexFlag
  nameWithType: TypeParser.GetCoexFlag
  fullName: TypeHelp.TypeParser.GetCoexFlag
- uid: TypeHelp.TypeParser.GetType*
  commentId: Overload:TypeHelp.TypeParser.GetType
  href: TypeHelp.TypeParser.GetType(System.Object).html
  name: GetType
  nameWithType: TypeParser.GetType
  fullName: TypeHelp.TypeParser.GetType
- uid: TypeHelp.TypeParser.GetTypeCode*
  commentId: Overload:TypeHelp.TypeParser.GetTypeCode
  href: TypeHelp.TypeParser.GetTypeCode(TypeHelp.TypeCoex).html
  name: GetTypeCode
  nameWithType: TypeParser.GetTypeCode
  fullName: TypeHelp.TypeParser.GetTypeCode
- uid: TypeHelp.TypeParser.GetTypeCoex*
  commentId: Overload:TypeHelp.TypeParser.GetTypeCoex
  href: TypeHelp.TypeParser.GetTypeCoex(System.TypeCode).html
  name: GetTypeCoex
  nameWithType: TypeParser.GetTypeCoex
  fullName: TypeHelp.TypeParser.GetTypeCoex
- uid: TypeHelp.TypeCoex.Empty
  commentId: F:TypeHelp.TypeCoex.Empty
  href: TypeHelp.TypeCoex.html#TypeHelp.TypeCoex.Empty
  name: Empty
  nameWithType: TypeCoex.Empty
  fullName: TypeHelp.TypeCoex.Empty
- uid: System.TypeCode.Empty
  commentId: F:System.TypeCode.Empty
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.typecode#system-typecode-empty
  name: Empty
  nameWithType: TypeCode.Empty
  fullName: System.TypeCode.Empty
- uid: TypeHelp.TypeParser.IsEnumType*
  commentId: Overload:TypeHelp.TypeParser.IsEnumType
  href: TypeHelp.TypeParser.IsEnumType(System.Object).html
  name: IsEnumType
  nameWithType: TypeParser.IsEnumType
  fullName: TypeHelp.TypeParser.IsEnumType
- uid: TypeHelp.TypeParser.IsInteger*
  commentId: Overload:TypeHelp.TypeParser.IsInteger
  href: TypeHelp.TypeParser.IsInteger(System.TypeCode).html
  name: IsInteger
  nameWithType: TypeParser.IsInteger
  fullName: TypeHelp.TypeParser.IsInteger
- uid: TypeHelp.TypeParser.IsIntegerOrExt*
  commentId: Overload:TypeHelp.TypeParser.IsIntegerOrExt
  href: TypeHelp.TypeParser.IsIntegerOrExt(TypeHelp.TypeCoex).html
  name: IsIntegerOrExt
  nameWithType: TypeParser.IsIntegerOrExt
  fullName: TypeHelp.TypeParser.IsIntegerOrExt
- uid: TypeHelp.TypeParser.IsNatural*
  commentId: Overload:TypeHelp.TypeParser.IsNatural
  href: TypeHelp.TypeParser.IsNatural(System.TypeCode).html
  name: IsNatural
  nameWithType: TypeParser.IsNatural
  fullName: TypeHelp.TypeParser.IsNatural
- uid: TypeHelp.TypeParser.IsType*
  commentId: Overload:TypeHelp.TypeParser.IsType
  href: TypeHelp.TypeParser.IsType(System.Object).html
  name: IsType
  nameWithType: TypeParser.IsType
  fullName: TypeHelp.TypeParser.IsType
- uid: TypeHelp.TypeParser.IsNumeric*
  commentId: Overload:TypeHelp.TypeParser.IsNumeric
  href: TypeHelp.TypeParser.IsNumeric(System.String).html
  name: IsNumeric
  nameWithType: TypeParser.IsNumeric
  fullName: TypeHelp.TypeParser.IsNumeric
- uid: TypeHelp.TypeParser.IsPrecision*
  commentId: Overload:TypeHelp.TypeParser.IsPrecision
  href: TypeHelp.TypeParser.IsPrecision(TypeHelp.TypeCoex).html
  name: IsPrecision
  nameWithType: TypeParser.IsPrecision
  fullName: TypeHelp.TypeParser.IsPrecision
- uid: TypeHelp.TypeParser.IsValid*
  commentId: Overload:TypeHelp.TypeParser.IsValid
  href: TypeHelp.TypeParser.IsValid(System.String).html
  name: IsValid
  nameWithType: TypeParser.IsValid
  fullName: TypeHelp.TypeParser.IsValid
- uid: TypeHelp.RTProp
  commentId: T:TypeHelp.RTProp
  parent: TypeHelp
  href: TypeHelp.RTProp.html
  name: RTProp
  nameWithType: RTProp
  fullName: TypeHelp.RTProp
- uid: TypeHelp.TypeParser.PadMod*
  commentId: Overload:TypeHelp.TypeParser.PadMod
  href: TypeHelp.TypeParser.PadMod(System.Int32,System.Int32).html
  name: PadMod
  nameWithType: TypeParser.PadMod
  fullName: TypeHelp.TypeParser.PadMod
- uid: TypeHelp.TypeParser.ParseToComplex*
  commentId: Overload:TypeHelp.TypeParser.ParseToComplex
  href: TypeHelp.TypeParser.ParseToComplex(System.Boolean,System.String).html
  name: ParseToComplex
  nameWithType: TypeParser.ParseToComplex
  fullName: TypeHelp.TypeParser.ParseToComplex
- uid: TypeHelp.TypeParser.ParseToType*
  commentId: Overload:TypeHelp.TypeParser.ParseToType
  href: TypeHelp.TypeParser.ParseToType(System.String).html
  name: ParseToType
  nameWithType: TypeParser.ParseToType
  fullName: TypeHelp.TypeParser.ParseToType
- uid: TypeHelp.TypeParser.ParseToTypeCode*
  commentId: Overload:TypeHelp.TypeParser.ParseToTypeCode
  href: TypeHelp.TypeParser.ParseToTypeCode(System.String).html
  name: ParseToTypeCode
  nameWithType: TypeParser.ParseToTypeCode
  fullName: TypeHelp.TypeParser.ParseToTypeCode
- uid: TypeHelp.TypeParser.ParseToValue*
  commentId: Overload:TypeHelp.TypeParser.ParseToValue
  href: TypeHelp.TypeParser.ParseToValue(System.String).html
  name: ParseToValue
  nameWithType: TypeParser.ParseToValue
  fullName: TypeHelp.TypeParser.ParseToValue
- uid: TypeHelp.TypeParser.ParseUsing*
  commentId: Overload:TypeHelp.TypeParser.ParseUsing
  href: TypeHelp.TypeParser.ParseUsing(System.Type,System.String).html
  name: ParseUsing
  nameWithType: TypeParser.ParseUsing
  fullName: TypeHelp.TypeParser.ParseUsing
- uid: TypeHelp.TypeParser.PointerBaseSize*
  commentId: Overload:TypeHelp.TypeParser.PointerBaseSize
  href: TypeHelp.TypeParser.PointerBaseSize(System.Nullable{System.Boolean}).html
  name: PointerBaseSize
  nameWithType: TypeParser.PointerBaseSize
  fullName: TypeHelp.TypeParser.PointerBaseSize
- uid: TypeHelp.TypeParser.PointerBaseType*
  commentId: Overload:TypeHelp.TypeParser.PointerBaseType
  href: TypeHelp.TypeParser.PointerBaseType(System.Nullable{System.Boolean}).html
  name: PointerBaseType
  nameWithType: TypeParser.PointerBaseType
  fullName: TypeHelp.TypeParser.PointerBaseType
- uid: TypeHelp.TypeParser.SizeOf*
  commentId: Overload:TypeHelp.TypeParser.SizeOf
  href: TypeHelp.TypeParser.SizeOf(System.Object).html
  name: SizeOf
  nameWithType: TypeParser.SizeOf
  fullName: TypeHelp.TypeParser.SizeOf
- uid: TypeHelp.TypeParser.SizeOfTuple*
  commentId: Overload:TypeHelp.TypeParser.SizeOfTuple
  href: TypeHelp.TypeParser.SizeOfTuple(System.Object).html
  name: SizeOfTuple
  nameWithType: TypeParser.SizeOfTuple
  fullName: TypeHelp.TypeParser.SizeOfTuple
- uid: TypeHelp.TypeParser.TupleElementCount*
  commentId: Overload:TypeHelp.TypeParser.TupleElementCount
  href: TypeHelp.TypeParser.TupleElementCount(System.Object).html
  name: TupleElementCount
  nameWithType: TypeParser.TupleElementCount
  fullName: TypeHelp.TypeParser.TupleElementCount
- uid: TypeHelp.TypeParser.#ctor*
  commentId: Overload:TypeHelp.TypeParser.#ctor
  href: TypeHelp.TypeParser.#ctor(System.String).html
  name: TypeParser
  nameWithType: TypeParser.TypeParser
  fullName: TypeHelp.TypeParser.TypeParser
  nameWithType.vb: TypeParser.New
  fullName.vb: TypeHelp.TypeParser.New
  name.vb: New
- uid: System.Text.RegularExpressions.RegexOptions
  commentId: T:System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regexoptions
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
- uid: System.Text.RegularExpressions.Regex[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  name: Regex[]
  nameWithType: Regex[]
  fullName: System.Text.RegularExpressions.Regex[]
  nameWithType.vb: Regex()
  fullName.vb: System.Text.RegularExpressions.Regex()
  name.vb: Regex()
  spec.csharp:
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: (
  - name: )
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{TypeHelp.TypeCoex}
  commentId: T:System.Collections.Generic.List{TypeHelp.TypeCoex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TypeCoex>
  nameWithType: List<TypeCoex>
  fullName: System.Collections.Generic.List<TypeHelp.TypeCoex>
  nameWithType.vb: List(Of TypeCoex)
  fullName.vb: System.Collections.Generic.List(Of TypeHelp.TypeCoex)
  name.vb: List(Of TypeCoex)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TypeHelp.TypeCoex
    name: TypeCoex
    href: TypeHelp.TypeCoex.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TypeHelp.TypeCoex
    name: TypeCoex
    href: TypeHelp.TypeCoex.html
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.StringSplitOptions
  commentId: T:System.StringSplitOptions
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.stringsplitoptions
  name: StringSplitOptions
  nameWithType: StringSplitOptions
  fullName: System.StringSplitOptions
- uid: System.Char[][]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[][]
  nameWithType: char[][]
  fullName: char[][]
  nameWithType.vb: Char()()
  fullName.vb: Char()()
  name.vb: Char()()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
  - name: (
  - name: )
memberLayout: SeparatePages
