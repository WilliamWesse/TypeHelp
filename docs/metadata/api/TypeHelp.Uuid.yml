### YamlMime:ManagedReference
items:
- uid: TypeHelp.Uuid
  commentId: T:TypeHelp.Uuid
  id: Uuid
  parent: TypeHelp
  children:
  - TypeHelp.Uuid.#ctor(System.Boolean,TypeHelp.UuidVersion,System.Byte[])
  - TypeHelp.Uuid.Clamp(System.Int32,System.Int32,System.Nullable{System.Boolean})
  - TypeHelp.Uuid.Data
  - TypeHelp.Uuid.Epoch
  - TypeHelp.Uuid.ErrorPrefix
  - TypeHelp.Uuid.FormatSizeMax
  - TypeHelp.Uuid.FormatSizeMin
  - TypeHelp.Uuid.FormatSizes
  - TypeHelp.Uuid.GetBigInteger(System.Byte[])
  - TypeHelp.Uuid.GetBigInteger(System.Byte[],System.Int32,System.Int32)
  - TypeHelp.Uuid.GetUInt16(System.Byte[],System.Int32)
  - TypeHelp.Uuid.GetUInt32(System.Byte[],System.Int32)
  - TypeHelp.Uuid.GetUInt64(System.Byte[],System.Int32)
  - TypeHelp.Uuid.GetValue(System.Int32,System.Int32)
  - TypeHelp.Uuid.InvalidParamText(System.String)
  - TypeHelp.Uuid.IsMaxUuid
  - TypeHelp.Uuid.IsNilUuid
  - TypeHelp.Uuid.IsSafeOffset(System.Nullable{System.Boolean},System.Int32)
  - TypeHelp.Uuid.IsStrict
  - TypeHelp.Uuid.IsValid
  - TypeHelp.Uuid.SafeLength(System.Int32)
  - TypeHelp.Uuid.SafeLength(System.Int32,System.Int32)
  - TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean})
  - TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean},System.Int32)
  - TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean},System.Int32,System.Nullable{System.Boolean})
  - TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - TypeHelp.Uuid.SafeLengthCheck(System.Int32,System.Nullable{System.Boolean})
  - TypeHelp.Uuid.SafeOffset(System.Int32)
  - TypeHelp.Uuid.SafeOffset(System.Int32,System.Int32)
  - TypeHelp.Uuid.SafeOffset(System.Int32,System.Int32,System.Nullable{System.Boolean})
  - TypeHelp.Uuid.SafeOffset(System.Int32,System.Nullable{System.Boolean})
  - TypeHelp.Uuid.SafeOffset(System.Int32,System.Nullable{System.Boolean},System.Int32)
  - TypeHelp.Uuid.SafeOffset(System.Int32,System.Nullable{System.Boolean},System.Int32,System.Nullable{System.Boolean})
  - TypeHelp.Uuid.SafeOffsetCheck(System.Int32,System.Nullable{System.Boolean})
  - TypeHelp.Uuid.TimeStamp
  - TypeHelp.Uuid.ToString(System.String)
  - TypeHelp.Uuid.ToString(TypeHelp.UuidFormat)
  - TypeHelp.Uuid.ToString(TypeHelp.UuidFormat,System.Nullable{System.Int32})
  - TypeHelp.Uuid.ToStringBinary
  - TypeHelp.Uuid.ToStringCsv(System.String)
  - TypeHelp.Uuid.ToStringPackedHex
  - TypeHelp.Uuid.ToStringPrefixed
  - TypeHelp.Uuid.ToStringRfc(TypeHelp.UuidFormat)
  - TypeHelp.Uuid.UuidFormatRE
  - TypeHelp.Uuid.UuidFormats
  - TypeHelp.Uuid.Variant
  - TypeHelp.Uuid.VariantInfo
  - TypeHelp.Uuid.Version
  - TypeHelp.Uuid.VersionInfo
  - TypeHelp.Uuid.field_info_set
  - TypeHelp.Uuid.field_size
  langs:
  - csharp
  - vb
  name: Uuid
  nameWithType: Uuid
  fullName: TypeHelp.Uuid
  type: Class
  source:
    id: Uuid
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 279
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: The uuid.
  example: []
  syntax:
    content: public class Uuid
    content.vb: Public Class Uuid
  inheritance:
  - System.Object
  derivedClasses:
  - TypeHelp.UuidRfc
  - TypeHelp.UuidV6
  - TypeHelp.UuidV7
  - TypeHelp.UuidV8
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TypeHelp.Uuid.Data
  commentId: F:TypeHelp.Uuid.Data
  id: Data
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: Uuid.Data
  fullName: TypeHelp.Uuid.Data
  type: Field
  source:
    id: Data
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 286
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: The data.
  example: []
  syntax:
    content: public readonly byte[] Data
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Data As Byte()
- uid: TypeHelp.Uuid.Epoch
  commentId: F:TypeHelp.Uuid.Epoch
  id: Epoch
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: Epoch
  nameWithType: Uuid.Epoch
  fullName: TypeHelp.Uuid.Epoch
  type: Field
  source:
    id: Epoch
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 288
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: public readonly UuidEpoch Epoch
    return:
      type: TypeHelp.UuidEpoch
    content.vb: Public ReadOnly Epoch As UuidEpoch
- uid: TypeHelp.Uuid.IsMaxUuid
  commentId: F:TypeHelp.Uuid.IsMaxUuid
  id: IsMaxUuid
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: IsMaxUuid
  nameWithType: Uuid.IsMaxUuid
  fullName: TypeHelp.Uuid.IsMaxUuid
  type: Field
  source:
    id: IsMaxUuid
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 292
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: props maxValue uuid.
  example: []
  syntax:
    content: public readonly bool IsMaxUuid
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsMaxUuid As Boolean
- uid: TypeHelp.Uuid.IsNilUuid
  commentId: F:TypeHelp.Uuid.IsNilUuid
  id: IsNilUuid
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: IsNilUuid
  nameWithType: Uuid.IsNilUuid
  fullName: TypeHelp.Uuid.IsNilUuid
  type: Field
  source:
    id: IsNilUuid
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 296
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: props nil uuid.
  example: []
  syntax:
    content: public readonly bool IsNilUuid
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsNilUuid As Boolean
- uid: TypeHelp.Uuid.IsStrict
  commentId: F:TypeHelp.Uuid.IsStrict
  id: IsStrict
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: IsStrict
  nameWithType: Uuid.IsStrict
  fullName: TypeHelp.Uuid.IsStrict
  type: Field
  source:
    id: IsStrict
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 300
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: props strict.
  example: []
  syntax:
    content: public readonly bool IsStrict
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsStrict As Boolean
- uid: TypeHelp.Uuid.IsValid
  commentId: F:TypeHelp.Uuid.IsValid
  id: IsValid
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: Uuid.IsValid
  fullName: TypeHelp.Uuid.IsValid
  type: Field
  source:
    id: IsValid
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 304
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: props valid.
  example: []
  syntax:
    content: public readonly bool IsValid
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsValid As Boolean
- uid: TypeHelp.Uuid.Variant
  commentId: F:TypeHelp.Uuid.Variant
  id: Variant
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: Variant
  nameWithType: Uuid.Variant
  fullName: TypeHelp.Uuid.Variant
  type: Field
  source:
    id: Variant
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 308
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: The variant.
  example: []
  syntax:
    content: public readonly UuidVariant Variant
    return:
      type: TypeHelp.UuidVariant
    content.vb: Public ReadOnly [Variant] As UuidVariant
- uid: TypeHelp.Uuid.VariantInfo
  commentId: F:TypeHelp.Uuid.VariantInfo
  id: VariantInfo
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: VariantInfo
  nameWithType: Uuid.VariantInfo
  fullName: TypeHelp.Uuid.VariantInfo
  type: Field
  source:
    id: VariantInfo
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 312
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: The variant info.
  example: []
  syntax:
    content: public readonly FieldInfo VariantInfo
    return:
      type: TypeHelp.FieldInfo
    content.vb: Public ReadOnly VariantInfo As FieldInfo
- uid: TypeHelp.Uuid.Version
  commentId: F:TypeHelp.Uuid.Version
  id: Version
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Uuid.Version
  fullName: TypeHelp.Uuid.Version
  type: Field
  source:
    id: Version
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 316
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: The Version.
  example: []
  syntax:
    content: public readonly UuidVersion Version
    return:
      type: TypeHelp.UuidVersion
    content.vb: Public ReadOnly Version As UuidVersion
- uid: TypeHelp.Uuid.VersionInfo
  commentId: F:TypeHelp.Uuid.VersionInfo
  id: VersionInfo
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: VersionInfo
  nameWithType: Uuid.VersionInfo
  fullName: TypeHelp.Uuid.VersionInfo
  type: Field
  source:
    id: VersionInfo
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 320
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: The Version info.
  example: []
  syntax:
    content: public readonly FieldInfo VersionInfo
    return:
      type: TypeHelp.FieldInfo
    content.vb: Public ReadOnly VersionInfo As FieldInfo
- uid: TypeHelp.Uuid.TimeStamp
  commentId: P:TypeHelp.Uuid.TimeStamp
  id: TimeStamp
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: TimeStamp
  nameWithType: Uuid.TimeStamp
  fullName: TypeHelp.Uuid.TimeStamp
  type: Property
  source:
    id: TimeStamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 330
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: TimeStamp
  example: []
  syntax:
    content: public long TimeStamp { get; }
    parameters: []
    return:
      type: System.Int64
      description: UTC Ticks for CommonTime-based Uuids (V1,6,7), or 0
    content.vb: Public ReadOnly Property TimeStamp As Long
  overload: TypeHelp.Uuid.TimeStamp*
- uid: TypeHelp.Uuid.ToString(System.String)
  commentId: M:TypeHelp.Uuid.ToString(System.String)
  id: ToString(System.String)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Uuid.ToString(string)
  fullName: TypeHelp.Uuid.ToString(string)
  type: Method
  source:
    id: ToString
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 361
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: ToString(string uuidFormat)
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: One character from [DBPNXbc] or cn, {n:1,2,4,8,16}
    return:
      type: System.String
      description: >-
        A formatted uuid.
            <p>The b uuidFormat is for binary.</p>
            <p>The c uuidFormat</p>
    content.vb: Public Function ToString(format As String) As String
  overload: TypeHelp.Uuid.ToString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: TODO
  nameWithType.vb: Uuid.ToString(String)
  fullName.vb: TypeHelp.Uuid.ToString(String)
  name.vb: ToString(String)
- uid: TypeHelp.Uuid.ToString(TypeHelp.UuidFormat)
  commentId: M:TypeHelp.Uuid.ToString(TypeHelp.UuidFormat)
  id: ToString(TypeHelp.UuidFormat)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: ToString(UuidFormat)
  nameWithType: Uuid.ToString(UuidFormat)
  fullName: TypeHelp.Uuid.ToString(TypeHelp.UuidFormat)
  type: Method
  source:
    id: ToString
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 401
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: ToString(UuidFormat uuidFormat)
  example: []
  syntax:
    content: public string ToString(UuidFormat uuidFormat)
    parameters:
    - id: uuidFormat
      type: TypeHelp.UuidFormat
      description: The uuidFormat.
    return:
      type: System.String
      description: A formatted uuid.
    content.vb: Public Function ToString(uuidFormat As UuidFormat) As String
  overload: TypeHelp.Uuid.ToString*
- uid: TypeHelp.Uuid.ToString(TypeHelp.UuidFormat,System.Nullable{System.Int32})
  commentId: M:TypeHelp.Uuid.ToString(TypeHelp.UuidFormat,System.Nullable{System.Int32})
  id: ToString(TypeHelp.UuidFormat,System.Nullable{System.Int32})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: ToString(UuidFormat, int?)
  nameWithType: Uuid.ToString(UuidFormat, int?)
  fullName: TypeHelp.Uuid.ToString(TypeHelp.UuidFormat, int?)
  type: Method
  source:
    id: ToString
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 413
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: ToString(UuidFormat uuidFormat, int usingLength)
  example: []
  syntax:
    content: public string ToString(UuidFormat uuidFormat, int? size)
    parameters:
    - id: uuidFormat
      type: TypeHelp.UuidFormat
      description: The uuidFormat.
    - id: size
      type: System.Nullable{System.Int32}
      description: The usingLength.
    return:
      type: System.String
      description: A formatted uuid.
    content.vb: Public Function ToString(uuidFormat As UuidFormat, size As Integer?) As String
  overload: TypeHelp.Uuid.ToString*
  nameWithType.vb: Uuid.ToString(UuidFormat, Integer?)
  fullName.vb: TypeHelp.Uuid.ToString(TypeHelp.UuidFormat, Integer?)
  name.vb: ToString(UuidFormat, Integer?)
- uid: TypeHelp.Uuid.Clamp(System.Int32,System.Int32,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.Uuid.Clamp(System.Int32,System.Int32,System.Nullable{System.Boolean})
  id: Clamp(System.Int32,System.Int32,System.Nullable{System.Boolean})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: Clamp(int, int, bool?)
  nameWithType: Uuid.Clamp(int, int, bool?)
  fullName: TypeHelp.Uuid.Clamp(int, int, bool?)
  type: Method
  source:
    id: Clamp
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 427
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected Tuple<bool, int, bool, int, bool> Clamp(int offset, int length, bool? preferSize)
    parameters:
    - id: offset
      type: System.Int32
    - id: length
      type: System.Int32
    - id: preferSize
      type: System.Nullable{System.Boolean}
    return:
      type: System.Tuple{System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean}
    content.vb: Protected Function Clamp(offset As Integer, length As Integer, preferSize As Boolean?) As Tuple(Of Boolean, Integer, Boolean, Integer, Boolean)
  overload: TypeHelp.Uuid.Clamp*
  nameWithType.vb: Uuid.Clamp(Integer, Integer, Boolean?)
  fullName.vb: TypeHelp.Uuid.Clamp(Integer, Integer, Boolean?)
  name.vb: Clamp(Integer, Integer, Boolean?)
- uid: TypeHelp.Uuid.GetValue(System.Int32,System.Int32)
  commentId: M:TypeHelp.Uuid.GetValue(System.Int32,System.Int32)
  id: GetValue(System.Int32,System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: GetValue(int, int)
  nameWithType: Uuid.GetValue(int, int)
  fullName: TypeHelp.Uuid.GetValue(int, int)
  type: Method
  source:
    id: GetValue
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 455
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected object GetValue(int offset, int length)
    parameters:
    - id: offset
      type: System.Int32
    - id: length
      type: System.Int32
    return:
      type: System.Object
    content.vb: Protected Function GetValue(offset As Integer, length As Integer) As Object
  overload: TypeHelp.Uuid.GetValue*
  nameWithType.vb: Uuid.GetValue(Integer, Integer)
  fullName.vb: TypeHelp.Uuid.GetValue(Integer, Integer)
  name.vb: GetValue(Integer, Integer)
- uid: TypeHelp.Uuid.IsSafeOffset(System.Nullable{System.Boolean},System.Int32)
  commentId: M:TypeHelp.Uuid.IsSafeOffset(System.Nullable{System.Boolean},System.Int32)
  id: IsSafeOffset(System.Nullable{System.Boolean},System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: IsSafeOffset(bool?, int)
  nameWithType: Uuid.IsSafeOffset(bool?, int)
  fullName: TypeHelp.Uuid.IsSafeOffset(bool?, int)
  type: Method
  source:
    id: IsSafeOffset
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 487
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected bool IsSafeOffset(bool? strict, int offset)
    parameters:
    - id: strict
      type: System.Nullable{System.Boolean}
    - id: offset
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Protected Function IsSafeOffset(strict As Boolean?, offset As Integer) As Boolean
  overload: TypeHelp.Uuid.IsSafeOffset*
  nameWithType.vb: Uuid.IsSafeOffset(Boolean?, Integer)
  fullName.vb: TypeHelp.Uuid.IsSafeOffset(Boolean?, Integer)
  name.vb: IsSafeOffset(Boolean?, Integer)
- uid: TypeHelp.Uuid.SafeOffset(System.Int32)
  commentId: M:TypeHelp.Uuid.SafeOffset(System.Int32)
  id: SafeOffset(System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeOffset(int)
  nameWithType: Uuid.SafeOffset(int)
  fullName: TypeHelp.Uuid.SafeOffset(int)
  type: Method
  source:
    id: SafeOffset
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 494
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeOffset(int offset)
    parameters:
    - id: offset
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Function SafeOffset(offset As Integer) As Integer
  overload: TypeHelp.Uuid.SafeOffset*
  nameWithType.vb: Uuid.SafeOffset(Integer)
  fullName.vb: TypeHelp.Uuid.SafeOffset(Integer)
  name.vb: SafeOffset(Integer)
- uid: TypeHelp.Uuid.SafeOffset(System.Int32,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.Uuid.SafeOffset(System.Int32,System.Nullable{System.Boolean})
  id: SafeOffset(System.Int32,System.Nullable{System.Boolean})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeOffset(int, bool?)
  nameWithType: Uuid.SafeOffset(int, bool?)
  fullName: TypeHelp.Uuid.SafeOffset(int, bool?)
  type: Method
  source:
    id: SafeOffset
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 499
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeOffset(int offset, bool? strict)
    parameters:
    - id: offset
      type: System.Int32
    - id: strict
      type: System.Nullable{System.Boolean}
    return:
      type: System.Int32
    content.vb: Protected Function SafeOffset(offset As Integer, strict As Boolean?) As Integer
  overload: TypeHelp.Uuid.SafeOffset*
  nameWithType.vb: Uuid.SafeOffset(Integer, Boolean?)
  fullName.vb: TypeHelp.Uuid.SafeOffset(Integer, Boolean?)
  name.vb: SafeOffset(Integer, Boolean?)
- uid: TypeHelp.Uuid.SafeOffset(System.Int32,System.Int32)
  commentId: M:TypeHelp.Uuid.SafeOffset(System.Int32,System.Int32)
  id: SafeOffset(System.Int32,System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeOffset(int, int)
  nameWithType: Uuid.SafeOffset(int, int)
  fullName: TypeHelp.Uuid.SafeOffset(int, int)
  type: Method
  source:
    id: SafeOffset
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 504
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeOffset(int offset, int usingLength)
    parameters:
    - id: offset
      type: System.Int32
    - id: usingLength
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Function SafeOffset(offset As Integer, usingLength As Integer) As Integer
  overload: TypeHelp.Uuid.SafeOffset*
  nameWithType.vb: Uuid.SafeOffset(Integer, Integer)
  fullName.vb: TypeHelp.Uuid.SafeOffset(Integer, Integer)
  name.vb: SafeOffset(Integer, Integer)
- uid: TypeHelp.Uuid.SafeOffset(System.Int32,System.Int32,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.Uuid.SafeOffset(System.Int32,System.Int32,System.Nullable{System.Boolean})
  id: SafeOffset(System.Int32,System.Int32,System.Nullable{System.Boolean})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeOffset(int, int, bool?)
  nameWithType: Uuid.SafeOffset(int, int, bool?)
  fullName: TypeHelp.Uuid.SafeOffset(int, int, bool?)
  type: Method
  source:
    id: SafeOffset
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 509
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeOffset(int offset, int usingLength, bool? preferMaximum)
    parameters:
    - id: offset
      type: System.Int32
    - id: usingLength
      type: System.Int32
    - id: preferMaximum
      type: System.Nullable{System.Boolean}
    return:
      type: System.Int32
    content.vb: Protected Function SafeOffset(offset As Integer, usingLength As Integer, preferMaximum As Boolean?) As Integer
  overload: TypeHelp.Uuid.SafeOffset*
  nameWithType.vb: Uuid.SafeOffset(Integer, Integer, Boolean?)
  fullName.vb: TypeHelp.Uuid.SafeOffset(Integer, Integer, Boolean?)
  name.vb: SafeOffset(Integer, Integer, Boolean?)
- uid: TypeHelp.Uuid.SafeOffset(System.Int32,System.Nullable{System.Boolean},System.Int32)
  commentId: M:TypeHelp.Uuid.SafeOffset(System.Int32,System.Nullable{System.Boolean},System.Int32)
  id: SafeOffset(System.Int32,System.Nullable{System.Boolean},System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeOffset(int, bool?, int)
  nameWithType: Uuid.SafeOffset(int, bool?, int)
  fullName: TypeHelp.Uuid.SafeOffset(int, bool?, int)
  type: Method
  source:
    id: SafeOffset
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 514
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeOffset(int offset, bool? strict, int usingLength)
    parameters:
    - id: offset
      type: System.Int32
    - id: strict
      type: System.Nullable{System.Boolean}
    - id: usingLength
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Function SafeOffset(offset As Integer, strict As Boolean?, usingLength As Integer) As Integer
  overload: TypeHelp.Uuid.SafeOffset*
  nameWithType.vb: Uuid.SafeOffset(Integer, Boolean?, Integer)
  fullName.vb: TypeHelp.Uuid.SafeOffset(Integer, Boolean?, Integer)
  name.vb: SafeOffset(Integer, Boolean?, Integer)
- uid: TypeHelp.Uuid.SafeOffset(System.Int32,System.Nullable{System.Boolean},System.Int32,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.Uuid.SafeOffset(System.Int32,System.Nullable{System.Boolean},System.Int32,System.Nullable{System.Boolean})
  id: SafeOffset(System.Int32,System.Nullable{System.Boolean},System.Int32,System.Nullable{System.Boolean})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeOffset(int, bool?, int, bool?)
  nameWithType: Uuid.SafeOffset(int, bool?, int, bool?)
  fullName: TypeHelp.Uuid.SafeOffset(int, bool?, int, bool?)
  type: Method
  source:
    id: SafeOffset
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 519
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeOffset(int offset, bool? strict, int usingLength, bool? preferMaximum)
    parameters:
    - id: offset
      type: System.Int32
    - id: strict
      type: System.Nullable{System.Boolean}
    - id: usingLength
      type: System.Int32
    - id: preferMaximum
      type: System.Nullable{System.Boolean}
    return:
      type: System.Int32
    content.vb: Protected Function SafeOffset(offset As Integer, strict As Boolean?, usingLength As Integer, preferMaximum As Boolean?) As Integer
  overload: TypeHelp.Uuid.SafeOffset*
  nameWithType.vb: Uuid.SafeOffset(Integer, Boolean?, Integer, Boolean?)
  fullName.vb: TypeHelp.Uuid.SafeOffset(Integer, Boolean?, Integer, Boolean?)
  name.vb: SafeOffset(Integer, Boolean?, Integer, Boolean?)
- uid: TypeHelp.Uuid.SafeOffsetCheck(System.Int32,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.Uuid.SafeOffsetCheck(System.Int32,System.Nullable{System.Boolean})
  id: SafeOffsetCheck(System.Int32,System.Nullable{System.Boolean})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeOffsetCheck(int, bool?)
  nameWithType: Uuid.SafeOffsetCheck(int, bool?)
  fullName: TypeHelp.Uuid.SafeOffsetCheck(int, bool?)
  type: Method
  source:
    id: SafeOffsetCheck
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 533
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeOffsetCheck(int offset, bool? strict)
    parameters:
    - id: offset
      type: System.Int32
    - id: strict
      type: System.Nullable{System.Boolean}
    return:
      type: System.Int32
    content.vb: Protected Function SafeOffsetCheck(offset As Integer, strict As Boolean?) As Integer
  overload: TypeHelp.Uuid.SafeOffsetCheck*
  nameWithType.vb: Uuid.SafeOffsetCheck(Integer, Boolean?)
  fullName.vb: TypeHelp.Uuid.SafeOffsetCheck(Integer, Boolean?)
  name.vb: SafeOffsetCheck(Integer, Boolean?)
- uid: TypeHelp.Uuid.SafeLength(System.Int32)
  commentId: M:TypeHelp.Uuid.SafeLength(System.Int32)
  id: SafeLength(System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeLength(int)
  nameWithType: Uuid.SafeLength(int)
  fullName: TypeHelp.Uuid.SafeLength(int)
  type: Method
  source:
    id: SafeLength
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 547
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeLength(int length)
    parameters:
    - id: length
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Function SafeLength(length As Integer) As Integer
  overload: TypeHelp.Uuid.SafeLength*
  nameWithType.vb: Uuid.SafeLength(Integer)
  fullName.vb: TypeHelp.Uuid.SafeLength(Integer)
  name.vb: SafeLength(Integer)
- uid: TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean})
  id: SafeLength(System.Int32,System.Nullable{System.Boolean})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeLength(int, bool?)
  nameWithType: Uuid.SafeLength(int, bool?)
  fullName: TypeHelp.Uuid.SafeLength(int, bool?)
  type: Method
  source:
    id: SafeLength
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 552
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static int SafeLength(int length, bool? strict)
    parameters:
    - id: length
      type: System.Int32
    - id: strict
      type: System.Nullable{System.Boolean}
    return:
      type: System.Int32
    content.vb: Protected Shared Function SafeLength(length As Integer, strict As Boolean?) As Integer
  overload: TypeHelp.Uuid.SafeLength*
  nameWithType.vb: Uuid.SafeLength(Integer, Boolean?)
  fullName.vb: TypeHelp.Uuid.SafeLength(Integer, Boolean?)
  name.vb: SafeLength(Integer, Boolean?)
- uid: TypeHelp.Uuid.SafeLength(System.Int32,System.Int32)
  commentId: M:TypeHelp.Uuid.SafeLength(System.Int32,System.Int32)
  id: SafeLength(System.Int32,System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeLength(int, int)
  nameWithType: Uuid.SafeLength(int, int)
  fullName: TypeHelp.Uuid.SafeLength(int, int)
  type: Method
  source:
    id: SafeLength
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 556
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeLength(int length, int usingOffset)
    parameters:
    - id: length
      type: System.Int32
    - id: usingOffset
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Function SafeLength(length As Integer, usingOffset As Integer) As Integer
  overload: TypeHelp.Uuid.SafeLength*
  nameWithType.vb: Uuid.SafeLength(Integer, Integer)
  fullName.vb: TypeHelp.Uuid.SafeLength(Integer, Integer)
  name.vb: SafeLength(Integer, Integer)
- uid: TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean},System.Int32)
  commentId: M:TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean},System.Int32)
  id: SafeLength(System.Int32,System.Nullable{System.Boolean},System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeLength(int, bool?, int)
  nameWithType: Uuid.SafeLength(int, bool?, int)
  fullName: TypeHelp.Uuid.SafeLength(int, bool?, int)
  type: Method
  source:
    id: SafeLength
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 561
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeLength(int length, bool? strict, int usingOffset)
    parameters:
    - id: length
      type: System.Int32
    - id: strict
      type: System.Nullable{System.Boolean}
    - id: usingOffset
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Function SafeLength(length As Integer, strict As Boolean?, usingOffset As Integer) As Integer
  overload: TypeHelp.Uuid.SafeLength*
  nameWithType.vb: Uuid.SafeLength(Integer, Boolean?, Integer)
  fullName.vb: TypeHelp.Uuid.SafeLength(Integer, Boolean?, Integer)
  name.vb: SafeLength(Integer, Boolean?, Integer)
- uid: TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: SafeLength(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeLength(int, bool?, bool?)
  nameWithType: Uuid.SafeLength(int, bool?, bool?)
  fullName: TypeHelp.Uuid.SafeLength(int, bool?, bool?)
  type: Method
  source:
    id: SafeLength
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 566
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeLength(int length, bool? strict, bool? preferMaximum)
    parameters:
    - id: length
      type: System.Int32
    - id: strict
      type: System.Nullable{System.Boolean}
    - id: preferMaximum
      type: System.Nullable{System.Boolean}
    return:
      type: System.Int32
    content.vb: Protected Function SafeLength(length As Integer, strict As Boolean?, preferMaximum As Boolean?) As Integer
  overload: TypeHelp.Uuid.SafeLength*
  nameWithType.vb: Uuid.SafeLength(Integer, Boolean?, Boolean?)
  fullName.vb: TypeHelp.Uuid.SafeLength(Integer, Boolean?, Boolean?)
  name.vb: SafeLength(Integer, Boolean?, Boolean?)
- uid: TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean},System.Int32,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.Uuid.SafeLength(System.Int32,System.Nullable{System.Boolean},System.Int32,System.Nullable{System.Boolean})
  id: SafeLength(System.Int32,System.Nullable{System.Boolean},System.Int32,System.Nullable{System.Boolean})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeLength(int, bool?, int, bool?)
  nameWithType: Uuid.SafeLength(int, bool?, int, bool?)
  fullName: TypeHelp.Uuid.SafeLength(int, bool?, int, bool?)
  type: Method
  source:
    id: SafeLength
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 571
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected int SafeLength(int length, bool? strict, int usingOffset, bool? preferMaximum)
    parameters:
    - id: length
      type: System.Int32
    - id: strict
      type: System.Nullable{System.Boolean}
    - id: usingOffset
      type: System.Int32
    - id: preferMaximum
      type: System.Nullable{System.Boolean}
    return:
      type: System.Int32
    content.vb: Protected Function SafeLength(length As Integer, strict As Boolean?, usingOffset As Integer, preferMaximum As Boolean?) As Integer
  overload: TypeHelp.Uuid.SafeLength*
  nameWithType.vb: Uuid.SafeLength(Integer, Boolean?, Integer, Boolean?)
  fullName.vb: TypeHelp.Uuid.SafeLength(Integer, Boolean?, Integer, Boolean?)
  name.vb: SafeLength(Integer, Boolean?, Integer, Boolean?)
- uid: TypeHelp.Uuid.SafeLengthCheck(System.Int32,System.Nullable{System.Boolean})
  commentId: M:TypeHelp.Uuid.SafeLengthCheck(System.Int32,System.Nullable{System.Boolean})
  id: SafeLengthCheck(System.Int32,System.Nullable{System.Boolean})
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: SafeLengthCheck(int, bool?)
  nameWithType: Uuid.SafeLengthCheck(int, bool?)
  fullName: TypeHelp.Uuid.SafeLengthCheck(int, bool?)
  type: Method
  source:
    id: SafeLengthCheck
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 598
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static int SafeLengthCheck(int length, bool? strict)
    parameters:
    - id: length
      type: System.Int32
    - id: strict
      type: System.Nullable{System.Boolean}
    return:
      type: System.Int32
    content.vb: Protected Shared Function SafeLengthCheck(length As Integer, strict As Boolean?) As Integer
  overload: TypeHelp.Uuid.SafeLengthCheck*
  nameWithType.vb: Uuid.SafeLengthCheck(Integer, Boolean?)
  fullName.vb: TypeHelp.Uuid.SafeLengthCheck(Integer, Boolean?)
  name.vb: SafeLengthCheck(Integer, Boolean?)
- uid: TypeHelp.Uuid.ToStringBinary
  commentId: M:TypeHelp.Uuid.ToStringBinary
  id: ToStringBinary
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: ToStringBinary()
  nameWithType: Uuid.ToStringBinary()
  fullName: TypeHelp.Uuid.ToStringBinary()
  type: Method
  source:
    id: ToStringBinary
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 626
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected string ToStringBinary()
    return:
      type: System.String
    content.vb: Protected Function ToStringBinary() As String
  overload: TypeHelp.Uuid.ToStringBinary*
- uid: TypeHelp.Uuid.ToStringCsv(System.String)
  commentId: M:TypeHelp.Uuid.ToStringCsv(System.String)
  id: ToStringCsv(System.String)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: ToStringCsv(string)
  nameWithType: Uuid.ToStringCsv(string)
  fullName: TypeHelp.Uuid.ToStringCsv(string)
  type: Method
  source:
    id: ToStringCsv
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 646
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected string ToStringCsv(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Protected Function ToStringCsv(format As String) As String
  overload: TypeHelp.Uuid.ToStringCsv*
  nameWithType.vb: Uuid.ToStringCsv(String)
  fullName.vb: TypeHelp.Uuid.ToStringCsv(String)
  name.vb: ToStringCsv(String)
- uid: TypeHelp.Uuid.ToStringPackedHex
  commentId: M:TypeHelp.Uuid.ToStringPackedHex
  id: ToStringPackedHex
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: ToStringPackedHex()
  nameWithType: Uuid.ToStringPackedHex()
  fullName: TypeHelp.Uuid.ToStringPackedHex()
  type: Method
  source:
    id: ToStringPackedHex
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 700
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected string ToStringPackedHex()
    return:
      type: System.String
    content.vb: Protected Function ToStringPackedHex() As String
  overload: TypeHelp.Uuid.ToStringPackedHex*
- uid: TypeHelp.Uuid.ToStringPrefixed
  commentId: M:TypeHelp.Uuid.ToStringPrefixed
  id: ToStringPrefixed
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: ToStringPrefixed()
  nameWithType: Uuid.ToStringPrefixed()
  fullName: TypeHelp.Uuid.ToStringPrefixed()
  type: Method
  source:
    id: ToStringPrefixed
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 709
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected string ToStringPrefixed()
    return:
      type: System.String
    content.vb: Protected Function ToStringPrefixed() As String
  overload: TypeHelp.Uuid.ToStringPrefixed*
- uid: TypeHelp.Uuid.ToStringRfc(TypeHelp.UuidFormat)
  commentId: M:TypeHelp.Uuid.ToStringRfc(TypeHelp.UuidFormat)
  id: ToStringRfc(TypeHelp.UuidFormat)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: ToStringRfc(UuidFormat)
  nameWithType: Uuid.ToStringRfc(UuidFormat)
  fullName: TypeHelp.Uuid.ToStringRfc(TypeHelp.UuidFormat)
  type: Method
  source:
    id: ToStringRfc
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 725
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected string ToStringRfc(UuidFormat uf)
    parameters:
    - id: uf
      type: TypeHelp.UuidFormat
    return:
      type: System.String
    content.vb: Protected Function ToStringRfc(uf As UuidFormat) As String
  overload: TypeHelp.Uuid.ToStringRfc*
- uid: TypeHelp.Uuid.#ctor(System.Boolean,TypeHelp.UuidVersion,System.Byte[])
  commentId: M:TypeHelp.Uuid.#ctor(System.Boolean,TypeHelp.UuidVersion,System.Byte[])
  id: '#ctor(System.Boolean,TypeHelp.UuidVersion,System.Byte[])'
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: Uuid(bool, UuidVersion, byte[])
  nameWithType: Uuid.Uuid(bool, UuidVersion, byte[])
  fullName: TypeHelp.Uuid.Uuid(bool, TypeHelp.UuidVersion, byte[])
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 750
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: Initializes a new instance of the <xref href="TypeHelp.Uuid" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected Uuid(bool strict, UuidVersion version, byte[] data)
    parameters:
    - id: strict
      type: System.Boolean
      description: bool
    - id: version
      type: TypeHelp.UuidVersion
      description: UuidVersion
    - id: data
      type: System.Byte[]
      description: byte[]
    content.vb: Protected Sub New(strict As Boolean, version As UuidVersion, data As Byte())
  overload: TypeHelp.Uuid.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if data or version is invalid
  nameWithType.vb: Uuid.New(Boolean, UuidVersion, Byte())
  fullName.vb: TypeHelp.Uuid.New(Boolean, TypeHelp.UuidVersion, Byte())
  name.vb: New(Boolean, UuidVersion, Byte())
- uid: TypeHelp.Uuid.field_info_set
  commentId: F:TypeHelp.Uuid.field_info_set
  id: field_info_set
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: field_info_set
  nameWithType: Uuid.field_info_set
  fullName: TypeHelp.Uuid.field_info_set
  type: Field
  source:
    id: field_info_set
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 835
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: The field info set.
  example: []
  syntax:
    content: protected readonly FieldInfo[] field_info_set
    return:
      type: TypeHelp.FieldInfo[]
    content.vb: Protected ReadOnly field_info_set As FieldInfo()
- uid: TypeHelp.Uuid.field_size
  commentId: F:TypeHelp.Uuid.field_size
  id: field_size
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: field_size
  nameWithType: Uuid.field_size
  fullName: TypeHelp.Uuid.field_size
  type: Field
  source:
    id: field_size
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 839
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: The field count.
  example: []
  syntax:
    content: protected readonly long field_size
    return:
      type: System.Int64
    content.vb: Protected ReadOnly field_size As Long
- uid: TypeHelp.Uuid.ErrorPrefix
  commentId: F:TypeHelp.Uuid.ErrorPrefix
  id: ErrorPrefix
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: ErrorPrefix
  nameWithType: Uuid.ErrorPrefix
  fullName: TypeHelp.Uuid.ErrorPrefix
  type: Field
  source:
    id: ErrorPrefix
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 845
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly string ErrorPrefix
    return:
      type: System.String
    content.vb: Protected Shared ReadOnly ErrorPrefix As String
- uid: TypeHelp.Uuid.FormatSizes
  commentId: F:TypeHelp.Uuid.FormatSizes
  id: FormatSizes
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: FormatSizes
  nameWithType: Uuid.FormatSizes
  fullName: TypeHelp.Uuid.FormatSizes
  type: Field
  source:
    id: FormatSizes
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 847
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly List<int> FormatSizes
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Protected Shared ReadOnly FormatSizes As List(Of Integer)
- uid: TypeHelp.Uuid.FormatSizeMin
  commentId: F:TypeHelp.Uuid.FormatSizeMin
  id: FormatSizeMin
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: FormatSizeMin
  nameWithType: Uuid.FormatSizeMin
  fullName: TypeHelp.Uuid.FormatSizeMin
  type: Field
  source:
    id: FormatSizeMin
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 850
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly int FormatSizeMin
    return:
      type: System.Int32
    content.vb: Protected Shared ReadOnly FormatSizeMin As Integer
- uid: TypeHelp.Uuid.FormatSizeMax
  commentId: F:TypeHelp.Uuid.FormatSizeMax
  id: FormatSizeMax
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: FormatSizeMax
  nameWithType: Uuid.FormatSizeMax
  fullName: TypeHelp.Uuid.FormatSizeMax
  type: Field
  source:
    id: FormatSizeMax
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 851
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly int FormatSizeMax
    return:
      type: System.Int32
    content.vb: Protected Shared ReadOnly FormatSizeMax As Integer
- uid: TypeHelp.Uuid.UuidFormats
  commentId: F:TypeHelp.Uuid.UuidFormats
  id: UuidFormats
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: UuidFormats
  nameWithType: Uuid.UuidFormats
  fullName: TypeHelp.Uuid.UuidFormats
  type: Field
  source:
    id: UuidFormats
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 852
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly string UuidFormats
    return:
      type: System.String
    content.vb: Protected Shared ReadOnly UuidFormats As String
- uid: TypeHelp.Uuid.UuidFormatRE
  commentId: F:TypeHelp.Uuid.UuidFormatRE
  id: UuidFormatRE
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: UuidFormatRE
  nameWithType: Uuid.UuidFormatRE
  fullName: TypeHelp.Uuid.UuidFormatRE
  type: Field
  source:
    id: UuidFormatRE
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 853
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static readonly Regex UuidFormatRE
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Protected Shared ReadOnly UuidFormatRE As Regex
- uid: TypeHelp.Uuid.GetBigInteger(System.Byte[])
  commentId: M:TypeHelp.Uuid.GetBigInteger(System.Byte[])
  id: GetBigInteger(System.Byte[])
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: GetBigInteger(byte[])
  nameWithType: Uuid.GetBigInteger(byte[])
  fullName: TypeHelp.Uuid.GetBigInteger(byte[])
  type: Method
  source:
    id: GetBigInteger
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 863
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static BigInteger GetBigInteger(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: System.Numerics.BigInteger
    content.vb: Protected Shared Function GetBigInteger(data As Byte()) As BigInteger
  overload: TypeHelp.Uuid.GetBigInteger*
  nameWithType.vb: Uuid.GetBigInteger(Byte())
  fullName.vb: TypeHelp.Uuid.GetBigInteger(Byte())
  name.vb: GetBigInteger(Byte())
- uid: TypeHelp.Uuid.GetBigInteger(System.Byte[],System.Int32,System.Int32)
  commentId: M:TypeHelp.Uuid.GetBigInteger(System.Byte[],System.Int32,System.Int32)
  id: GetBigInteger(System.Byte[],System.Int32,System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: GetBigInteger(byte[], int, int)
  nameWithType: Uuid.GetBigInteger(byte[], int, int)
  fullName: TypeHelp.Uuid.GetBigInteger(byte[], int, int)
  type: Method
  source:
    id: GetBigInteger
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 875
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: GetBigInteger
  example: []
  syntax:
    content: protected static BigInteger GetBigInteger(byte[] data, int offset, int length)
    parameters:
    - id: data
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    return:
      type: System.Numerics.BigInteger
      description: A BigInteger usingOffset.
    content.vb: Protected Shared Function GetBigInteger(data As Byte(), offset As Integer, length As Integer) As BigInteger
  overload: TypeHelp.Uuid.GetBigInteger*
  nameWithType.vb: Uuid.GetBigInteger(Byte(), Integer, Integer)
  fullName.vb: TypeHelp.Uuid.GetBigInteger(Byte(), Integer, Integer)
  name.vb: GetBigInteger(Byte(), Integer, Integer)
- uid: TypeHelp.Uuid.GetUInt16(System.Byte[],System.Int32)
  commentId: M:TypeHelp.Uuid.GetUInt16(System.Byte[],System.Int32)
  id: GetUInt16(System.Byte[],System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: GetUInt16(byte[], int)
  nameWithType: Uuid.GetUInt16(byte[], int)
  fullName: TypeHelp.Uuid.GetUInt16(byte[], int)
  type: Method
  source:
    id: GetUInt16
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 893
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: GetUInt16
  example: []
  syntax:
    content: protected static ushort GetUInt16(byte[] data, int offset)
    parameters:
    - id: data
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    return:
      type: System.UInt16
      description: A UInt16 usingOffset.
    content.vb: Protected Shared Function GetUInt16(data As Byte(), offset As Integer) As UShort
  overload: TypeHelp.Uuid.GetUInt16*
  nameWithType.vb: Uuid.GetUInt16(Byte(), Integer)
  fullName.vb: TypeHelp.Uuid.GetUInt16(Byte(), Integer)
  name.vb: GetUInt16(Byte(), Integer)
- uid: TypeHelp.Uuid.GetUInt32(System.Byte[],System.Int32)
  commentId: M:TypeHelp.Uuid.GetUInt32(System.Byte[],System.Int32)
  id: GetUInt32(System.Byte[],System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: GetUInt32(byte[], int)
  nameWithType: Uuid.GetUInt32(byte[], int)
  fullName: TypeHelp.Uuid.GetUInt32(byte[], int)
  type: Method
  source:
    id: GetUInt32
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 908
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: GetUInt32
  example: []
  syntax:
    content: protected static uint GetUInt32(byte[] data, int offset)
    parameters:
    - id: data
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    return:
      type: System.UInt32
      description: A UInt32 usingOffset.
    content.vb: Protected Shared Function GetUInt32(data As Byte(), offset As Integer) As UInteger
  overload: TypeHelp.Uuid.GetUInt32*
  nameWithType.vb: Uuid.GetUInt32(Byte(), Integer)
  fullName.vb: TypeHelp.Uuid.GetUInt32(Byte(), Integer)
  name.vb: GetUInt32(Byte(), Integer)
- uid: TypeHelp.Uuid.GetUInt64(System.Byte[],System.Int32)
  commentId: M:TypeHelp.Uuid.GetUInt64(System.Byte[],System.Int32)
  id: GetUInt64(System.Byte[],System.Int32)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: GetUInt64(byte[], int)
  nameWithType: Uuid.GetUInt64(byte[], int)
  fullName: TypeHelp.Uuid.GetUInt64(byte[], int)
  type: Method
  source:
    id: GetUInt64
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 923
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  summary: GetUInt64
  example: []
  syntax:
    content: protected static ulong GetUInt64(byte[] data, int offset)
    parameters:
    - id: data
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    return:
      type: System.UInt64
      description: A UInt64 usingOffset.
    content.vb: Protected Shared Function GetUInt64(data As Byte(), offset As Integer) As ULong
  overload: TypeHelp.Uuid.GetUInt64*
  nameWithType.vb: Uuid.GetUInt64(Byte(), Integer)
  fullName.vb: TypeHelp.Uuid.GetUInt64(Byte(), Integer)
  name.vb: GetUInt64(Byte(), Integer)
- uid: TypeHelp.Uuid.InvalidParamText(System.String)
  commentId: M:TypeHelp.Uuid.InvalidParamText(System.String)
  id: InvalidParamText(System.String)
  parent: TypeHelp.Uuid
  langs:
  - csharp
  - vb
  name: InvalidParamText(string)
  nameWithType: Uuid.InvalidParamText(string)
  fullName: TypeHelp.Uuid.InvalidParamText(string)
  type: Method
  source:
    id: InvalidParamText
    path: C:\Users\wwess\source\repos\TypeHelp\src\Uuid\Uuid.cs
    startLine: 932
  assemblies:
  - TypeHelp
  namespace: TypeHelp
  syntax:
    content: protected static string InvalidParamText(string typeAndValue)
    parameters:
    - id: typeAndValue
      type: System.String
    return:
      type: System.String
    content.vb: Protected Shared Function InvalidParamText(typeAndValue As String) As String
  overload: TypeHelp.Uuid.InvalidParamText*
  nameWithType.vb: Uuid.InvalidParamText(String)
  fullName.vb: TypeHelp.Uuid.InvalidParamText(String)
  name.vb: InvalidParamText(String)
references:
- uid: TypeHelp
  commentId: N:TypeHelp
  href: TypeHelp.html
  name: TypeHelp
  nameWithType: TypeHelp
  fullName: TypeHelp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: TypeHelp.UuidEpoch
  commentId: T:TypeHelp.UuidEpoch
  parent: TypeHelp
  href: TypeHelp.UuidEpoch.html
  name: UuidEpoch
  nameWithType: UuidEpoch
  fullName: TypeHelp.UuidEpoch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TypeHelp.UuidVariant
  commentId: T:TypeHelp.UuidVariant
  parent: TypeHelp
  href: TypeHelp.UuidVariant.html
  name: UuidVariant
  nameWithType: UuidVariant
  fullName: TypeHelp.UuidVariant
- uid: TypeHelp.FieldInfo
  commentId: T:TypeHelp.FieldInfo
  parent: TypeHelp
  href: TypeHelp.FieldInfo.html
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: TypeHelp.FieldInfo
- uid: TypeHelp.UuidVersion
  commentId: T:TypeHelp.UuidVersion
  parent: TypeHelp
  href: TypeHelp.UuidVersion.html
  name: UuidVersion
  nameWithType: UuidVersion
  fullName: TypeHelp.UuidVersion
- uid: TypeHelp.Uuid.TimeStamp*
  commentId: Overload:TypeHelp.Uuid.TimeStamp
  href: TypeHelp.Uuid.TimeStamp.html
  name: TimeStamp
  nameWithType: Uuid.TimeStamp
  fullName: TypeHelp.Uuid.TimeStamp
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: TypeHelp.Uuid.ToString*
  commentId: Overload:TypeHelp.Uuid.ToString
  href: TypeHelp.Uuid.ToString(System.String).html
  name: ToString
  nameWithType: Uuid.ToString
  fullName: TypeHelp.Uuid.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TypeHelp.UuidFormat
  commentId: T:TypeHelp.UuidFormat
  parent: TypeHelp
  href: TypeHelp.UuidFormat.html
  name: UuidFormat
  nameWithType: UuidFormat
  fullName: TypeHelp.UuidFormat
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TypeHelp.Uuid.Clamp*
  commentId: Overload:TypeHelp.Uuid.Clamp
  href: TypeHelp.Uuid.Clamp(System.Int32,System.Int32,System.Nullable{System.Boolean}).html
  name: Clamp
  nameWithType: Uuid.Clamp
  fullName: TypeHelp.Uuid.Clamp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Tuple{System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean}
  commentId: T:System.Tuple{System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean}
  parent: System
  definition: System.Tuple`5
  href: https://learn.microsoft.com/dotnet/api/system.tuple-5
  name: Tuple<bool, int, bool, int, bool>
  nameWithType: Tuple<bool, int, bool, int, bool>
  fullName: System.Tuple<bool, int, bool, int, bool>
  nameWithType.vb: Tuple(Of Boolean, Integer, Boolean, Integer, Boolean)
  fullName.vb: System.Tuple(Of Boolean, Integer, Boolean, Integer, Boolean)
  name.vb: Tuple(Of Boolean, Integer, Boolean, Integer, Boolean)
  spec.csharp:
  - uid: System.Tuple`5
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-5
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Tuple`5
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-5
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Tuple`5
  commentId: T:System.Tuple`5
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.tuple-5
  name: Tuple<T1, T2, T3, T4, T5>
  nameWithType: Tuple<T1, T2, T3, T4, T5>
  fullName: System.Tuple<T1, T2, T3, T4, T5>
  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5)
  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5)
  name.vb: Tuple(Of T1, T2, T3, T4, T5)
  spec.csharp:
  - uid: System.Tuple`5
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-5
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: '>'
  spec.vb:
  - uid: System.Tuple`5
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-5
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: )
- uid: TypeHelp.Uuid.GetValue*
  commentId: Overload:TypeHelp.Uuid.GetValue
  href: TypeHelp.Uuid.GetValue(System.Int32,System.Int32).html
  name: GetValue
  nameWithType: Uuid.GetValue
  fullName: TypeHelp.Uuid.GetValue
- uid: TypeHelp.Uuid.IsSafeOffset*
  commentId: Overload:TypeHelp.Uuid.IsSafeOffset
  href: TypeHelp.Uuid.IsSafeOffset(System.Nullable{System.Boolean},System.Int32).html
  name: IsSafeOffset
  nameWithType: Uuid.IsSafeOffset
  fullName: TypeHelp.Uuid.IsSafeOffset
- uid: TypeHelp.Uuid.SafeOffset*
  commentId: Overload:TypeHelp.Uuid.SafeOffset
  href: TypeHelp.Uuid.SafeOffset(System.Int32).html
  name: SafeOffset
  nameWithType: Uuid.SafeOffset
  fullName: TypeHelp.Uuid.SafeOffset
- uid: TypeHelp.Uuid.SafeOffsetCheck*
  commentId: Overload:TypeHelp.Uuid.SafeOffsetCheck
  href: TypeHelp.Uuid.SafeOffsetCheck(System.Int32,System.Nullable{System.Boolean}).html
  name: SafeOffsetCheck
  nameWithType: Uuid.SafeOffsetCheck
  fullName: TypeHelp.Uuid.SafeOffsetCheck
- uid: TypeHelp.Uuid.SafeLength*
  commentId: Overload:TypeHelp.Uuid.SafeLength
  href: TypeHelp.Uuid.SafeLength(System.Int32).html
  name: SafeLength
  nameWithType: Uuid.SafeLength
  fullName: TypeHelp.Uuid.SafeLength
- uid: TypeHelp.Uuid.SafeLengthCheck*
  commentId: Overload:TypeHelp.Uuid.SafeLengthCheck
  href: TypeHelp.Uuid.SafeLengthCheck(System.Int32,System.Nullable{System.Boolean}).html
  name: SafeLengthCheck
  nameWithType: Uuid.SafeLengthCheck
  fullName: TypeHelp.Uuid.SafeLengthCheck
- uid: TypeHelp.Uuid.ToStringBinary*
  commentId: Overload:TypeHelp.Uuid.ToStringBinary
  href: TypeHelp.Uuid.ToStringBinary.html
  name: ToStringBinary
  nameWithType: Uuid.ToStringBinary
  fullName: TypeHelp.Uuid.ToStringBinary
- uid: TypeHelp.Uuid.ToStringCsv*
  commentId: Overload:TypeHelp.Uuid.ToStringCsv
  href: TypeHelp.Uuid.ToStringCsv(System.String).html
  name: ToStringCsv
  nameWithType: Uuid.ToStringCsv
  fullName: TypeHelp.Uuid.ToStringCsv
- uid: TypeHelp.Uuid.ToStringPackedHex*
  commentId: Overload:TypeHelp.Uuid.ToStringPackedHex
  href: TypeHelp.Uuid.ToStringPackedHex.html
  name: ToStringPackedHex
  nameWithType: Uuid.ToStringPackedHex
  fullName: TypeHelp.Uuid.ToStringPackedHex
- uid: TypeHelp.Uuid.ToStringPrefixed*
  commentId: Overload:TypeHelp.Uuid.ToStringPrefixed
  href: TypeHelp.Uuid.ToStringPrefixed.html
  name: ToStringPrefixed
  nameWithType: Uuid.ToStringPrefixed
  fullName: TypeHelp.Uuid.ToStringPrefixed
- uid: TypeHelp.Uuid.ToStringRfc*
  commentId: Overload:TypeHelp.Uuid.ToStringRfc
  href: TypeHelp.Uuid.ToStringRfc(TypeHelp.UuidFormat).html
  name: ToStringRfc
  nameWithType: Uuid.ToStringRfc
  fullName: TypeHelp.Uuid.ToStringRfc
- uid: TypeHelp.Uuid
  commentId: T:TypeHelp.Uuid
  parent: TypeHelp
  href: TypeHelp.Uuid.html
  name: Uuid
  nameWithType: Uuid
  fullName: TypeHelp.Uuid
- uid: TypeHelp.Uuid.#ctor*
  commentId: Overload:TypeHelp.Uuid.#ctor
  href: TypeHelp.Uuid.#ctor(System.Boolean,TypeHelp.UuidVersion,System.Byte[]).html
  name: Uuid
  nameWithType: Uuid.Uuid
  fullName: TypeHelp.Uuid.Uuid
  nameWithType.vb: Uuid.New
  fullName.vb: TypeHelp.Uuid.New
  name.vb: New
- uid: TypeHelp.FieldInfo[]
  isExternal: true
  href: TypeHelp.FieldInfo.html
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: TypeHelp.FieldInfo[]
  nameWithType.vb: FieldInfo()
  fullName.vb: TypeHelp.FieldInfo()
  name.vb: FieldInfo()
  spec.csharp:
  - uid: TypeHelp.FieldInfo
    name: FieldInfo
    href: TypeHelp.FieldInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TypeHelp.FieldInfo
    name: FieldInfo
    href: TypeHelp.FieldInfo.html
  - name: (
  - name: )
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
- uid: TypeHelp.Uuid.GetBigInteger*
  commentId: Overload:TypeHelp.Uuid.GetBigInteger
  href: TypeHelp.Uuid.GetBigInteger(System.Byte[]).html
  name: GetBigInteger
  nameWithType: Uuid.GetBigInteger
  fullName: TypeHelp.Uuid.GetBigInteger
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.biginteger
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: TypeHelp.Uuid.GetUInt16*
  commentId: Overload:TypeHelp.Uuid.GetUInt16
  href: TypeHelp.Uuid.GetUInt16(System.Byte[],System.Int32).html
  name: GetUInt16
  nameWithType: Uuid.GetUInt16
  fullName: TypeHelp.Uuid.GetUInt16
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: TypeHelp.Uuid.GetUInt32*
  commentId: Overload:TypeHelp.Uuid.GetUInt32
  href: TypeHelp.Uuid.GetUInt32(System.Byte[],System.Int32).html
  name: GetUInt32
  nameWithType: Uuid.GetUInt32
  fullName: TypeHelp.Uuid.GetUInt32
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: TypeHelp.Uuid.GetUInt64*
  commentId: Overload:TypeHelp.Uuid.GetUInt64
  href: TypeHelp.Uuid.GetUInt64(System.Byte[],System.Int32).html
  name: GetUInt64
  nameWithType: Uuid.GetUInt64
  fullName: TypeHelp.Uuid.GetUInt64
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: TypeHelp.Uuid.InvalidParamText*
  commentId: Overload:TypeHelp.Uuid.InvalidParamText
  href: TypeHelp.Uuid.InvalidParamText(System.String).html
  name: InvalidParamText
  nameWithType: Uuid.InvalidParamText
  fullName: TypeHelp.Uuid.InvalidParamText
memberLayout: SeparatePages
